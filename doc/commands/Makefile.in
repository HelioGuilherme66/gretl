topsrc = @top_srcdir@
datarootdir = @datarootdir@

CC = @CC@
CFLAGS = @CFLAGS@
MAKE = @MAKE@
INSTALL = @INSTALL@
XML_CFLAGS = @XML_CFLAGS@
XML_LIBS = @XML_LIBS@
XSLT_CFLAGS = @XSLT_CFLAGS@
XSLT_LIBS = @XSLT_LIBS@

prefix = @prefix@
datadir = @datadir@
localedir = $(datadir)/locale

have_gtk = @have_gtk@

GRETLINC = -I$(topsrc)/lib/src -I../..
GRETLLIB = ../../lib/libgretl-1.0.la

CMDSDIR = $(topsrc)/doc/commands

vpath %.c = $(CMDSDIR)
vpath %.dtd = $(CMDSDIR)
vpath %.xsl = $(CMDSDIR)

LIBTOOL = ../../libtool

CMDSDIR = $(topsrc)/doc/commands
CHAPDIR = $(topsrc)/doc/chapters
CHAPDIR_IT = $(topsrc)/doc/chapters_it
CHAPDIR_ES = $(topsrc)/doc/chapters_es
SHAREDIR = $(topsrc)/share

CMDDTD = $(CMDSDIR)/gretl_commands.dtd

CMDSRC = $(CMDSDIR)/gretl_commands.xml \
	$(CMDSDIR)/gretl_commands_es.xml \
	$(CMDSDIR)/gretl_commands_it.xml

MANXSL = $(CMDSDIR)/gretlman.xsl
HLPXSL = $(CMDSDIR)/gretltxt.xsl \
	$(CMDSDIR)/gretlhlp.xsl \
	$(CMDSDIR)/equations.xsl \

GENXSL = $(CMDSDIR)/genrhlp.xsl \
	$(CMDSDIR)/genrtxt.xsl

XMLSTRS = $(CMDSDIR)/hlp_l10n.xml $(CMDSDIR)/hlpstrs_en.xml \
  $(CMDSDIR)/hlpstrs_es.xml $(CMDSDIR)/hlpstrs_it.xml

EQNLIST = $(CMDSDIR)/eqn_list.xml
EQNXSL = $(CMDSDIR)/equations.xsl

HLPSTAMP = $(SHAREDIR)/hlp.stamp
FIGSTAMP = $(SHAREDIR)/fig.stamp
GENSTAMP = $(SHAREDIR)/gen.stamp
OUTPUT_DIR = $(SHAREDIR)

TOPICDEFS = -DLOCALEDIR=\"$(localedir)\" -DHAVE_CONFIG_H

progs: xsltrans skeleton reflow validate topiclist tables

xsltrans: xsltrans.c 
	$(CC) $(CFLAGS) $(XSLT_CFLAGS) -o $@ $^ $(XSLT_LIBS)

reflow: reflow.c
	$(CC) $(CFLAGS) -o $@ $^ 

skeleton: skeleton.o
	$(LIBTOOL) --mode=link $(CC) -o $@ $^ $(GRETLLIB)

validate: validate.o
	$(LIBTOOL) --mode=link $(CC) -o $@ $^ $(GRETLLIB)

topiclist: topiclist.o
	$(LIBTOOL) --mode=link $(CC) -o $@ $^ $(GRETLLIB)

tables: tables.o
	$(LIBTOOL) --mode=link $(CC) -o $@ $^ $(GRETLLIB)

skeleton.o: skeleton.c
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GRETLINC) -c $<

validate.o: validate.c
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GRETLINC) -c $<

topiclist.o: topiclist.c $(topsrc)/lib/src/libgretl.h
	$(CC) $(CFLAGS) $(TOPICDEFS) $(XML_CFLAGS) $(GRETLINC) -c $<

tables.o: tables.c $(topsrc)/lib/src/genmain.c \
	$(topsrc)/lib/src/monte_carlo.c
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GRETLINC) -c $<

# test generation of XML skeleton from libgretl info:
# the skeleton could be used as a template for translation
skeleton.xml: skeleton gretl_commands.dtd
	./skeleton $(CMDSDIR) > $@

$(EQNLIST): $(EQNXSL) $(CMDSDIR)/gretl_commands.xml
	xsltproc $(EQNXSL) $(CMDSDIR)/gretl_commands.xml > eqn_list.new
	if diff --brief $@ eqn_list.new	| grep eqn ; then cp eqn_list.new $@ ; fi
	rm -f eqn_list.new

$(FIGSTAMP): $(EQNLIST)
	$(topsrc)/doc/texmath2png.pl $< $(SHAREDIR)/texfigs && touch $@

# Generate "online" help files
$(HLPSTAMP): xsltrans reflow $(CMDSRC) $(CMDDTD) $(HLPXSL) $(XMLSTRS) 
	./xsltrans --hlp --markup $(CMDSDIR)/gretl_commands.xml && \
	./reflow < clilist.txt > $(SHAREDIR)/gretlcli.hlp
	if test -f cmdlist.txt ; then \
	  ./reflow --markup < cmdlist.txt > $(SHAREDIR)/gretlcmd.hlp ; \
	fi
	./reflow --markup < guilist.txt > $(OUTPUT_DIR)/gretlgui.hlp
	./xsltrans --hlp --markup $(CMDSDIR)/gretl_commands_es.xml && \
	./reflow < clilist.txt > $(SHAREDIR)/gretlcli.hlp.es
	if test -f cmdlist.txt ; then \
	  ./reflow --markup < cmdlist.txt > $(SHAREDIR)/gretlcmd.hlp.es ; \
	fi 
	./reflow --markup < guilist.txt > $(OUTPUT_DIR)/gretlgui.hlp.es
	./xsltrans --hlp --markup $(CMDSDIR)/gretl_commands_it.xml && \
	./reflow < clilist.txt > $(SHAREDIR)/gretlcli.hlp.it
	if test -f cmdlist.txt ; then \
	  ./reflow --markup < cmdlist.txt > $(SHAREDIR)/gretlcmd.hlp.it ; \
	fi
	./reflow --markup < guilist.txt > $(OUTPUT_DIR)/gretlgui.hlp.it
	touch $@

$(GENSTAMP): xsltrans reflow $(CMDSRC) $(CMDDTD) $(GENXSL) $(XMLSTRS) 
	./xsltrans --genr --markup $(CMDSDIR)/genr_funcs.xml && \
	./reflow < genrcli.txt > $(SHAREDIR)/genrcli.hlp
	if test -f genrgui.txt ; then \
	  ./reflow --markup < genrgui.txt > $(SHAREDIR)/genrgui.hlp ; \
	fi

.PHONY: test

# generate some tables for manual automatically, to ensure
# they remain in step with the actual code
textables: tables
	./tables --constants > ../tex/tabconstants.tex
	./tables --internals > ../tex/tabinternals.tex
	./tables --functions > ../tex/tabfunctions.tex
	./tables --loopcmds > ../tex/tabloopcmds.tex
	./tables --nonloopcmds > ../tex/tabnonloopcmds.tex
	touch $@

topiclist_en: topiclist $(CMDSDIR)/gretl_commands.xml
	./topiclist $(CMDSDIR)/gretl_commands.xml \
	> $(CHAPDIR)/cmdtopics.xml

topiclist_it: topiclist $(CMDSDIR)/gretl_commands_it.xml
	LANG=it_IT ./topiclist $(CMDSDIR)/gretl_commands_it.xml \
	> $(CHAPDIR_IT)/cmdtopics.xml

topiclist_es: topiclist $(CMDSDIR)/gretl_commands_es.xml
	LANG=es_ES ./topiclist $(CMDSDIR)/gretl_commands_es.xml \
	> $(CHAPDIR_ES)/cmdtopics.xml

# test validity of skeleton.xml, and ability of xsltrans
# to generate formatted output (text and XML)
test: skeleton.xml xsltrans gretlman.xsl gretltxt.xsl
	xmllint --valid --noout $< && ./xsltrans --all skeleton.xml $(CMDSDIR)

# Generate docbook XML for the command-reference section of the 
# full manual, cmdlist.xml
docbook: xsltrans $(CMDSDIR)/gretl_commands.xml $(MANXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > tmp.xml && \
	cat $(CMDSDIR)/gretl_commands.xml | grep -v DOCTYPE | \
	grep -v 'xml version' >> tmp.xml && \
	./xsltrans --docbook tmp.xml --docdir=$(CMDSDIR) && \
	cp cmdlist.xml $(CHAPDIR)/cmdlist.xml && \
	rm cmdlist.xml && rm tmp.xml

docbook_it: xsltrans $(CMDSDIR)/gretl_commands_it.xml $(MANXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > tmp.xml && \
	cat $(CMDSDIR)/gretl_commands_it.xml | grep -v DOCTYPE | \
	grep -v 'xml version' >> tmp.xml && \
	./xsltrans --docbook tmp.xml --docdir=$(CMDSDIR) && \
	echo "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>" > $(CHAPDIR_IT)/cmdlist.xml && \
	cat cmdlist.xml >> $(CHAPDIR_IT)/cmdlist.xml && \
	rm cmdlist.xml && rm tmp.xml

docbook_es: xsltrans $(CMDSDIR)/gretl_commands_es.xml $(MANXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > tmp.xml && \
	cat $(CMDSDIR)/gretl_commands_es.xml | grep -v DOCTYPE | \
	grep -v 'xml version' >> tmp.xml && \
	./xsltrans --docbook tmp.xml --docdir=$(CMDSDIR) && \
	echo "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>" > $(CHAPDIR_ES)/cmdlist.xml && \
	cat cmdlist.xml >> $(CHAPDIR_ES)/cmdlist.xml && \
	rm cmdlist.xml && rm tmp.xml

help-all: $(HLPSTAMP) $(FIGSTAMP) $(GENSTAMP)

# Validate the commands "master" XML files against libgretl
check: validate 
	-./validate $(CMDSDIR)/gretl_commands.xml
	-./validate $(CMDSDIR)/gretl_commands_es.xml
	-./validate $(CMDSDIR)/gretl_commands_it.xml

docclean:
	 rm -f skeleton.xml cmdlist.* guilist.txt clilist.txt genrcli.txt genrgui.txt

clean: docclean
	rm -f xsltrans skeleton reflow validate tables topiclist *.o
	rm -f textables topiclist_*
	rm -rf .libs
