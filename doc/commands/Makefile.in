topsrc = @top_srcdir@
here = @abs_builddir@
datarootdir = @datarootdir@

CC = @CC@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
MAKE = @MAKE@
XML_CFLAGS = @XML_CFLAGS@
XML_LIBS = @XML_LIBS@
XSLT_CFLAGS = @XSLT_CFLAGS@
XSLT_LIBS = @XSLT_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@

SSE2_OPT = @SSE2_CFLAGS@
OMP_OPT = @OPENMP_CFLAGS@

CCV = $(CC) $(SSE2_OPT) $(OMP_OPT)

prefix = @prefix@
datadir = @datadir@
localedir = $(datadir)/locale

GRETLINC = -I$(topsrc)/lib/src -I../..
GRETLLIB = ../../lib/libgretl-1.0.la

CMDSDIR = $(topsrc)/doc/commands
TEXDIR = $(topsrc)/doc/tex
SHAREDIR = $(topsrc)/share

vpath %.c = $(CMDSDIR)
vpath %.dtd = $(CMDSDIR)
vpath %.xsl = $(CMDSDIR)
vpath %.xml = $(CMDSDIR)

# abbreviations wanted at some points below
EN_SRC = $(CMDSDIR)/gretl_commands_en.xml
ES_SRC = $(CMDSDIR)/gretl_commands_es.xml
PT_SRC = $(CMDSDIR)/gretl_commands_pt.xml
IT_SRC = $(CMDSDIR)/gretl_commands_it.xml
GL_SRC = $(CMDSDIR)/gretl_commands_gl.xml
EN_FNSRC = $(CMDSDIR)/gretl_functions_en.xml
ES_FNSRC = $(CMDSDIR)/gretl_functions_es.xml
IT_FNSRC = $(CMDSDIR)/gretl_functions_it.xml
PT_FNSRC = $(CMDSDIR)/gretl_functions_pt.xml
GL_FNSRC = $(CMDSDIR)/gretl_functions_gl.xml

LIBTOOL = ../../libtool

CMDDTD = $(CMDSDIR)/gretl_commands.dtd
FNCDTD = $(CMDSDIR)/gretl_functions.dtd

HLPXSL = $(CMDSDIR)/gretltxt.xsl \
	$(CMDSDIR)/gretlhlp.xsl \
	$(CMDSDIR)/equations.xsl

TEXXSL = $(CMDSDIR)/gretltex.xsl
HTMLXSL = $(CMDSDIR)/gretlhtml.xsl

XMLSTRS = $(CMDSDIR)/hlp_l10n.xml $(CMDSDIR)/hlpstrs_en.xml \
  $(CMDSDIR)/hlpstrs_es.xml $(CMDSDIR)/hlpstrs_pt.xml \
  $(CMDSDIR)/hlpstrs_it.xml $(CMDSDIR)/hlpstrs_gl.xml

EQNLIST = $(CMDSDIR)/eqn_list.xml
EQNXSL = $(CMDSDIR)/equations.xsl

ALL_HELPFILES = gretl_cli_cmdref gretl_gui_cmdref gretl_gui_help gretl_cli_fnref gretl_gui_fnref
HELPFILES_EN = $(ALL_HELPFILES:=.en)
HELPFILES_IT = $(ALL_HELPFILES:=.it)
HELPFILES_ES = $(ALL_HELPFILES:=.es)
HELPFILES_PT = $(ALL_HELPFILES:=.pt)
HELPFILES_GL = $(ALL_HELPFILES:=.gl)

CHAPREFS = $(here)/chaprefs.xml

GRETLHDRS = $(topsrc)/lib/src/libgretl.h \
	$(topsrc)/lib/src/gretl_commands.h \
	$(topsrc)/lib/src/gretl_commands.c \
	$(topsrc)/lib/src/genlex.c \
	$(topsrc)/lib/src/genmain.c \
	$(topsrc)/lib/src/options.c

CMD_COMMON = $(CMDDTD) $(HLPXSL) $(XMLSTRS) $(CHAPREFS)
FNC_COMMON = $(FNCDTD) $(HLPXSL) $(XMLSTRS) $(CHAPREFS)

TOPICDEFS = -DLOCALEDIR=\"$(localedir)\" -DHAVE_CONFIG_H

CPROGS = xsltrans skeleton reflow bbl2txt chaprefs validate topiclist tables \
	matfuncs us2a4

progs: $(CPROGS)

xsltrans: xsltrans.c
	$(CC) $(CFLAGS) $(XSLT_CFLAGS) -o $@ $^ $(XSLT_LIBS)

reflow: reflow.c
	$(CC) $(CFLAGS) -o $@ $<

bbl2txt: bbl2txt.c
	$(CC) $(CFLAGS) -o $@ $<

chaprefs: chaprefs.c
	$(CC) $(CFLAGS) -o $@ $<

us2a4: us2a4.c
	$(CC) $(CFLAGS) -o $@ $<

skeleton: skeleton.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

validate: validate.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

topiclist: topiclist.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB) $(GLIB_LIBS)

tables: tables.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

matfuncs: matfuncs.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

skeleton.o: skeleton.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

validate.o: validate.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

topiclist.o: topiclist.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(TOPICDEFS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

tables.o: tables.c $(GRETLHDRS) $(topsrc)/lib/src/monte_carlo.c
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

matfuncs.o: matfuncs.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(TOPICDEFS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

# test generation of XML skeleton from libgretl info:
# the skeleton could be used as a template for translation
skeleton.xml: skeleton $(CMDDTD)
	./skeleton $(CMDSDIR) > $@

$(EQNLIST): $(EQNXSL) $(CMDSDIR)/gretl_commands_en.xml
	xsltproc $(EQNXSL) $(CMDSDIR)/gretl_commands_en.xml > eqn_list.new
	if diff --brief $@ eqn_list.new	| grep eqn ; then cp eqn_list.new $@ ; fi
	rm -f eqn_list.new

# we'll do the following manually only when needed: it's a bit hyperactive
figs: $(EQNLIST)
	$(topsrc)/doc/texmath2png.pl $< $(SHAREDIR)/texfigs

# Rules for "online" help files in various languages

gretl_cli_cmdref.% : gretl_commands_%.xml xsltrans reflow $(CMD_COMMON)
	./xsltrans --cmds --plain --refs=$(CHAPREFS) $< | ./reflow > $@

gretl_gui_cmdref.% : gretl_commands_%.xml xsltrans reflow $(CMD_COMMON)
	./xsltrans --cmds --pango --refs=$(CHAPREFS) $< | ./reflow -m > $@

gretl_gui_help.% : gretl_commands_%.xml xsltrans reflow $(CMD_COMMON)
	./xsltrans --gui --pango --refs=$(CHAPREFS) $< | ./reflow -m > $@

gretl_cli_fnref.% : gretl_functions_%.xml xsltrans reflow $(FNC_COMMON)
	./xsltrans --funcs --plain --refs=$(CHAPREFS) $< | ./reflow > $@

gretl_gui_fnref.%: gretl_functions_%.xml xsltrans reflow $(FNC_COMMON)
	./xsltrans --funcs --pango --refs=$(CHAPREFS) $< | ./reflow -m > $@

# English HTML help files

htmlhelp: cmdref.html funcref.html biblio.html

cmdref.html: $(EN_SRC) xsltrans reflow $(CMDDTD) $(HTMLXSL) $(XMLSTRS)
	./xsltrans --cmds --html --refs=$(CHAPREFS) $< | ./reflow --html > $@

funcref.html: $(EN_FNSRC) xsltrans reflow $(FNCDTD) $(HTMLXSL) $(XMLSTRS)
	./xsltrans --funcs --html --refs=$(CHAPREFS) $< | ./reflow --html > $@

biblio.html: bbl2txt ../tex/gretl-ref.bbl
	./bbl2txt ../tex/gretl-ref.bbl --html > $@

# Bibliography file
gretlhelp.refs: ../tex/gretl-ref.bbl bbl2txt $(HELPFILES_EN)
	./bbl2txt $< > $@

# Guide chapter titles
$(CHAPREFS): $(TEXDIR)/gretl-guide.tex chaprefs
	./chaprefs $< > $@

$(GRETLLIB):
	$(MAKE) -C ../../lib

../tex/gretl-ref.bbl:
	$(MAKE) -C ../tex gretl-ref.pdf

.PHONY: test xmlcheck

# Rules for generated TeX files wanted in the ../tex directory

../tex/tabinternals.tex: tables
	./tables --internals > $@

../tex/tabfunctions.tex: tables
	./tables --functions > $@

../tex/tabloopcmds.tex: tables
	./tables --loopcmds > $@

../tex/tabnonloopcmds.tex: tables
	./tables --nonloopcmds > $@

../tex/matfuncs.tex: $(EN_FNSRC)  matfuncs
	LANG=en_US ./matfuncs $< > $@

../tex/funcbody.tex: $(EN_FNSRC) xsltrans reflow $(FNCDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --funcs --tex $< --lang=en --docdir=$(CMDSDIR) | \
	./reflow > $@

../tex/refbody.tex: $(EN_SRC) xsltrans reflow $(CMDDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --cmds --tex $< --lang=en --docdir=$(CMDSDIR) | \
	./reflow > $@

../tex/cmdtopics.tex: $(EN_SRC) topiclist
	LANG=en_US ./topiclist $< > $@

# FIXME other languages

textables_it: tables matfuncs $(IT_FNSRC)
	./tables --internals > ../tex_it/tabinternals.tex && \
	./tables --functions > ../tex_it/tabfunctions.tex && \
	./tables --loopcmds > ../tex_it/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_it/tabnonloopcmds.tex && \
	LANG=it_IT ./matfuncs $(IT_FNSRC) > ../tex_it/matfuncs.tex && \
	touch $@

textables_es: tables matfuncs $(ES_FNSRC)
	./tables --internals > ../tex_es/tabinternals.tex && \
	./tables --functions > ../tex_es/tabfunctions.tex && \
	./tables --loopcmds > ../tex_es/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_es/tabnonloopcmds.tex && \
	LANG=es_ES ./matfuncs $(ES_FNSRC) > ../tex_es/matfuncs.tex && \
	touch $@

textables_pt: tables matfuncs $(PT_FNSRC)
	./tables --internals > ../tex_pt/tabinternals.tex && \
	./tables --functions > ../tex_pt/tabfunctions.tex && \
	./tables --loopcmds > ../tex_pt/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_pt/tabnonloopcmds.tex && \
	LANG=pt_PT ./matfuncs $(PT_FNSRC) > ../tex_pt/matfuncs.tex && \
	touch $@

textables_gl: tables matfuncs $(GL_FNSRC)
	./tables --internals > ../tex_gl/tabinternals.tex && \
	./tables --functions > ../tex_gl/tabfunctions.tex && \
	./tables --loopcmds > ../tex_gl/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_gl/tabnonloopcmds.tex && \
	LANG=gl_ES ./matfuncs $(GL_FNSRC) > ../tex_gl/matfuncs.tex && \
	touch $@

functex_it: xsltrans reflow $(IT_FNSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --funcs --tex $(IT_FNSRC) --lang=it --docdir=$(CMDSDIR) | \
	./reflow > ../tex_it/funcbody.tex && touch $@

functex_es: xsltrans reflow $(ES_FNSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --funcs --tex $(ES_FNSRC) --lang=es --docdir=$(CMDSDIR) | \
	./reflow > ../tex_es/funcbody.tex && touch $@

functex_pt: xsltrans reflow $(PT_FNSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --funcs --tex $(PT_FNSRC) --lang=pt --docdir=$(CMDSDIR) | \
	./reflow > ../tex_pt/funcbody.tex && touch $@

functex_gl: xsltrans reflow $(GL_FNSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --funcs --tex $(GL_FNSRC) --lang=gl --docdir=$(CMDSDIR) | \
	./reflow > ../tex_gl/funcbody.tex && touch $@

cmdtex_it: xsltrans reflow $(IT_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --cmds --tex $(IT_SRC) --lang=it --docdir=$(CMDSDIR) | \
	./reflow > ../tex_it/refbody.tex && touch $@

cmdtex_es: xsltrans reflow $(ES_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --cmds --tex $(ES_SRC) --lang=es --docdir=$(CMDSDIR) | \
	./reflow > ../tex_es/refbody.tex && touch $@

cmdtex_pt: xsltrans reflow $(PT_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --cmds --tex $(PT_SRC) --lang=pt --docdir=$(CMDSDIR) | \
	./reflow > ../tex_pt/refbody.tex && touch $@

cmdtex_gl: xsltrans reflow $(GL_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --cmds --tex $(GL_SRC) --lang=gl --docdir=$(CMDSDIR) | \
	./reflow > ../tex_gl/refbody.tex && touch $@

topiclist_it: topiclist $(IT_SRC)
	LANG=it_IT ./topiclist $(IT_SRC) > ../tex_it/cmdtopics.tex && touch $@

topiclist_es: topiclist $(ES_SRC)
	LANG=es_ES ./topiclist $(ES_SRC) > ../tex_es/cmdtopics.tex && touch $@

topiclist_pt: topiclist $(PT_SRC)
	LANG=pt_PT ./topiclist $(PT_SRC) > ../tex_pt/cmdtopics.tex && touch $@

topiclist_gl: topiclist $(GL_SRC)
	LANG=gl_ES ./topiclist $(GL_SRC) > ../tex_gl/cmdtopics.tex && touch $@

# test validity of skeleton.xml
test: skeleton.xml
	xmllint --valid --noout $<

help-en: $(CHAPREFS) $(HELPFILES_EN)

help-it: $(CHAPREFS) $(HELPFILES_IT)

help-pt: $(CHAPREFS) $(HELPFILES_PT)

help-gl: $(CHAPREFS) $(HELPFILES_GL)

help-es: $(CHAPREFS) $(HELPFILES_ES)

help-all: help-en help-it help-pt help-gl help-es gretlhelp.refs

# Validate the commands "master" XML files against libgretl
# By default we check the English-language files
check: validate
	-./validate $(EN_SRC)
	-./validate $(EN_FNSRC)

check-it: validate
	-./validate $(IT_SRC)
	-./validate $(IT_FNSRC)

check-pt: validate
	-./validate $(PT_SRC)
	-./validate $(PT_FNSRC)

check-gl: validate
	-./validate $(GL_SRC)
	-./validate $(GL_FNSRC)

check-es: validate
	-./validate $(ES_SRC)
	-./validate $(ES_FNSRC)

xmlcheck:
	cd $(CMDSDIR) && ./checkxml.sh

docclean:
	rm -f $(EN_CMDREF_STAMP) $(ES_CMDREF_STAMP)
	rm -f $(IT_CMDREF_STAMP) $(PT_CMDREF_STAMP) $(GL_CMDREF_STAMP)
	rm -f $(EN_FNREF_STAMP) $(ES_FNREF_STAMP)
	rm -f $(IT_FNREF_STAMP) $(PT_FNREF_STAMP) $(GL_FNREF_STAMP)
	rm -f *.txt *.tmp

clean: docclean
	rm -f $(CPROGS) *.o
	rm -f textables* cmdtex* functex* topiclist_*
	rm -rf .libs

distclean: clean
	rm -f Makefile
