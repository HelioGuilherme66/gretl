topsrc = @top_srcdir@
datarootdir = @datarootdir@

CC = @CC@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
MAKE = @MAKE@
XML_CFLAGS = @XML_CFLAGS@
XML_LIBS = @XML_LIBS@
XSLT_CFLAGS = @XSLT_CFLAGS@
XSLT_LIBS = @XSLT_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@

SSE2_OPT = @SSE2_CFLAGS@
OMP_OPT = @OPENMP_CFLAGS@

CCV = $(CC) $(SSE2_OPT) $(OMP_OPT)

prefix = @prefix@
datadir = @datadir@
localedir = $(datadir)/locale

GRETLINC = -I$(topsrc)/lib/src -I../..
GRETLLIB = ../../lib/libgretl-1.0.la

CMDSDIR = $(topsrc)/doc/commands

vpath %.c = $(CMDSDIR)
vpath %.dtd = $(CMDSDIR)
vpath %.xsl = $(CMDSDIR)

LIBTOOL = ../../libtool

CMDSDIR = $(topsrc)/doc/commands
TEXDIR = $(topsrc)/doc/tex
SHAREDIR = $(topsrc)/share

CMDDTD = $(CMDSDIR)/gretl_commands.dtd
EN_SRC = $(CMDSDIR)/gretl_commands_en.xml
ES_SRC = $(CMDSDIR)/gretl_commands_es.xml
PT_SRC = $(CMDSDIR)/gretl_commands_pt.xml
IT_SRC = $(CMDSDIR)/gretl_commands_it.xml

FNCDTD = $(CMDSDIR)/gretl_functions.dtd
EN_FNSRC = $(CMDSDIR)/gretl_functions_en.xml
IT_FNSRC = $(CMDSDIR)/gretl_functions_it.xml
PT_FNSRC = $(CMDSDIR)/gretl_functions_pt.xml

HLPXSL = $(CMDSDIR)/gretltxt.xsl \
	$(CMDSDIR)/gretlhlp.xsl \
	$(CMDSDIR)/equations.xsl 

TEXXSL = $(CMDSDIR)/gretltex.xsl
HTMLXSL = $(CMDSDIR)/gretlhtml.xsl

XMLSTRS = $(CMDSDIR)/hlp_l10n.xml $(CMDSDIR)/hlpstrs_en.xml \
  $(CMDSDIR)/hlpstrs_es.xml $(CMDSDIR)/hlpstrs_pt.xml $(CMDSDIR)/hlpstrs_it.xml

EQNLIST = $(CMDSDIR)/eqn_list.xml
EQNXSL = $(CMDSDIR)/equations.xsl

EN_CMDREF_STAMP = $(SHAREDIR)/cmdref_en.stamp
ES_CMDREF_STAMP = $(SHAREDIR)/cmdref_es.stamp
IT_CMDREF_STAMP = $(SHAREDIR)/cmdref_it.stamp
PT_CMDREF_STAMP = $(SHAREDIR)/cmdref_pt.stamp

EN_FNREF_STAMP = $(SHAREDIR)/fnref_en.stamp
ES_FNREF_STAMP = $(SHAREDIR)/fnref_es.stamp
IT_FNREF_STAMP = $(SHAREDIR)/fnref_it.stamp
PT_FNREF_STAMP = $(SHAREDIR)/fnref_pt.stamp

CLI_CMDREF = gretl_cli_cmdref
GUI_CMDREF = gretl_gui_cmdref
GUI_HELP   = gretl_gui_help
CLI_FNREF  = gretl_cli_fnref
GUI_FNREF  = gretl_gui_fnref

FIGSTAMP = $(SHAREDIR)/fig.stamp
HELPREFS = $(SHAREDIR)/gretlhelp.refs
CHAPREFS = $(CMDSDIR)/chaprefs.xml

GRETLHDRS = $(topsrc)/lib/src/libgretl.h \
	$(topsrc)/lib/src/gretl_commands.h \
	$(topsrc)/lib/src/gretl_commands.c \
	$(topsrc)/lib/src/genlex.c \
	$(topsrc)/lib/src/genmain.c \
	$(topsrc)/lib/src/options.c

TOPICDEFS = -DLOCALEDIR=\"$(localedir)\" -DHAVE_CONFIG_H

CPROGS = xsltrans skeleton reflow bbl2txt chaprefs validate topiclist tables \
	matfuncs us2a4

progs: $(CPROGS)

xsltrans: xsltrans.c 
	$(CC) $(CFLAGS) $(XSLT_CFLAGS) -o $@ $^ $(XSLT_LIBS)

reflow: reflow.c
	$(CC) $(CFLAGS) -o $@ $<

bbl2txt: bbl2txt.c
	$(CC) $(CFLAGS) -o $@ $<

chaprefs: chaprefs.c
	$(CC) $(CFLAGS) -o $@ $<

us2a4: us2a4.c
	$(CC) $(CFLAGS) -o $@ $<

skeleton: skeleton.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

validate: validate.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

topiclist: topiclist.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB) $(GLIB_LIBS)

tables: tables.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

matfuncs: matfuncs.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

skeleton.o: skeleton.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

validate.o: validate.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

topiclist.o: topiclist.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(TOPICDEFS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

tables.o: tables.c $(GRETLHDRS) $(topsrc)/lib/src/monte_carlo.c
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

matfuncs.o: matfuncs.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(TOPICDEFS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

# test generation of XML skeleton from libgretl info:
# the skeleton could be used as a template for translation
skeleton.xml: skeleton $(CMDDTD)
	./skeleton $(CMDSDIR) > $@

$(EQNLIST): $(EQNXSL) $(CMDSDIR)/gretl_commands.xml
	xsltproc $(EQNXSL) $(CMDSDIR)/gretl_commands.xml > eqn_list.new
	if diff --brief $@ eqn_list.new	| grep eqn ; then cp eqn_list.new $@ ; fi
	rm -f eqn_list.new

# we'll do the following manually: it's a bit hyperactive
$(FIGSTAMP): $(EQNLIST)
	$(topsrc)/doc/texmath2png.pl $< $(SHAREDIR)/texfigs && touch $@

# English "online" help files
$(EN_CMDREF_STAMP): xsltrans reflow $(EN_SRC) $(CMDDTD) $(HLPXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --cmds --plain $(EN_SRC) > en1.tmp && \
	./reflow < en1.tmp > $(SHAREDIR)/$(CLI_CMDREF).en && \
	./xsltrans --cmds --pango $(EN_SRC) > en1.tmp && \
	./reflow -m < en1.tmp > $(SHAREDIR)/$(GUI_CMDREF).en && \
	./xsltrans --gui --pango $(EN_SRC) > en1.tmp && \
	./reflow -m < en1.tmp > $(SHAREDIR)/$(GUI_HELP).en && \
	touch $@ && rm -f en1.tmp

# Spanish "online" help files
$(ES_CMDREF_STAMP): xsltrans reflow $(ES_SRC) $(CMDDTD) $(HLPXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --cmds --plain $(ES_SRC) > es1.tmp && \
	./reflow < es1.tmp > $(SHAREDIR)/$(CLI_CMDREF).es && \
	./xsltrans --cmds --pango $(ES_SRC) > es1.tmp && \
	./reflow -m < es1.tmp > $(SHAREDIR)/$(GUI_CMDREF).es \
	./xsltrans --gui --pango $(ES_SRC) > es1.tmp && \
	./reflow -m < es1.tmp > $(SHAREDIR)/$(GUI_HELP).es && \
	touch $@ && rm -f es1.tmp

# Italian "online" help files
$(IT_CMDREF_STAMP): xsltrans reflow $(IT_SRC) $(CMDDTD) $(HLPXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --cmds --plain $(IT_SRC) > it1.tmp && \
	./reflow < it1.tmp > $(SHAREDIR)/$(CLI_CMDREF).it && \
	./xsltrans --cmds --pango $(IT_SRC) > it1.tmp && \
	./reflow -m < it1.tmp > $(SHAREDIR)/$(GUI_CMDREF).it && \
	./xsltrans --gui --pango $(IT_SRC) > it1.tmp && \
	./reflow -m < it1.tmp > $(SHAREDIR)/$(GUI_HELP).it && \
	touch $@ && rm -f it1.tmp

# Portuguese "online" help files
$(PT_CMDREF_STAMP): xsltrans reflow $(PT_SRC) $(CMDDTD) $(HLPXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --cmds --plain $(PT_SRC) > pt1.tmp && \
	./reflow < pt1.tmp > $(SHAREDIR)/$(CLI_CMDREF).pt && \
	./xsltrans --cmds --pango $(PT_SRC) > pt1.tmp && \
	./reflow -m < pt1.tmp > $(SHAREDIR)/$(GUI_CMDREF).pt && \
	./xsltrans --gui --pango $(PT_SRC) > pt1.tmp && \
	./reflow -m < pt1.tmp > $(SHAREDIR)/$(GUI_HELP).pt && \
	touch $@ && rm -f pt1.tmp

# English function reference files
$(EN_FNREF_STAMP): xsltrans reflow $(EN_FNSRC) $(FNCDTD) $(HLPXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --funcs --plain $(EN_FNSRC) > en2.tmp && \
	./reflow < en2.tmp > $(SHAREDIR)/$(CLI_FNREF).en && \
	./xsltrans --funcs --pango $(EN_FNSRC) > en2.tmp && \
	./reflow -m < en2.tmp > $(SHAREDIR)/$(GUI_FNREF).en && \
	touch $@ && rm -f en2.tmp

# Italian function reference files
$(IT_FNREF_STAMP): xsltrans reflow $(IT_FNSRC) $(FNCDTD) $(HLPXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --funcs --plain $(IT_FNSRC) > it2.tmp && \
	./reflow < it2.tmp > $(SHAREDIR)/$(CLI_FNREF).it && \
	./xsltrans --funcs --pango $(IT_FNSRC) > it2.tmp && \
	./reflow -m < it2.tmp > $(SHAREDIR)/$(GUI_FNREF).it && \
	touch $@ && rm -f it2.tmp

# Portuguese function reference files
$(PT_FNREF_STAMP): xsltrans reflow $(PT_FNSRC) $(FNCDTD) $(HLPXSL) $(XMLSTRS) $(CHAPREFS)
	./xsltrans --funcs --plain $(PT_FNSRC) > pt2.tmp && \
	./reflow < pt2.tmp > $(SHAREDIR)/$(CLI_FNREF).pt && \
	./xsltrans --funcs --pango $(PT_FNSRC) > pt2.tmp && \
	./reflow -m < pt2.tmp > $(SHAREDIR)/$(GUI_FNREF).pt && \
	touch $@ && rm -f pt2.tmp

# English HTML help files (experimental)

htmlhelp: cmdref.html funcref.html biblio.html

cmdref.html: xsltrans reflow $(EN_SRC) $(CMDDTD) $(HTMLXSL) $(XMLSTRS)
	./xsltrans --cmds --html $(EN_SRC) | ./reflow --html > $@

funcref.html: xsltrans reflow $(EN_FNSRC) $(FNCDTD) $(HTMLXSL) $(XMLSTRS) 
	./xsltrans --funcs --html $(EN_FNSRC) | ./reflow --html > $@

biblio.html: bbl2txt ../tex/gretl-ref.bbl
	./bbl2txt ../tex/gretl-ref.bbl --html > $@

# Bibliography file
$(HELPREFS): bbl2txt $(EN_CMDREF_STAMP) $(EN_FNREF_STAMP) ../tex/gretl-ref.bbl
	./bbl2txt ../tex/gretl-ref.bbl > $@

# Guide chapter titles
$(CHAPREFS): chaprefs ../tex/gretl-guide.tex
	./chaprefs $(TEXDIR)/gretl-guide.tex > $@

$(GRETLLIB):
	$(MAKE) -C ../../lib

../tex/gretl-ref.bbl:
	$(MAKE) -C ../tex gretl-ref.pdf

.PHONY: test

# generate some reference tables automatically, to ensure
# they remain in step with the actual code
textables: tables matfuncs $(EN_FNSRC)
	./tables --internals > ../tex/tabinternals.tex && \
	./tables --functions > ../tex/tabfunctions.tex && \
	./tables --loopcmds > ../tex/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex/tabnonloopcmds.tex && \
	LANG=en_US ./matfuncs $(EN_FNSRC) > ../tex/matfuncs.tex && \
	touch $@

textables_it: tables matfuncs $(IT_FNSRC)
	./tables --internals > ../tex_it/tabinternals.tex && \
	./tables --functions > ../tex_it/tabfunctions.tex && \
	./tables --loopcmds > ../tex_it/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_it/tabnonloopcmds.tex && \
	LANG=it_IT ./matfuncs $(IT_FNSRC) > ../tex_it/matfuncs.tex && \
	touch $@

textables_es: tables matfuncs $(ES_FNSRC)
	./tables --internals > ../tex_es/tabinternals.tex && \
	./tables --functions > ../tex_es/tabfunctions.tex && \
	./tables --loopcmds > ../tex_es/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_es/tabnonloopcmds.tex && \
	LANG=es_ES ./matfuncs $(ES_FNSRC) > ../tex_es/matfuncs.tex && \
	touch $@

textables_pt: tables matfuncs $(PT_FNSRC)
	./tables --internals > ../tex_pt/tabinternals.tex && \
	./tables --functions > ../tex_pt/tabfunctions.tex && \
	./tables --loopcmds > ../tex_pt/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_pt/tabnonloopcmds.tex && \
	LANG=pt_PT ./matfuncs $(PT_FNSRC) > ../tex_pt/matfuncs.tex && \
	touch $@

functex: xsltrans reflow $(EN_FNSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ftex.xml && \
	cat $(EN_FNSRC) | grep -v DOCTYPE | grep -v 'xml version' >> ftex.xml && \
	./xsltrans --funcs --tex ftex.xml --docdir=$(CMDSDIR) | \
	./reflow > ../tex/funcbody.tex && rm ftex.xml && touch $@

functex_it: xsltrans reflow $(IT_FNSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ftex_it.xml && \
	cat $(IT_FNSRC) | grep -a -v DOCTYPE | grep -a -v 'xml version' >> ftex_it.xml && \
	./xsltrans --funcs --tex ftex_it.xml --docdir=$(CMDSDIR) | \
	./reflow > ../tex_it/funcbody.tex && rm ftex_it.xml && touch $@

functex_pt: xsltrans reflow $(PT_FNSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ftex_pt.xml && \
	cat $(PT_FNSRC) | recode u8..l1 | grep -a -v DOCTYPE | grep -a -v 'xml version' >> ftex_pt.xml && \
	./xsltrans --funcs --tex ftex_pt.xml --docdir=$(CMDSDIR) | \
	./reflow > ../tex_pt/funcbody.tex && rm ftex_pt.xml && touch $@

cmdtex: xsltrans reflow $(EN_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ctex.xml && \
	cat $(EN_SRC) | grep -v DOCTYPE | grep -v 'xml version' >> ctex.xml && \
	./xsltrans --cmds --tex ctex.xml --docdir=$(CMDSDIR) | \
	./reflow > ../tex/refbody.tex && rm ctex.xml && touch $@

cmdtex_it: xsltrans reflow $(IT_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ctex_it.xml && \
	cat $(IT_SRC) | grep -a -v DOCTYPE | grep -a -v 'xml version' >> ctex_it.xml && \
	./xsltrans --cmds --tex ctex_it.xml --docdir=$(CMDSDIR) | \
	./reflow > ../tex_it/refbody.tex && rm ctex_it.xml && touch $@

cmdtex_es: xsltrans reflow $(ES_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ctex_es.xml && \
	cat $(ES_SRC) | grep -a -v DOCTYPE | grep -a -v 'xml version' >> ctex_es.xml && \
	./xsltrans --cmds --tex ctex_es.xml --docdir=$(CMDSDIR) | \
	./reflow > ../tex_es/refbody.tex && rm ctex_es.xml && touch $@

cmdtex_pt: xsltrans reflow $(PT_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ctex_pt.xml && \
	cat $(PT_SRC) | grep -a -v DOCTYPE | grep -a -v 'xml version' >> ctex_pt.xml && \
	./xsltrans --cmds --tex ctex_pt.xml --docdir=$(CMDSDIR) | \
	./reflow > ../tex_pt/refbody.tex && rm ctex_pt.xml && touch $@

topiclist_en: topiclist $(EN_SRC)
	LANG=en_US ./topiclist $(EN_SRC) > ../tex/cmdtopics.tex && touch $@

topiclist_it: topiclist $(IT_SRC)
	LANG=it_IT ./topiclist $(IT_SRC) > ../tex_it/cmdtopics.tex && touch $@ 

topiclist_es: topiclist $(ES_SRC)
	LANG=es_ES ./topiclist $(ES_SRC) > ../tex_es/cmdtopics.tex && touch $@ 

topiclist_pt: topiclist $(PT_SRC)
	LANG=pt_PT ./topiclist $(PT_SRC) > ../tex_pt/cmdtopics.tex && touch $@ 

# test validity of skeleton.xml
test: skeleton.xml
	xmllint --valid --noout $<

help-en: $(CHAPREFS) $(EN_CMDREF_STAMP) $(EN_FNREF_STAMP)

help-it: $(CHAPREFS) $(IT_CMDREF_STAMP) $(IT_FNREF_STAMP)

help-pt: $(CHAPREFS) $(PT_CMDREF_STAMP) $(PT_FNREF_STAMP)

help-all: help-en help-it help-pt $(HELPREFS)

# Validate the commands "master" XML files against libgretl
# By default we check the English-language files
check: validate 
	-./validate $(EN_SRC)
	-./validate $(EN_FNSRC)

check-it: validate 
	-./validate $(IT_SRC)
	-./validate $(IT_FNSRC)

check-pt: validate 
	-./validate $(PT_SRC)
	-./validate $(PT_FNSRC)

docclean:
	rm -f $(EN_CMDREF_STAMP) $(ES_CMDREF_STAMP)
	rm -f $(IT_CMDREF_STAMP) $(PT_CMDREF_STAMP)
	rm -f $(EN_FNREF_STAMP) $(ES_FNREF_STAMP)
	rm -f $(IT_FNREF_STAMP) $(PT_FNREF_STAMP)
	rm -f *.txt *.tmp

clean: docclean
	rm -f $(CPROGS) *.o
	rm -f textables cmdtex* functex* topiclist_*
	rm -rf .libs

distclean: clean
	rm -f Makefile
