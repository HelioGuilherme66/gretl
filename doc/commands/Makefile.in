topsrc = @top_srcdir@
datarootdir = @datarootdir@

CC = @CC@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
MAKE = @MAKE@
XML_CFLAGS = @XML_CFLAGS@
XML_LIBS = @XML_LIBS@
XSLT_CFLAGS = @XSLT_CFLAGS@
XSLT_LIBS = @XSLT_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@

SSE2_OPT = @SSE2_CFLAGS@
OMP_OPT = @OPENMP_CFLAGS@

CCV = $(CC) $(SSE2_OPT) $(OMP_OPT)

prefix = @prefix@
datadir = @datadir@
localedir = $(datadir)/locale

GRETLINC = -I$(topsrc)/lib/src -I../..
GRETLLIB = ../../lib/libgretl-1.0.la

CMDSDIR = $(topsrc)/doc/commands

vpath %.c = $(CMDSDIR)
vpath %.dtd = $(CMDSDIR)
vpath %.xsl = $(CMDSDIR)

LIBTOOL = ../../libtool

CMDSDIR = $(topsrc)/doc/commands
SHAREDIR = $(topsrc)/share

CMDDTD = $(CMDSDIR)/gretl_commands.dtd

EN_SRC = $(CMDSDIR)/gretl_commands.xml
ES_SRC = $(CMDSDIR)/gretl_commands_es.xml
PT_SRC = $(CMDSDIR)/gretl_commands_pt.xml
IT_SRC = $(CMDSDIR)/gretl_commands_it.xml

FNCDTD = $(CMDSDIR)/genr_funcs.dtd

EN_FNCSRC = $(CMDSDIR)/genr_funcs.xml
IT_FNCSRC = $(CMDSDIR)/genr_funcs_it.xml
PT_FNCSRC = $(CMDSDIR)/genr_funcs_pt.xml

HLPXSL = $(CMDSDIR)/gretltxt.xsl \
	$(CMDSDIR)/gretlhlp.xsl \
	$(CMDSDIR)/equations.xsl 

TEXXSL = $(CMDSDIR)/gretltex.xsl
HTMLXSL = $(CMDSDIR)/gretlhtml.xsl

XMLSTRS = $(CMDSDIR)/hlp_l10n.xml $(CMDSDIR)/hlpstrs_en.xml \
  $(CMDSDIR)/hlpstrs_es.xml $(CMDSDIR)/hlpstrs_pt.xml $(CMDSDIR)/hlpstrs_it.xml

EQNLIST = $(CMDSDIR)/eqn_list.xml
EQNXSL = $(CMDSDIR)/equations.xsl

EN_HLPSTAMP = $(SHAREDIR)/hlp.stamp
ES_HLPSTAMP = $(SHAREDIR)/hlp_es.stamp
IT_HLPSTAMP = $(SHAREDIR)/hlp_it.stamp
PT_HLPSTAMP = $(SHAREDIR)/hlp_pt.stamp

EN_GENSTAMP = $(SHAREDIR)/gen.stamp
ES_GENSTAMP = $(SHAREDIR)/gen_es.stamp
IT_GENSTAMP = $(SHAREDIR)/gen_it.stamp
PT_GENSTAMP = $(SHAREDIR)/gen_pt.stamp

FIGSTAMP = $(SHAREDIR)/fig.stamp
HELPREFS = $(SHAREDIR)/gretlhelp.refs

GRETLHDRS = $(topsrc)/lib/src/libgretl.h \
	$(topsrc)/lib/src/gretl_commands.h \
	$(topsrc)/lib/src/gretl_commands.c \
	$(topsrc)/lib/src/genlex.c \
	$(topsrc)/lib/src/genmain.c \
	$(topsrc)/lib/src/options.c

TOPICDEFS = -DLOCALEDIR=\"$(localedir)\" -DHAVE_CONFIG_H

CPROGS = xsltrans skeleton reflow bbl2txt validate topiclist tables matfuncs us2a4

progs: $(CPROGS)

xsltrans: xsltrans.c 
	$(CC) $(CFLAGS) $(XSLT_CFLAGS) -o $@ $^ $(XSLT_LIBS)

reflow: reflow.c
	$(CC) $(CFLAGS) -o $@ $< 

bbl2txt: bbl2txt.c
	$(CC) $(CFLAGS) -o $@ $< 

us2a4: us2a4.c
	$(CC) $(CFLAGS) -o $@ $< 

skeleton: skeleton.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

validate: validate.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

topiclist: topiclist.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB) $(GLIB_LIBS)

tables: tables.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

matfuncs: matfuncs.o $(GRETLLIB)
	$(LIBTOOL) --mode=link $(CCV) $(LDFLAGS) -o $@ $^ $(GRETLLIB)

skeleton.o: skeleton.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

validate.o: validate.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

topiclist.o: topiclist.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(TOPICDEFS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

tables.o: tables.c $(GRETLHDRS) $(topsrc)/lib/src/monte_carlo.c
	$(CC) $(CFLAGS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

matfuncs.o: matfuncs.c $(GRETLHDRS)
	$(CC) $(CFLAGS) $(TOPICDEFS) $(XML_CFLAGS) $(GLIB_CFLAGS) $(GRETLINC) -c $<

# test generation of XML skeleton from libgretl info:
# the skeleton could be used as a template for translation
skeleton.xml: skeleton gretl_commands.dtd
	./skeleton $(CMDSDIR) > $@

$(EQNLIST): $(EQNXSL) $(CMDSDIR)/gretl_commands.xml
	xsltproc $(EQNXSL) $(CMDSDIR)/gretl_commands.xml > eqn_list.new
	if diff --brief $@ eqn_list.new	| grep eqn ; then cp eqn_list.new $@ ; fi
	rm -f eqn_list.new

# we'll do the following manually: it's a bit hyperactive
$(FIGSTAMP): $(EQNLIST)
	$(topsrc)/doc/texmath2png.pl $< $(SHAREDIR)/texfigs && touch $@

# English "online" help files
$(EN_HLPSTAMP): xsltrans reflow $(EN_SRC) $(CMDDTD) $(HLPXSL) $(XMLSTRS)
	./xsltrans --cmds --plain --output=cmd1.tmp $(EN_SRC) && \
	./reflow < cmd1.tmp > $(SHAREDIR)/gretlcli.hlp && rm cmd1.tmp
	./xsltrans --cmds --pango --output=cmd2.tmp $(EN_SRC) && \
	./reflow --markup < cmd2.tmp > $(SHAREDIR)/gretlcmd.hlp && rm cmd2.tmp
	./xsltrans --gui --pango --output=cmd3.tmp $(EN_SRC) && \
	./reflow --markup < cmd3.tmp > $(SHAREDIR)/gretlgui.hlp && rm cmd3.tmp && \
	touch $@

# Spanish "online" help files
$(ES_HLPSTAMP): xsltrans reflow $(ES_SRC) $(CMDDTD) $(HLPXSL) $(XMLSTRS)
	./xsltrans --cmds --plain --output=cmd1_es.tmp $(ES_SRC) && \
	./reflow < cmd1_es.tmp > $(SHAREDIR)/gretlcli.hlp.es && rm cmd1_es.tmp
	./xsltrans --cmds --pango --output=cmd2_es.tmp $(ES_SRC) && \
	./reflow --markup < cmd2_es.tmp > $(SHAREDIR)/gretlcmd.hlp.es && rm cmd2_es.tmp
	./xsltrans --gui --pango --output=cmd3_es.tmp $(ES_SRC) && \
	./reflow --markup < cmd3_es.tmp > $(SHAREDIR)/gretlgui.hlp.es && rm cmd3_es.tmp && \
	touch $@

# Italian "online" help files
$(IT_HLPSTAMP): xsltrans reflow $(IT_SRC) $(CMDDTD) $(HLPXSL) $(XMLSTRS)
	./xsltrans --cmds --plain --output=cmd1_it.tmp $(IT_SRC) && \
	./reflow < cmd1_it.tmp > $(SHAREDIR)/gretlcli.hlp.it && rm cmd1_it.tmp
	./xsltrans --cmds --pango --output=cmd2_it.tmp $(IT_SRC) && \
	./reflow --markup < cmd2_it.tmp > $(SHAREDIR)/gretlcmd.hlp.it && rm cmd2_it.tmp
	./xsltrans --gui --pango --output=cmd3_it.tmp $(IT_SRC) && \
	./reflow --markup < cmd3_it.tmp > $(SHAREDIR)/gretlgui.hlp.it && rm cmd3_it.tmp && \
	touch $@

# Portuguese "online" help files
$(PT_HLPSTAMP): xsltrans reflow $(PT_SRC) $(CMDDTD) $(HLPXSL) $(XMLSTRS)
	./xsltrans --cmds --plain --output=cmd1_pt.tmp $(PT_SRC) && \
	./reflow < cmd1_pt.tmp > $(SHAREDIR)/gretlcli.hlp.pt && rm cmd1_pt.tmp
	./xsltrans --cmds --pango --output=cmd2_pt.tmp $(PT_SRC) && \
	./reflow --markup < cmd2_pt.tmp > $(SHAREDIR)/gretlcmd.hlp.pt && rm cmd2_pt.tmp
	./xsltrans --gui --pango --output=cmd3_pt.tmp $(PT_SRC) && \
	./reflow --markup < cmd3_pt.tmp > $(SHAREDIR)/gretlgui.hlp.pt && rm cmd3_pt.tmp && \
	touch $@

# English function reference files
$(EN_GENSTAMP): xsltrans reflow $(EN_FNCSRC) $(FNCDTD) $(HLPXSL) $(XMLSTRS) 
	./xsltrans --funcs --plain --output=fn1.tmp $(EN_FNCSRC) && \
	./reflow < fn1.tmp > $(SHAREDIR)/genrcli.hlp && rm fn1.tmp
	./xsltrans --funcs --pango --output=fn2.tmp $(EN_FNCSRC) && \
	./reflow --markup < fn2.tmp > $(SHAREDIR)/genrgui.hlp && rm fn2.tmp && \
	touch $@

# Italian function reference files
$(IT_GENSTAMP): xsltrans reflow $(IT_FNCSRC) $(FNCDTD) $(HLPXSL) $(XMLSTRS)
	./xsltrans --funcs --plain --output=fn1_it.tmp $(IT_FNCSRC) && \
	./reflow < fn1_it.tmp > $(SHAREDIR)/genrcli.hlp.it && rm fn1_it.tmp
	./xsltrans --funcs --pango --output=fn2_it.tmp $(IT_FNCSRC) && \
	./reflow --markup < fn2_it.tmp > $(SHAREDIR)/genrgui.hlp.it && rm fn2_it.tmp && \
	touch $@

# Portuguese function reference files
$(PT_GENSTAMP): xsltrans reflow $(PT_FNCSRC) $(FNCDTD) $(HLPXSL) $(XMLSTRS) 
	./xsltrans --funcs --plain --output=fn1_pt.tmp $(PT_FNCSRC) && \
	./reflow < fn1_pt.tmp > $(SHAREDIR)/genrcli.hlp.pt && rm fn1_pt.tmp
	./xsltrans --funcs --pango --output=fn2_pt.tmp $(PT_FNCSRC) && \
	./reflow --markup < fn2_pt.tmp > $(SHAREDIR)/genrgui.hlp.pt && rm fn2_pt.tmp && \
	touch $@

# English HTML help files (experimental)

htmlhelp: cmdref.html funcref.html biblio.html

cmdref.html: xsltrans reflow $(EN_SRC) $(CMDDTD) $(HTMLXSL) $(XMLSTRS)
	./xsltrans --cmds --html --output=html1.tmp $(EN_SRC) && \
	./reflow --html < html1.tmp > $@ && rm html1.tmp

funcref.html: xsltrans reflow $(EN_FNCSRC) $(FNCDTD) $(HTMLXSL) $(XMLSTRS) 
	./xsltrans --funcs --html --output=html2.tmp $(EN_FNCSRC) && \
	./reflow --html < html2.tmp > $@ && rm html2.tmp

biblio.html: bbl2txt ../tex/gretl-ref.bbl
	./bbl2txt ../tex/gretl-ref.bbl --html > $@

# Bibliography file
$(HELPREFS): bbl2txt $(EN_HLPSTAMP) $(EN_GENSTAMP) ../tex/gretl-ref.bbl
	./bbl2txt ../tex/gretl-ref.bbl > $@

$(GRETLLIB):
	$(MAKE) -C ../../lib

../tex/gretl-ref.bbl:
	$(MAKE) -C ../tex gretl-ref.pdf

.PHONY: test

# generate some reference tables automatically, to ensure
# they remain in step with the actual code
textables: tables matfuncs $(EN_FNCSRC)
	./tables --internals > ../tex/tabinternals.tex && \
	./tables --functions > ../tex/tabfunctions.tex && \
	./tables --loopcmds > ../tex/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex/tabnonloopcmds.tex && \
	LANG=en_US ./matfuncs $(EN_FNCSRC) > ../tex/matfuncs.tex && \
	touch $@

textables_it: tables matfuncs $(IT_FNCSRC)
	./tables --internals > ../tex_it/tabinternals.tex && \
	./tables --functions > ../tex_it/tabfunctions.tex && \
	./tables --loopcmds > ../tex_it/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_it/tabnonloopcmds.tex && \
	LANG=it_IT ./matfuncs $(IT_FNCSRC) > ../tex_it/matfuncs.tex && \
	touch $@

textables_es: tables matfuncs $(ES_FNCSRC)
	./tables --internals > ../tex_es/tabinternals.tex && \
	./tables --functions > ../tex_es/tabfunctions.tex && \
	./tables --loopcmds > ../tex_es/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_es/tabnonloopcmds.tex && \
	LANG=es_ES ./matfuncs $(ES_FNCSRC) > ../tex_es/matfuncs.tex && \
	touch $@

textables_pt: tables matfuncs $(PT_FNCSRC)
	./tables --internals > ../tex_pt/tabinternals.tex && \
	./tables --functions > ../tex_pt/tabfunctions.tex && \
	./tables --loopcmds > ../tex_pt/tabloopcmds.tex && \
	./tables --nonloopcmds > ../tex_pt/tabnonloopcmds.tex && \
	LANG=pt_PT ./matfuncs $(PT_FNCSRC) > ../tex_pt/matfuncs.tex && \
	touch $@

functex: xsltrans reflow $(EN_FNCSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ftex.xml && \
	cat $(EN_FNCSRC) | grep -v DOCTYPE | grep -v 'xml version' >> ftex.xml && \
	./xsltrans --funcs --tex ftex.xml --docdir=$(CMDSDIR) --output=ftex.raw && \
	./reflow < ftex.raw > ../tex/funcbody.tex && rm ftex.raw && \
	rm ftex.xml && touch $@

functex_it: xsltrans reflow $(IT_FNCSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ftex_it.xml && \
	cat $(IN_FNCSRC) | grep -v DOCTYPE | grep -v 'xml version' >> ftex_it.xml && \
	./xsltrans --funcs --tex ftex_it.xml --docdir=$(CMDSDIR) --output=ftex_it.raw && \
	./reflow < ftex_it.raw > ../tex_it/funcbody.tex && rm ftex_it.raw && \
	rm ftex_it.xml && touch $@

functex_pt: xsltrans reflow $(PT_FNCSRC) $(FNCDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ftex_pt.xml && \
	cat $(PT_FNCSRC) | grep -v DOCTYPE | grep -v 'xml version' >> ftex_pt.xml && \
	./xsltrans --funcs --tex ftex_pt.xml --docdir=$(CMDSDIR) --output=ftex_pt.raw && \
	./reflow < ftex_pt.raw > ../tex_pt/funcbody.tex && rm ftex_pt.raw && \
	rm ftex_pt.xml touch $@

cmdtex: xsltrans reflow $(EN_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ctex.xml && \
	cat $(EN_SRC) | grep -v DOCTYPE | grep -v 'xml version' >> ctex.xml && \
	./xsltrans --cmds --tex ctex.xml --docdir=$(CMDSDIR) --output=ctex.raw && \
	./reflow < ctex.raw > ../tex/refbody.tex && rm ctex.raw && \
	rm ctex.xml && touch $@

cmdtex_it: xsltrans reflow $(IT_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ctex_it.xml && \
	cat $(IT_SRC) | grep -v DOCTYPE | grep -v 'xml version' >> ctex_it.xml && \
	./xsltrans --cmds --tex ctex_it.xml --docdir=$(CMDSDIR) --output=ctex_it.raw && \
	./reflow < ctex_it.raw > ../tex_it/refbody.tex && rm ctex_it.raw && \
	rm ctex_it.xml && touch $@

cmdtex_es: xsltrans reflow $(ES_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ctex_es.xml && \
	cat $(ES_SRC) | grep -v DOCTYPE | grep -v 'xml version' >> ctex_es.xml && \
	./xsltrans --cmds --tex ctex_es.xml --docdir=$(CMDSDIR) --output=ctex_es.raw && \
	./reflow < ctex_es.raw > ../tex_es/refbody.tex && rm ctex_es.raw && \
	rm ctex_es.xml && touch $@

cmdtex_pt: xsltrans reflow $(PT_SRC) $(CMDDTD) $(TEXXSL) $(XMLSTRS)
	cat $(CMDSDIR)/tex.entities | sed s+DTDDIR+$(CMDSDIR)+ > ctex_pt.xml && \
	cat $(PT_SRC) | grep -v DOCTYPE | grep -v 'xml version' >> ctex_pt.xml && \
	./xsltrans --cmds --tex ctex_pt.xml --docdir=$(CMDSDIR) --output=ctex_pt.raw && \
	./reflow < ctex_pt.raw > ../tex_pt/refbody.tex && rm ctex_pt.raw && \
	rm ctex_pt.xml && touch $@

topiclist_en: topiclist $(EN_SRC)
	LANG=en_US ./topiclist $(EN_SRC) > ../tex/cmdtopics.tex && touch $@

topiclist_it: topiclist $(IT_SRC)
	LANG=it_IT ./topiclist $(IT_SRC) > ../tex_it/cmdtopics.tex && touch $@ 

topiclist_es: topiclist $(ES_SRC)
	LANG=es_ES ./topiclist $(ES_SRC) > ../tex_es/cmdtopics.tex && touch $@ 

topiclist_pt: topiclist $(PT_SRC)
	LANG=pt_PT ./topiclist $(PT_SRC) > ../tex_pt/cmdtopics.tex && touch $@ 

# test validity of skeleton.xml, and ability of xsltrans
# to generate formatted output (text and XML)
test: skeleton.xml xsltrans gretlman.xsl gretltxt.xsl
	xmllint --valid --noout $< && ./xsltrans --all skeleton.xml $(CMDSDIR)

help-en: $(EN_HLPSTAMP) $(EN_GENSTAMP)

help-it: $(IT_HLPSTAMP) $(IT_GENSTAMP)

help-pt: $(PT_HLPSTAMP) $(PT_GENSTAMP)

help-all: help-en help-it help-pt $(HELPREFS)

# Validate the commands "master" XML files against libgretl
check: validate 
	-./validate $(EN_SRC)
	-./validate $(IT_SRC)
	-./validate $(PT_SRC)

docclean:
	 rm -f *.txt

clean: docclean
	rm -f $(CPROGS) *.o
	rm -f textables cmdtex* functex* topiclist_*
	rm -rf .libs

