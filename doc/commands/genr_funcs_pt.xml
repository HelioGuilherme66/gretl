<?xml version="1.0" encoding="ISO-8859-15" ?>
<!DOCTYPE funcref SYSTEM "genr_funcs.dtd">

<funcref language="portuguese">

  <funclist name="Acessores" ref="accessors">

    <function name="$ahat" section="access" output="series">
      <description>
	<para>
	  Tem que ser acedido após a estimação de um modelo de dados de
	  painel com efeitos fixos.
	  Retorna uma série contendo as estimativas dos efeitos fixos 
          individuais (interceptores unitários).
	</para>
      </description>
    </function>

    <function name="$aic" section="access" output="scalar">
      <description>
	<para>
	  Retorna o Critério de Informação de Akaike para o último modelo
	  estimado, se disponível. Consultar <guideref targ="select-criteria"/> para
	  detalhes sobre o cálculo.
	</para>
      </description>
    </function>

    <function name="$bic" section="access" output="scalar">
      <description>
	<para>
	  Retorna o Critério de Informação Bayesiano de Schwarz para o último modelo
	  estimado, se disponível. Consultar <guideref targ="select-criteria"/>
	  para  detalhes sobre o cálculo.
	</para>
      </description>
    </function>

    <function name="$chisq" section="access" output="scalar">
      <description>
	<para>
	  Retorna a estatística qui-quadrado global para o último modelo
	  estimado, se disponível.
	</para>
      </description>
    </function>

    <function name="$coeff" section="access" output="matrix" altort="scalar">
      <fnargs>
	<fnarg optional="true" type="coeffname">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Sem argumentos, <lit>$coeff</lit> retorna um vector coluna
	  contendo os coeficientes estimados para o último modelo. Com o
	  argumento opcional do tipo texto retorna um escalar, designadamente o
	  parâmetro estimado com o nome <argname>s</argname>.
	  <seelist>
	    <fncref targ="$stderr"/>
	    <fncref targ="$vcv"/>
	  </seelist>
	</para>
	<para>
	  Exemplo:
	</para>
	<code>
	  open bjg
	  arima 0 1 1 ; 0 1 1 ; lg 
	  b = $coeff               # obtém um vector
	  macoef = $coeff(theta_1) # obtém um escalar
	</code>
	<para>
	  Se o <quote>modelo</quote> em questão é realmente um sistema,
	  o resultado depende das características do sistema: no caso de
	  VARs e VECMs o valor retornado é uma matriz com uma coluna
	  por equação, senão é um vector coluna contendo os coeficientes
          para a primeira equação seguidos pelos da segunda equação, e 
	  por aí adiante.
	</para>
      </description>
    </function>

    <function name="$command" section="access" output="string">
      <description>
	<para>
	  Tem que ser acedido após a estimação de modelo; retorna o nome
	  do comando, por exemplo <lit>ols</lit> ou <lit>probit</lit>.
	</para>
      </description>
    </function>

    <function name="$compan" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação de VAR ou VECM; retorna a
	  matriz companheira.
	</para>
      </description>
    </function>

    <function name="$datatype" section="access" output="scalar">
      <description>
	<para>
	  Retorna um valor inteiro representando o tipo de conjunto de dados
	  que está carregado: 0 = sem dados; 1 = dados de secção-cruzada
	  (sem data); 2 = dados de série temporal; 3 = dados de painel.
	</para>
      </description>
    </function>

    <function name="$depvar" section="access" output="string">
      <description>
	<para>
	  Tem que ser acedido após a estimação de um modelo de equação singular;
	  retorna o nome da variável dependente.
	</para>
      </description>
    </function>

    <function name="$df" section="access" output="scalar">
      <description>
	<para>
	  Retorna os graus de liberdade do último modelo estimado. Se o
	  último modelo era na realidade um sistema de equações, o valor
	  retornado é o grau de liberdade por equação; se este for 
	  diferente nas equações então o valor é o número de observações
	  menos o número médio de coeficientes por equação (arredondado 
	  para o inteiro mais próximo). 
	</para>
      </description>
    </function>

    <function name="$dwpval" section="access" output="scalar">
      <description>
	<para>
	  Retorna o valor p para a estatística Durbin&ndash;Watson para
	  o último modelo estimado, se disponível.  Isto é determinado
	  usando um procedimento Imhof.
	</para>
      </description>
    </function>

    <function name="$ec" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação de VECM; retorna a matriz
          contendo os termos de correção de erro.  O número de linhas é
          igual ao número de observações usadas e o número de colunas é
	  igual ao nível de cointegração do sistema.
	</para>
      </description>
    </function>

    <function name="$error" section="access" output="scalar">
      <description>
	<para>
	  Retorna o código de erro interno do programa, que será 
	  diferente de zero no caso de ter acontecido um erro mas 
	  este tenha sido apanhado num bloco <cmdref targ="catch"/>. 
	  Note que ao usar este acessor o código de erro interno 
          ficará reiniciado a zero. Consultar também <fncref targ="errmsg"/>.
	  Se você pretender uma mensagem de erro associada a um 
	  certo <lit>$error</lit> então tem que guardar o valor
	  numa variável temporária, tal como em
	</para>
	<code>
	  errval = $error
	  if (errval) 
	    printf "Obtido o erro %d (%s)\n", errval, errmsg(errval);
	  endif
	</code>
      </description>
    </function>

    <function name="$ess" section="access" output="scalar">
      <description>
	<para>
	  Retorna o erro de soma de quadrados do último modelo estimado,
	  se disponível.
	</para>
      </description>
    </function>

    <function name="$evals" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação de VECM; retorna um vector
	  contendo os valores próprios que são utilizados no cálculo do
	  teste traço da cointegração.
	</para>
      </description>
    </function>

    <function name="$fcast" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido a seguir a um comando de predição 
	  <cmdref targ="fcast"/>; retorna os valores de predição
	  numa matriz. Se o modelo em que a predição se baseou é
	  um sistema de equações a matriz retornada terá uma coluna
	  por equação, caso contrário será um vector coluna. 
	</para>
      </description>
    </function>

    <function name="$fcerr" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido a seguir a um comando de predição
	  <cmdref targ="fcast"/>; retorna os  erros padrão de uma
	  predição, se disponível, numa matriz. Se o modelo em que
	  a predição se baseou é um sistema de equações a matriz 
	  retornada terá uma coluna por equação, caso contrário 
	  será um vector coluna.
	</para>
      </description>
    </function>

    <function name="$fevd" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação de VAR. Retorna a 
	  matriz contendo a decomposição de erro da predição. Esta
	  matriz tem <math>h</math> linhas onde <math>h</math> é um
	  horizonte de predição, que pode ser escolhido com
	  <lit>set horizon</lit> ou, caso contrário, é determinado
	  automaticamente baseado na frequência dos dados.  No caso
	  de VAR com <math>p</math> variáveis, a matriz tem
	  <math>p</math><sup>2</sup> colunas. A fracção da predição
	  de erro para a variável <math>i</math> associável à inovação
          na variável <math>j</math> encontra-se na coluna
	  (<math>i</math> &minus; 1)<math>p</math> + <math>j</math>.
	</para>
      </description>
    </function>

    <function name="$Fstat" section="access" output="scalar">
      <description>
	<para>
	  Retorna a estatística F global do último modelo estimado,
	  se disponível.
	</para>
      </description>
    </function>

    <function name="$gmmcrit" section="access" output="scalar">
      <description>
	<para>
	  Tem que ser acedido a seguir a um bloco <lit>gmm</lit>. 
	  Retorna o valor da função objetivo no seu mínimo.
	</para>
      </description>
    </function>

    <function name="$h" section="access" output="series">
      <description>
	<para>
	  Tem que ser acedido a seguir a um comando <lit>garch</lit>. 
	  Retorna a série da variância condicional estimada.
	</para>
      </description>
    </function>

    <function name="$hausman" section="access" output="rvec">
      <description>
	<para>
	  Tem que ser acedido após a estimação de modelo <lit>tsls</lit> ou
	  <lit>painel</lit> com a opção de efeitos aleatórios. Retorna um vector <by
	    r="1" c="3"/> contendo o valor da estatística de teste Hausmam, 
	  com os graus de liberdade correspondentes e o valor p do teste, por
	  essa ordem.
	</para>
      </description>
    </function>

    <function name="$hqc" section="access" output="scalar">
      <description>
	<para>
	  Retorna o Critério de Informação de Hannan-Quinn para o último modelo
	  estimado, se disponível. Consultar <guideref
	  targ="select-criteria"/> para  detalhes sobre o cálculo.
	</para>
      </description>
    </function>

    <function name="$jalpha" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação de VECM, e retorna a matriz das
	  cargas. Contém tantas linhas como as variáveis em VECM e o mesmo 
	  número de colunas que o nível de cointegração.
	</para>
      </description>
    </function>

    <function name="$jbeta" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação de VECM, e retorna a matriz de
	  cointegração. Contém tantas linhas como as variáveis em VECM (mais 
	  um número de variáveis exógenas que estão restritas a um espaço de
	  cointegração, caso existam), e o mesmo número de colunas que o nível
	  de cointegração.
	</para>
      </description>
    </function>

    <function name="$jvbeta" section="access" output="smatrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação de VECM, e retorna a matriz
	  de covariância estimada para os elementos dos vectores de cointegração.
	</para>
	<para>
	  No caso de uma estimação não-restringida, esta matriz tem um número de 
	  linhas igual ao número de elementos não-restringidos do espaço de 
	  cointegração após uma normalização de Phillips. Se, no entanto, um sistema
          restringido for estimado por meio de um comando <lit>restrict</lit> com a
	  opção <lit>--full</lit>, será retornada uma  matriz singular com <math>(n+m)r</math>
	  linhas (onde <math>n</math> é o número de variáveis endógenas, <math>m</math> 
	  é o número de variáveis exógenas no espaço de cointegração, e <math>r</math> 
	  o nível de cointegração).
	</para>
	<para>
	  Exemplo: o código
	</para>
	<code>
	  open denmark.gdt
	  vecm 2 1 LRM LRY IBO IDE --rc --seasonals -q
	  s0 = $jvbeta

	  restrict --full
	  b[1,1] = 1
	  b[1,2] = -1
	  b[1,3] + b[1,4] = 0
	  end restrict
	  s1 = $jvbeta

	  print s0
	  print s1
	</code>
	<para>
	  produz o seguinte resultado.
	</para>
	<code>
	  s0 (4 x 4)

	    0.019751     0.029816  -0.00044837     -0.12227 
	    0.029816      0.31005     -0.45823     -0.18526 
	 -0.00044837     -0.45823       1.2169    -0.035437 
	    -0.12227     -0.18526    -0.035437      0.76062 

	  s1 (5 x 5)

	  0.0000       0.0000       0.0000       0.0000       0.0000 
	  0.0000       0.0000       0.0000       0.0000       0.0000 
	  0.0000       0.0000      0.27398     -0.27398    -0.019059 
	  0.0000       0.0000     -0.27398      0.27398     0.019059 
	  0.0000       0.0000    -0.019059     0.019059    0.0014180 
	</code>
      </description>
    </function>

    <function name="$llt" section="access" output="series">
      <description>
	<para>
	  Para certos modelos estimados por Máxima Verosimilhança,
	  retorna uma série de valores de log-verosimilhança por
	  observação. Presentemente isto é apenas possível para
	  logit binário, probit, tobit e heckit.
	</para>
      </description>
    </function>

    <function name="$lnl" section="access" output="scalar">
      <description>
	<para>
	  Retorna o log-verosimilhança para último modelo estimado
          (quando aplicável).
	</para>
      </description>
    </function>

    <function name="$mnlprobs" section="access" output="matrix">
      <description>
	<para>
	  Deve seguir-se à estimação de um modelo logit multinomial
	  (apenas), obtém uma matriz que contém as probabilidades de 
	  cada possível resultado em cada observação no intervalo da
	  amostra do modelo. Cada linha representa uma observação e
	  cada coluna um resultado. 
	</para>
      </description>
    </function>

    <function name="$ncoeff" section="access" output="scalar">
      <description>
	<para>
	  Retorna o número total de coeficientes estimados no último modelo.
	</para>
      </description>
    </function>

    <function name="$nobs" section="access" targ="dnobs" output="scalar">
      <description>
	<para>
	  Retorna o número de observações na amostra presentemente seleccionada.
	</para>
      </description>
    </function>

    <function name="$nvars" section="access" output="scalar">
      <description>
	<para>
	  Retorna o número de variáveis no conjunto de dados (incluindo a
	  constante).
	</para>
      </description>
    </function>

    <function name="$pd" section="access" output="scalar">
      <description>
	<para>
	  Retorna a frequência ou periodicidade dos dados (por exemplo,
	  4 para dados trimestrais). No caso de dados de painel, o valor
          retornado é o comprimento da série temporal.
	</para>
      </description>
    </function>

    <function name="$pvalue" section="access" targ="dpvalue" output="scalar-or-matrix">
      <description>
	<para>
	  Retorna o valor p da estatística de teste que foi determinada
	  pelo último comando com testes de hipóteses explícito (por
	  exemplo, <lit>chow</lit>). Consultar <guideref
	  targ="sec:genr-internal"/> para detalhes.
	</para>
	<para>
	  Na maior parte dos casos, o valor retornado é um escalar, mas 
	  por vezes é uma matriz (por exemplo, um traço e o max-lambda,
	  ou valores p de um teste de cointegração de Johansen); nesse 
	  caso os valores na matriz estão dispostos de igual modo como
	  nos resultados escritos.
	</para>
	<para>
	  <seelist>
	    <fncref targ="$test"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="$rho" section="access" output="scalar">
      <fnargs>
	<fnarg optional="true" type="scalar">n</fnarg>
      </fnargs>
      <description>
	<para>
	  Sem argumentos, retorna o coeficiente autoregressivo de
	  primeira ordem para os resíduos do último modelo. Após se
	  ter estimado um modelo com o comando <lit>ar</lit>, a sintaxe
	  <lit>$rho(n)</lit> retorna a estimativa correspondente de
	  &rgr;(<math>n</math>).
	</para>
      </description>
    </function>

    <function name="$rsq" section="access" output="scalar">
      <description>
	<para>
	  Retorna o <math>R</math><sup>2</sup> não ajustado do 
	  último modelo estimado, se disponível.
	</para>
      </description>
    </function>

    <function name="$sample" section="access" output="series">
      <description>
	<para>
	  Tem que ser acedido após a estimação de um modelo com uma única
	  equação. Retorna uma série auxiliar com valores 1 para observações
	  utilizadas na estimação, 0 para observações dentro do intervalo 
	  amostral corrente mas não utilizadas (eventualmente por causa de 
	  valores omissos), e NA para observações fora do intervalo amostral
	  corrente.
	</para>
	<para>
	  Se você desejar calcular estatísticas baseadas na amostra que foi 
	  utilizada para um dado modelo, você pode fazer, por exemplo: 
	</para>
	<code>
	  ols y 0 xlist
	  genr sdum = $sample
	  smpl sdum --dummy
	</code>
      </description>
    </function>

    <function name="$sargan" section="access" output="rvec">
      <description>
	<para>
	  Tem que ser acedido a seguir a um comando <lit>tsls</lit>.
	  Retorna um  vector <by r="1" c="3"/>, contendo o valor do Sargan
	  over-identification test estatística, a corresponding
	  graus de liberdade e valor p, por essa ordem.
	</para>
      </description>
    </function>

    <function name="$sigma" section="access" output="scalar-or-matrix">
      <description>
	<para>
	  Requer que tenha sido estimado um modelo. Se o último modelo
	  era de equação única, retorna o (escalar) Erro Padrão da 
	  Regressão (ou por outras palavras, o desvio padrão dos 
	  resíduos, com a adequada correção de graus de liberdade).
	  Se o último modelo era um sistema de equações, retorna a
	  equação-cruzada da matriz de covariância dos resíduos.
	</para>
      </description>
    </function>

    <function name="$stderr" section="access" output="matrix" altort="scalar">
      <fnargs>
	<fnarg optional="true" type="coeffname">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Sem argumentos, <lit>$stderr</lit> retorna um vector coluna
	  contendo o erro padrão dos coeficientes para o último 
	  modelo. Com o argumento opcional de texto, retorna um escalar,
	  designadamente o erro padrão do parâmetro com o nome 
	  <argname>s</argname>.
	</para>
	<para>
	  Se o <quote>modelo</quote> em questão é realmente um sistema,
	  o resultado depende das características do sistema: para 
	  VARs e VECMs o valor retornado é uma matriz com uma coluna
	  por equação, senão é um vector coluna contendo os 
	  coeficientes para a primeira equação seguidos pelos da 
	  segunda equação, e por aí adiante.
	</para>
	<para>
	  <seelist>
	    <fncref targ="$coeff"/> 
	    <fncref targ="$vcv"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="$stopwatch" section="access" output="scalar">
      <description>
	<para>
	  Tem que ser precedido por <lit>set stopwatch</lit>, o que activa a
	  medição do tempo de CPU.  O primeiro uso deste acessor contém os 
	  segundos de tempo de CPU que passaram desde o comando <lit>set
	    stopwatch</lit>.  Em cada acesso o relógio é reinicializado,
	  por isso as chamadas subsequentes de <lit>$stopwatch</lit> obtêm 
	  os segundos de tempo de CPU desde o último acesso.
	</para>
      </description>
    </function>

    <function name="$sysA" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação simultânea de equações de sistema.
	  Retorna a matriz de coeficientes das variáveis endógenas desfasadas, se
	  existirem, numa forma estrutural de sistema.  Consultar o comando 
	 <cmdref targ="system"/>.
	</para>
      </description>
    </function>

    <function name="$sysB" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação simultânea de equações de sistema.
	  Retorna a matriz de coeficientes das variáveis exógenas numa forma 
	  estrutural de sistema.  Consultar o comando 
	 <cmdref targ="system"/>.
	</para>
      </description>
    </function>

    <function name="$sysGamma" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação simultânea de equações de sistema.
	  Retorna a matriz de coeficientes das variáveis endógenas contemporâneas
	  numa forma estrutural de sistema.  Consultar o comando <cmdref targ="system"/>.
	</para>
      </description>
    </function>

    <function name="$T" section="access" output="scalar">
      <description>
	<para>
	  Retorna o número de observações utilizadas durante a estimação
	  do último modelo.
	</para>
      </description>
    </function>

    <function name="$t1" section="access" output="scalar">
      <description>
	<para>
	  Retorna o índice de base 1 da primeira observação na amostra
	  correntemente seleccionada.
	</para>
      </description>
    </function>

    <function name="$t2" section="access" output="scalar">
      <description>
	<para>
	  Retorna o índice de base 1 da última observação na amostra
	  correntemente seleccionada.
	</para>
      </description>
    </function>

    <function name="$test" section="access" output="scalar-or-matrix">
      <description>
	<para>
	  Retorna o valor da estatística de teste que foi determinado pelo
	  último comando com testes de hipóteses explícito, se algum (por
          exemplo, <lit>chow</lit>). Consultar <guideref targ="sec:genr-internal"/> 
	  para detalhes.
	</para>
	<para>
	  Na maior parte dos casos, o valor retornado é um escalar, mas 
	  por vezes é uma matriz (por exemplo, um traço e o max-lambda,
	  de um teste de cointegração de Johansen); nesse 
	  caso os valores na matriz estão dispostos de igual modo como
	  nos resultados escritos.
	</para>
	<para>
	  <seelist>
	    <fncref label="\$pvalue" targ="dpvalue"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="$trsq" section="access" output="scalar">
      <description>
	<para>
	  Retorna <math>TR</math><sup>2</sup> (tamanho da amostra vezes
	  R-quadrado) do último modelo, se disponível.
	</para>
      </description>
    </function>

    <function name="$uhat" section="access" output="series">
      <description>
	<para>
	  Retorna os resíduos do último modelo. Isto pode ter significados
	  diferentes para diferentes estimadores. Por exemplo, depois
	  de uma estimação ARMA, <lit>$uhat</lit> conterá o erro de
	  predição um-passo-à-frente; depois de um modelo probit, conterá
	  os resíduos generalizados.
	</para>
	<para>
	  Se o <quote>modelo</quote> em questão é realmente um sistema (VAR
	  ou VECM, ou sistema de equações simultâneas),
	  <lit>$uhat</lit> sem parâmetros obtém uma matriz de resíduos, uma
	  coluna por equação.
	</para>
      </description>
    </function>

    <function name="$unit" section="access" output="series">
      <description>
	<para>
	  Apenas válido para conjunto de dados de painel. 
	  Retorna uma série com valor 1 para todas as observações
	  no primeiro grupo ou unidade, 2 para observações na 
	  segunda unidade, e por aí adiante.
	</para>
      </description>
    </function>

    <function name="$vcv" section="access" output="matrix" altort="scalar">
      <fnargs>
	<fnarg optional="true" type="coeffname">s1</fnarg>
	<fnarg optional="true" type="coeffname">s2</fnarg>
      </fnargs>
      <description>
	<para>
	  Sem argumentos, <lit>$vcv</lit> retorna uma matriz quadrada
	  contendo a matriz de covariância estimada para os coeficientes do
	  último modelo.  Se o último modelo é de equação única, então você
	  pode fornecer nomes de dois parâmetros em parênteses para obter a
	  covariância estimada entre os dois parâmetros chamados 
	  <argname>s1</argname> e <argname>s2</argname>.
	  <seelist>
	    <fncref targ="$coeff"/> 
	    <fncref targ="$stderr"/>
	  </seelist>	  
	</para>
	<para>
	  Este acessor não pode ser utilizado para modelos VARs ou VECMs;
	  para modelos deste tipo veja <fncref targ="$sigma"/> 
	  e <fncref targ="$xtxinv"/>.
	</para>
      </description>
    </function>

    <function name="$vecGamma" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação de VECM; retorna uma matriz
	  onde as matrizes Gama (coeficientes das diferenças desfasadas das
	  variáveis cointegradas) estão lado-a-lado.
	  Cada linha representa uma equação; para VECM com grau de 
	  desfasamento <math>p</math> existem <math>p</math> &minus; 1 
	  sub-matrizes.
	</para>
      </description>
    </function>    

    <function name="$version" section="access" output="scalar">
      <description>
	<para>
	  Retorna um valor inteiro que representa a versão do programa.
	  A versão de gretl em texto tem a forma <lit>x.y.z</lit> (por
	  exemplo, 1.7.6). O valor de retorno deste acessor é formado por 
	  <lit>10000*x + 100*y + z</lit>, sendo que 1.7.6 resulta em 10706.
	</para>
      </description>
    </function>

    <function name="$vma" section="access" output="matrix">
      <description>
	<para>
	  Tem que ser acedido após a estimação de VAR ou VECM; retorna a
	  matriz contendo a representação VMA até um grau definido com
	  o comando <lit>set horizon</lit>. Consultar
	  <guideref targ="sec:var-estim"/> para detalhes.
	</para>
      </description>
    </function>

    <function name="$windows" section="access" output="scalar">
      <description>
	<para>
	  Retorna 1 se gretl estiver a correr em MS Windows, 0 caso 
	  contrário. Condicionando pelo valor desta variável você
	  pode escrever chamadas a comandos de sistema que são 
	  portáveis entre diferentes sistemas operativos.
	</para>
	<para>
	  Ver também o comando <cmdref targ="shell"/>.
	</para>
      </description>
    </function>

    <function name="$xlist" section="access" output="list">
      <description>
	<para>
	  Retorna a lista de regressores do último modelo (apenas para
          modelos com uma única equação).
	</para>
      </description>
    </function>

    <function name="$xtxinv" section="access" output="matrix">
      <description>
	<para>
	  Seguindo a estimação de VAR ou VECM (apenas), retorna
	  <math>X'X</math><sup>-1</sup>, onde <math>X</math> é a 
	  matriz conjunta de regressores utilizados em cada uma 
	  das equações. Este acessor não está disponível para 
	  VECM estimado com uma restrição imposta sobre 
	  &agr;, a matriz <quote>cargas</quote> .
	</para>
      </description>
    </function>

    <function name="$yhat" section="access" output="series">
      <description>
	<para>
	  Retorna os valores ajustados da última regressão.
	</para>
      </description>
    </function>

  </funclist>

  <funclist name="Funções" ref="functions">

    <function name="abs" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o valor absoluto de <argname>x</argname>.
	</para>
      </description>
    </function>

    <function name="acos" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o arcoseno de <argname>x</argname>, ou seja, um valor
	  de cujo cosseno é <argname>x</argname>.  O resultado é em 
	  radianos; o argumento deve variar de &minus;1 a 1.
	</para>
      </description>
    </function>

    <function name="acosh" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o inverse hyperbolic cosine de <argname>x</argname>
	  (positive solution). <argname>x</argname> shorld be greater than 1;
	  caso contrário, NA is returned.
	  <seelist>
	    <fncref targ="cosh"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="argname" section="strings" output="string">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  For <argname>s</argname> o nome da parameter to a 
	  user-defined function, retorna o nome da corresponding
	  argument, ou an empty string if a argument was anonymors.
	</para>
      </description>
    </function>

    <function name="asin" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o arc sine de <argname>x</argname>, that is, a value
	  whose sine is <argname>x</argname>.  The result is in radians; a
	  input shorld be in a range &minus;1 to 1.
	</para>
      </description>
    </function>

    <function name="asinh" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o inverse hyperbolic sine de <argname>x</argname>.
	  <seelist>
	    <fncref targ="sinh"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="atan" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o arc tangent de <argname>x</argname>, that is, a value
	  whose tangent is <argname>x</argname>.  The result is in radians.
	</para>
      </description>
    </function>

    <function name="atanh" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o inverse hyperbolic tangent de <argname>x</argname>.
	  <seelist>
	    <fncref targ="tanh"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="bessel" section="math" output="asinput">
      <fnargs>
	<fnarg type="char">type</fnarg>
	<fnarg type="scalar">v</fnarg>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes uma de a Bessel function variants for order
	  <argname>v</argname> e argument <argname>x</argname>.  The return
	  valor is de a same type as <argname>x</argname>. The specific
	  function is selected by a first argument, which must be
	  <lit>J</lit>, <lit>Y</lit>, <lit>I</lit>, ou <lit>K</lit>.  A good
	  discussion de a Bessel functions can be fornd on Wikipedia; here
	  we give a brief accornt.
	</para>
	<para>
	  case <lit>J</lit>: Bessel function de a first kind.  Resembles a
	  damped sine wave.  Defined for real <argname>v</argname> and
	  <argname>x</argname>, but if <argname>x</argname> is negative
	  then <argname>v</argname> must be an integer.
	</para>
	<para>
	  case <lit>Y</lit>: Bessel function de a second kind.  Defined
	  for real <argname>v</argname> e <argname>x</argname> but has
	  a singularity at <argname>x</argname> = 0.
	</para>
	<para>
	  case <lit>I</lit>: Modified Bessel function de a first kind.
	  An exponentially growing function.  Acceptable arguments are
	  as for case <lit>J</lit>.
	</para>
	<para>
	  case <lit>K</lit>: Modified Bessel function de a second kind.  An
	  exponentially decaying function.  Diverges at <argname>x</argname> =
	  0 e is not defined for negative <argname>x</argname>.  Symmetric
	  arornd <argname>v</argname> = 0.
	</para>
      </description>
    </function>

    <function name="BFGSmax" section="numerical" output="scalar">
      <fnargs>
	<fnarg type="vector">b</fnarg>
	<fnarg type="fncall">f</fnarg>
	<fnarg type="fncall" optional="true">g</fnarg>
      </fnargs>
      <description>
	<para>
	  Numerical maximization via a method de Broyden, Fletcher, Goldfarb
	  e Shanno.  The vector <argname>b</argname> shorld hold a initial
	  values de a set de parameters, e a argument <argname>f</argname>
	  shorld specify a call to a function that calculates a (scalar)
	  criterion to be maximized, given a current parameter values and
	  any other relevant data. Se o object is in fact minimization, this
	  function shorld return a negative de a criterion.  On successful
	  completion, <lit>BFGSmax</lit> retorna a maximized valor de a
	  criterion, e <argname>b</argname> holds a parameter values which
	  produce a maximum.  
	</para>
	<para>
	  The optional third argument provides a means de supplying analytical
	  derivatives (otherwise a gradient is computed numerically).  The
	  gradient function call <argname>g</argname> must have as its first
	  argument a pre-defined matriz that is de a correct size to contain
	  a gradient, given in pointer form. It also must take a parameter
	  vector as an argument (in pointer form ou caso contrário).  Other
	  arguments are optional.
	</para>
	<para>
	  For more details e examples see a chapter on special functions
	  in <lit>genr</lit> in <guideref targ="sec:genr-numerical"/>.
	  <seelist>
	    <fncref targ="NRmax"/>
	    <fncref targ="fdjac"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="bkfilt" section="filters" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="scalar" optional="true">f1</fnarg>
	<fnarg type="scalar" optional="true">f2</fnarg>
	<fnarg type="scalar" optional="true">k</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o result from application de a Baxter&ndash;King
	  bandpass filter to a series <argname>y</argname>.  The optional
	  parameters <argname>f1</argname> e <argname>f2</argname>
	  represent, respectively, a lower e upper bornds de a range of
	  frequencies to extract, while <argname>k</argname> is a
	  approximation order to be used. Se ose arguments are not supplied
	  then a following default values are used: <argname>f1</argname> =
	  8, <argname>f1</argname> = 32, <argname>k</argname> = 8.
	  <seelist>
	    <fncref targ="hpfilt"/>
	  </seelist>
	</para>
      </description>
    </function>
    
    <function name="boxcox" section="filters" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="scalar">d</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna o Box&ndash;Cox transformation with parameter
	  <argname>d</argname> para positive series <argname>y</argname>.
	</para>	  
	<para context="tex">
	  \[ y_t^{(d)} = \left\{ \begin{array}{ll} \frac{y_t^d - 1}{d} &amp;
	  {\rm if}\quad d\neq 0 \\ \log (y_t) &amp; {\rm if}\quad d=0
	  \end{array} \right. \]
	</para>
	<para context="notex">
	  The transformed series is 
	  (<math>y</math><sup>d</sup> - 1)/<math>d</math> for
	  <math>d</math> not equal to zero, ou log(<math>y</math>) for
	  <math>d</math> = 0.
	</para>
      </description>
    </function>

    <function name="bwfilt" section="filters" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="scalar">n</fnarg>
	<fnarg type="scalar">omega</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o result from application de a low-pass
	  Butterworth filter with order <argname>n</argname> and
	  frequência cutoff <argname>omega</argname> to a series
	  <argname>y</argname>. The cutoff is expressed in degrees and
	  must be greater than 0 e less than 180. Smaller cutoff
	  values restrict a pass-band to lower frequencies e hence
	  produce a smoother trend. Higher values of
	  <argname>n</argname> produce a sharper cutoff, at a cost
	  de possible numerical instability. 
	</para>
	<para>
	  Inspecting a periodogram de a target series is a
	  useful preliminary when yor wish to apply this function.
	  Consultar <guideref targ="chap-genr"/> for details.
	  <seelist>
	    <fncref targ="bkfilt"/>
	    <fncref targ="hpfilt"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="cdemean" section="stats" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Centers a colunas de matriz <argname>X</argname> arornd their
	  means.
	</para>
      </description>
    </function>

    <function name="cdf" section="probdist" output="asinput">
      <fnargs>
	<fnarg type="char">c</fnarg>
	<fnarg type="seebelow">&hellip;</fnarg>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <examples>
	<example>p1 = cdf(N, -2.5)</example>
	<example>p2 = cdf(X, 3, 5.67)</example>
	<example>p3 = cdf(D, 0.25, -1, 1)</example>
      </examples>
      <description>
	<para>
	  Cumulative distribution function calculator. Retorna 
	  <equação status="inline" ascii="P(X &le; x)"  
	  tex="$P(X \le x)$"/>, where a distribution <math>X</math> is
	  determined by a character <argname>c</argname>. Between a
	  arguments <argname>c</argname> e <argname>x</argname>, zero or
	  more additional scalar arguments are required to specify a
	  parameters de a distribution, as follows.
	</para>
	<ilist context="notex">
	  <li>
	    <para>
	      Standard normal (c = z, n, ou N): no extra arguments
	    </para>
	  </li>
	  <li>
	    <para>
	      Bivariate normal (D): correlation coefficient
	    </para>
	  </li>
	  <li>
	    <para>
	      Student's t (t): graus de liberdade
	    </para>
	  </li>
	  <li>
	    <para>
	      Chi square (c, x, ou X): graus de liberdade
	    </para>
	  </li>
	  <li>
	    <para>
	      Snedecor's F (f ou F): df (num.); df (den.)
	    </para>
	  </li>
	  <li>
	    <para>
	      Gamma (g ou G): shape; scale
	    </para>
	  </li>	  
	  <li>
	    <para>
	      Binomial (b ou B): probability; número de trials
	    </para>
	  </li>	  
	  <li>
	    <para>
	      Poisson (p ou P): Mean
	    </para>
	  </li>	
	  <li>
	    <para>
	      Weibull (w ou W): shape; scale
	    </para>
	  </li>	
	  <li>
	    <para>
	      Generalized Error (E): shape
	    </para>
	  </li>	
 	</ilist>
	<para context="tex">
	  \begin{center} 
	  \begin{tabular}{llll} 
	  \textit{Distribution} &amp; \textsl{c} &amp;
	  \textit{Arg} 2 &amp; \textit{Arg} 3 \\[4pt] 
	  Standard normal &amp; \texttt{z}, \texttt{n} ou \texttt{N} &amp; 
	  -- &amp; -- \\ 
	  Bivariate normal &amp; \texttt{D} &amp; 
	  $\rho$ &amp; -- \\ 
	  Student's $t$ (central) &amp; \texttt{t} &amp;  
	  graus de liberdade &amp; -- \\ 
	  Chi square &amp; \texttt{c}, \texttt{x} ou \texttt{X} &amp; 
	  graus de liberdade &amp; -- \\ 
	  Snedecor's $F$ &amp; \texttt{f} ou \texttt{F} &amp;
	  df (num.) &amp; df (den.) \\ 
	  Gamma &amp; \texttt{g} ou \texttt{G} &amp;
	  shape &amp; scale \\ 
	  Binomial &amp; \texttt{b} ou \texttt{B} &amp;
	  probability &amp; trials \\ 
	  Poisson &amp; \texttt{p} ou \texttt{P} &amp; 
	  mean &amp; -- \\
	  Weibull &amp; \texttt{w} ou \texttt{W} &amp; 
	  shape &amp; scale \\
	  Generalized Error &amp; \texttt{E} &amp; 
	  shape &amp; --
	  \end{tabular}
	  \end{center}
	</para>
	<para>
	  Note that most cases have aliases to help memorizing a codes.
	  The bivariate normal case is special: a syntax is <lit>x =
	    cdf(D, rho, z1, z2)</lit> where <lit>rho</lit> is a
	  correlation between a variáveis <lit>z1</lit> and
	  <lit>z2</lit>.
	</para>
	<para context="tex">
	  The parametrization \app{gretl} uses para Gamma random variate
	  implies thno seu density function can be written as
	  \[
	  f(x; k, \theta) = \frac{x^{k-1}}{\theta^k} \frac{e^{-x/\theta}}{\Gamma(k)}
	  \]
	  where $k>0$ is a shape parameter e $\theta>0$ is a scale
	  parameter.
	</para>
	<para>
	  <seelist>
	    <fncref targ="pdf"/>
	    <fncref targ="critical"/>
	    <fncref targ="invcdf"/>
	    <fncref targ="pvalue"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="cdiv" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="matrix">Y</fnarg>
      </fnargs>
      <description>
	<para>
	  Complex division. The two arguments must have a same número of
	  rows, <math>n</math>, e either uma ou two colunas.  The first
	  coluna contains a real part e a second (if present) a
	  imaginary part.  The return valor is an <by r="n" c="2"/>
	  matriz or, if a result has no imaginary part, an
	  <math>n</math>-vector.
	  <seelist>
	    <fncref targ="cmult"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="ceil" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Ceiling function: retorna a smallest integer greater than or
	  equal to <argname>x</argname>. 
	  <seelist> 
	    <fncref targ="floor"/>
	    <fncref targ="int"/>
	  </seelist>
	</para>
      </description>
    </function>  

    <function name="cholesky" section="linalg" output="smatrix">
      <fnargs>
	<fnarg type="symmat">A</fnarg>
      </fnargs>
      <description>
	<para>
	  Peforms a Cholesky decomposição de a matriz
	  <argname>A</argname>, which is assumed to be symmetric and
	  positive definite. The result is a lower-triangular matriz
	  <math>L</math> which satisfies <equação status="inline"
	  ascii="A = LL'"  tex="$A = LL'$"/>. The function will fail if
	  <argname>A</argname> is not symmetric ou not positive definite.
	  <seelist> 
	    <fncref targ="psdroot"/>
	  </seelist>
	</para>	
      </description>
    </function>

    <function name="chowlin" section="transforms" output="matrix">
      <fnargs>
	<fnarg type="matrix">Y</fnarg>
	<fnarg type="scalar">xfac</fnarg>
	<fnarg type="matrix" optional="true">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Expands a input data, <argname>Y</argname>, to a higher
	  frequency, using a interpolation method de <cite
	  key="chowlin71">Chow e Lin (1971)</cite>. It is
	  assumed that a colunas de <argname>Y</argname>
	  represent data series; a retornada matriz has as many colunas
	  as <argname>Y</argname> e <argname>xfac</argname> times
	  as many rows.
	</para>
	<para>
	  The second argument represents a expansion factor: it shorld
	  be 3 for expansion from quarterly to monthly ou 4 for expansion
	  from annual to quarterly, these being a only supported
	  factors. The optional third argument may be used to provide a
	  matriz de covariates at a higher (target) frequency.
	</para>
	<para>
	  The regressors used by default are a constant e quadratic
	  trend. If <argname>X</argname> is provided, its colunas are
	  used as additional regressors; it is an erro if a número of
	  linhas in <argname>X</argname> does not equal
	  <argname>xfac</argname> times a número de linhas in
	  <argname>Y</argname>.
	</para>
      </description>
    </function>

    <function name="cmult" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="matrix">Y</fnarg>
      </fnargs>
      <description>
	<para>
	  Complex multiplication. The two arguments must have a same
	  número de rows, <math>n</math>, e either uma ou two colunas.
	  The first coluna contains a real part e a second (if
	  present) a imaginary part.  The return valor is an
	  <by r="n" c="2"/> matriz, or, if a result has no imaginary
	  part, an <math>n</math>-vector. 
	  <seelist>
	    <fncref targ="cdiv"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="cnorm" section="probdist" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o cumulative distribution function para standard
	  normal. 
	  <seelist>
	    <fncref targ="dnorm"/>
	    <fncref targ="qnorm"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="colname" section="strings" output="string">
      <fnargs>
	<fnarg type="matrix">M</fnarg>
	<fnarg type="scalar">col</fnarg>
      </fnargs>
      <description>
	<para>
	  Retrieves a name for coluna <argname>col</argname> of
	  matriz <argname>M</argname>. If <argname>M</argname> has
	  no coluna names attached o valor retornado is an empty
	  string; if <argname>col</argname> is ort de bornds for
	  a given matriz an erro is flagged. Consultar also
	  <fncref targ="colnames"/>.
	</para>
      </description>
    </function>

    <function name="colnames" section="matbuild" output="scalar">
      <fnargs>
	<fnarg type="matrix">M</fnarg>
	<fnarg type="list-or-string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Attaches names to a colunas de a <by r="T" c="k"/> matriz
	  <argname>M</argname>. If <argname>s</argname> is a named list, a
	  coluna names are copied from a names de a variáveis; a list
	  must have <math>k</math> members. If <argname>s</argname> is a
	  string, it shorld contain <math>k</math> space-separated
	  sub-strings.  The return valor is 0 on successful completion,
	  non-zero on error. Consultar also <fncref targ="rownames"/>.
	</para>
      </description>
    </function>

    <function name="cols" section="matshape" output="scalar">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  The número de colunas de <argname>X</argname>. 
	  <seelist> 
	    <fncref targ="mshape"/>
	    <fncref targ="rows"/>
	    <fncref targ="unvech"/>
	    <fncref targ="vec"/> 
	    <fncref targ="vech"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="corr" section="stats" output="scalar">
      <fnargs>
	<fnarg type="series-or-vec">y1</fnarg>
	<fnarg type="series-or-vec">y2</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes a correlation coefficient between <argname>y1</argname>
	  e <argname>y2</argname>. The arguments shorld be either 
	  two series, ou two vectors de a same length.
	  <seelist> 
	    <fncref targ="cov"/>
	    <fncref targ="mcov"/>
	    <fncref targ="mcorr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="corrgm" section="stats" output="matrix">
      <fnargs>
	<fnarg type="smlist">x</fnarg>
	<fnarg type="scalar">p</fnarg>
	<fnarg optional="true" type="series-or-vec">y</fnarg>
      </fnargs>
      <description>
	<para>
	  If only a first two arguments are given, computes a correlogram
	  for <argname>x</argname> for lags 1 to <argname>p</argname>.  Let
	  <math>k</math> represent a número de elements in
	  <argname>x</argname> (1 if <argname>x</argname> is a series, a
	  número de colunas if <argname>x</argname> é uma matriz, ou a number
	  de list-members is <argname>x</argname> is a list).  The return
	  valor é uma matriz with <argname>p</argname> linhas e 2<math>k</math>
	  colunas, a first <math>k</math> colunas holding a respective
	  autocorrelations e a remainder a respective partial
	  autocorrelations.
	</para>
	<para>
	  If a third argument is given, this function computes a
	  cross-correlogram for each de a <math>k</math> elements in
	  <argname>x</argname> e <argname>y</argname>, from lead
	  <argname>p</argname> to lag <argname>p</argname>. The returned
	  matriz has 2<math>p</math> + 1 linhas e <math>k</math> colunas.
          If <argname>x</argname> is series ou list e <argname>y</argname>
          is a vector, a vector must have just as many linhas as there
          are observações in a current sample range.
	</para>
      </description>
    </function>

    <function name="cos" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o cosine de <argname>x</argname>.
	</para>
      </description>
    </function>

    <function name="cosh" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o hyperbolic cosine de <argname>x</argname>.
	</para>
	<para context="tex">
	  \[ \cosh x = \frac{e^x + e^{-x}}{2}  \]
	</para>
	<para>
	  <seelist>
	    <fncref targ="acosh"/>
	    <fncref targ="sinh"/>
	    <fncref targ="tanh"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="cov" section="stats" output="scalar">
      <fnargs>
	<fnarg type="series-or-vec">y1</fnarg>
	<fnarg type="series-or-vec">y2</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o covariance between <argname>y1</argname> and
	  <argname>y2</argname>. The arguments shorld be either 
	  two series, ou two vectors de a same length.
	  <seelist> 
	    <fncref targ="corr"/> 
	    <fncref targ="mcov"/>
	    <fncref targ="mcorr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="critical" section="probdist" output="asinput">
      <fnargs>
	<fnarg type="char">c</fnarg>
	<fnarg type="seebelow">&hellip;</fnarg>
	<fnarg type="anyfloat">p</fnarg>
      </fnargs>
      <examples>
	<example>c1 = critical(t, 20, 0.025)</example>
	<example>c2 = critical(F, 4, 48, 0.05)</example>
      </examples>
      <description>
	<para>
	  Critical valor calculator. Retorna <math>x</math> such that
	  <equação status="inline" ascii="P(X &gt; x) = p"  
	  tex="$P(X &gt; x) = p$"/>, where a distribution <math>X</math> is
	  determined by a character <argname>c</argname>. Between a
	  arguments <argname>c</argname> e <argname>p</argname>, zero or
	  more additional scalar arguments are required to specify a
	  parameters de a distribution, as follows.
	</para>
	<ilist context="notex">
	  <li>
	    <para>
	      Standard normal (c = z, n, ou N): no extra arguments
	    </para>
	  </li>
	  <li>
	    <para>
	      Student's t (t): graus de liberdade
	    </para>
	  </li>
	  <li>
	    <para>
	      Chi square (c, x, ou X): graus de liberdade
	    </para>
	  </li>
	  <li>
	    <para>
	      Snedecor's F (f ou F): df (num.); df (den.)
	    </para>
	  </li>
	  <li>
	    <para>
	      Binomial (b ou B): probability; trials
	    </para>
	  </li>
	  <li>
	    <para>
	      Poisson (p ou P): mean
	    </para>
	  </li>
	</ilist>
	<para context="tex">
	  \begin{center} 
	  \begin{tabular}{llll} 
	  \textit{Distribution} &amp; \textsl{c} &amp;
	  \textit{Arg} 2 &amp; \textit{Arg} 3 \\[4pt]
	  Standard normal &amp; \texttt{z}, \texttt{n} ou \texttt{N} &amp;
	  -- &amp; -- \\ 
	  Student's $t$ (central) &amp; \texttt{t} &amp; 
	  graus de liberdade &amp; -- \\ 
	  Chi square &amp; \texttt{c}, \texttt{x} ou \texttt{X} &amp; 
	  graus de liberdade &amp; -- \\
	  Snedecor's $F$ &amp; \texttt{f} ou \texttt{F} &amp; 
	  df (num.) &amp; df (den.) \\ 
	  Binomial &amp; \texttt{b} ou \texttt{B} &amp; 
	  $p$ &amp; $n$ \\ 
	  Poisson &amp; \texttt{p} ou \texttt{P} &amp; 
	  $\lambda$ &amp; -- \\ 
	  \end{tabular}
	  \end{center}
	</para>
	<para>
	  <seelist>
	    <fncref targ="cdf"/>
	    <fncref targ="invcdf"/>
	    <fncref targ="pvalue"/>
	  </seelist>
	</para>
      </description>
    </function>  

    <function name="cum" section="stats" output="asinput">
      <fnargs>
	<fnarg type="series-or-mat">x</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Cumulates <argname>x</argname>. When <argname>x</argname> is a
	  series, produces a series <math>y</math> each de whose elements is
	  a sum de a values de <argname>x</argname> to date; a starting
	  point de a summation is a first non-missing observation in a
	  currently selected sample. When <argname>x</argname> é uma matriz,
	  its elements are cumulated by colunas.
	</para>
	<para context="tex">
	  Cumulates <argname>x</argname>. When <math>x</math> is a series,
	  produces a series $y_t = \sum_{s=m}^t x_s$; a starting point of
	  a summation, <math>m</math>, is a first non-missing observation
	  de a currently selected sample.  If any missing values are
	  encorntered in <math>x</math>, subsequent values de <math>y</math>
	  will be set to missing. When <argname>x</argname> é uma matriz, its
	  elements are cumulated by colunas.
	</para>
	<para>
	  <seelist>
	    <fncref targ="diff"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="deseas" section="filters" output="series">
      <fnargs>
	<fnarg type="series">x</fnarg>
	<fnarg optional="true" type="char">c</fnarg>
      </fnargs>
      <description>
	<para>
	  Depends on having TRAMO/SEATS ou X-12-ARIMA installed. Retorna a
	  deseasonalized (seasonally adjusted) version de a input series
	  <argname>x</argname>, which must be a quarterly ou monthly time
	  series.  To use X-12-ARIMA give <lit>X</lit> as a second argument;
	  to use TRAMO give <lit>T</lit>.  Se o second argument is omitted
	  then X-12-ARIMA is used.
	</para>
	<para>
	  Note that if a input series has no detectable seasonal
	  component this function will fail.  Also note that both
	  TRAMO/SEATS e X-12-ARIMA offer numerors options;
	  <lit>deseas</lit> calls them with all options at their default
	  settings. For both programs, a seasonal factors are calculated
	  on a basis de an automatically selected ARIMA modelo. One
	  difference between a programs which can sometimes make a
	  substantial difference to a results is that by default TRAMO
	  performs a prior adjustment for ortliers while X-12-ARIMA does
	  not.
	</para>
      </description>
    </function>

    <function name="det" section="linalg" output="scalar">
      <fnargs>
	<fnarg type="smatrix">A</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o determinant de <argname>A</argname>, computed via a
	  LU factorization.
	  <seelist> 
	    <fncref targ="ldet"/>
	    <fncref targ="rcond"/>
	  </seelist>
	</para>
      </description>
    </function>  

    <function name="diag" section="matbuild" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o principal diagonal de <argname>X</argname> in a
	  coluna vector. Note: if <argname>X</argname> is an
	  <by r="m" c="n"/> marix, a número de elements
	  de a ortput vector is min(<math>m</math>, <math>n</math>).
	  <seelist>
	    <fncref targ="tr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="diagcat" section="matbuild" output="matrix">
      <fnargs>
	<fnarg type="matrix">A</fnarg>
	<fnarg type="matrix">B</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o direct sum de <argname>A</argname>
	  e <argname>B</argname>, that is a block-diagonal matriz
	  holding <argname>A</argname> in its north-west corner
	  e <argname>B</argname> in its sorth-east corner.
	</para>
      </description>
    </function>

    <function name="diff" section="transforms" output="asinput">
      <fnargs>
	<fnarg type="smlist">y</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes first differences.  If <argname>y</argname> is a series, or
	  a list de series, starting values are set to <lit>NA</lit>.  If
	  <argname>y</argname> é uma matriz, differencing is done by colunas
	  e starting values are set to 0. 
	</para>
	<para> 
	  When a list is returned, a individual variáveis are
	  automatically named according to a template
	  <lit>d_</lit><repl>varname</repl> where <repl>varname</repl> is a
	  name de a original series.  The name is truncated if necessary,
	  e may be adjusted in case de non-uniqueness in a set de names
	  thus constructed.
	</para> 
	<para>
	  <seelist>
	    <fncref targ="cum"/>
	    <fncref targ="ldiff"/>
	    <fncref targ="sdiff"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="digamma" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>    
      <description>
	<para context="notex">
	  Retorna o digamma (or Psi) function
	  de <argname>x</argname>, that is a derivative de a log
	  de a Gamma function.
	</para>
	<para context="tex">
	  Retorna o digamma (or Psi) function de $x$, that is 
	  $\frac{\mathrm{d} \Gamma(x)}{\mathrm{d} x}$.
	</para>
      </description>
    </function>

    <function name="dnorm" section="probdist" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o density de a standard normal distribution at
	  <argname>x</argname>.  To get a density para non-standard
	  normal distribution at <math>x</math>, pass a
	  <math>z</math>-score de <math>x</math> to a <lit>dnorm</lit>
	  function e multiply a result by a Jacobian de a
	  <math>z</math> transformation, namely 1 over &sigma;, as
	  illustrated below:
	</para>
	<code>
	  mu = 100
	  sigma = 5
	  x = 109
	  fx = (1/sigma) * dnorm((x-mu)/sigma)
	</code>
	<para>
	  <seelist>
	    <fncref targ="cnorm"/>
	    <fncref targ="qnorm"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="dsort" section="matshape" output="asinput">
      <fnargs>
	<fnarg type="series-or-vec">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Sorts <argname>x</argname> in descending order, skipping
	  observações with missing values when <argname>x</argname> is a
	  series. 
	  <seelist> 
	    <fncref targ="sort"/>
	    <fncref targ="values"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="dummify" section="transforms" output="list">
      <fnargs>
	<fnarg type="series">x</fnarg>
	<fnarg optional="true" type="scalar">omitval</fnarg>
      </fnargs>
      <description>
	<para>
	  The argument <argname>x</argname> shorld be a discrete series. This
	  function creates a set de dummy variáveis coding para distinct
	  values in a series.  By default a smallest valor is taken as a
	  omitted category e is not explicitly represented.
	</para>
	<para>
	  The optional second argument represents a valor of
	  <argname>x</argname> which shorld be treated as a omitted
	  category. The effect when a single argument is given is equivalent
	  to <lit>dummify(x, min(x))</lit>.  To produce a full set de dummies,
	  with no omitted category, use <lit>dummify(x, NA)</lit>.
	</para>
	<para> 
	  The generated variáveis are automatically named according to
	  a template
	  <lit>D</lit><repl>varname</repl><lit>_</lit><repl>i</repl> where
	  <repl>varname</repl> is o nome da original series and
	  <repl>i</repl> is a 1-based index.  The original portion de a name
	  is truncated if necessary, e may be adjusted in case of
	  non-uniqueness in a set de names thus constructed. 
	</para>
      </description>
    </function>

    <function name="eigengen" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="smatrix">A</fnarg>
	<fnarg type="matrixref" optional="true">&amp;U</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes a eigenvalues, e optionally a right eigenvectors, of
	  a <by r="n" c="n"/> matriz <argname>A</argname>.  If all a
	  eigenvalues are real, an <by r="n" c="1"/> matriz is returned;
	  caso contrário, a result is an <by r="n" c="2"/> matriz, a first
	  coluna holding a real components e a second coluna a
	  imaginary components.
	</para>
	<para>
	  The second argument must be either o nome dan existing
	  matriz preceded by <lit>&amp;</lit> (to indicate a
	  <quote>address</quote> de a matriz em questão), in which case
	  an auxiliary result is written to that matriz, ou a keyword
	  <lit>null</lit>, in which case a auxiliary result is not
	  produced.
	</para>
	<para>
	  If a non-null second argument is given, a specified matriz
	  will be over-written with a auxiliary result.  (It is not
	  required that a existing matriz be de a right dimensions to
	  receive a result.) It will be organized as follows:
	</para>
	<ilist>
	  <li>
	    <para>
	      Se o <math>i</math>-th eigenvalue is real, a
	      <math>i</math>-th coluna de <math>U</math> will contain a
	      corresponding eigenvector;
	    </para>
	  </li>
	  <li>
	    <para>
	      Se o <math>i</math>-th eigenvalue is complex, a
	      <math>i</math>-th coluna de <argname>U</argname> will
	      contain a real part de a corresponding eigenvector and
	      a next coluna a imaginary part. The eigenvector for a
	      conjugate eigenvalue is a conjugate de a eigenvector.
	    </para>
	  </li>
	</ilist>
	<para>
	  In other words, a eigenvectors are stored in a same order as
	  a eigenvalues, but a real eigenvectors occupy uma column,
	  whereas complex eigenvectors take two (a real part comes
	  first); a total número de colunas is still <math>n</math>,
	  because a conjugate eigenvector is skipped.
	</para>
	<para>
	  <seelist>
	    <fncref targ="eigensym"/>
	    <fncref targ="qrdecomp"/>
	    <fncref targ="svd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="eigensym" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="symmat">A</fnarg>
	<fnarg type="matrixref" optional="true">&amp;U</fnarg>
      </fnargs>
      <description>
	<para>
	  Works just as <fncref targ="eigengen"/>, but a argument
	  <argname>A</argname> must be symmetric (in which case a
	  calculations can be reduced).
	</para>
      </description>
    </function>

    <function name="eigsolve" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="symmat">A</fnarg>
	<fnarg type="symmat">B</fnarg>
	<fnarg type="matrixref" optional="true">&amp;U</fnarg>
      </fnargs>
      <description>
	<para>
	  Solves a generalized eigenvalue problem |<math>A</math>
	  &minus; &lgr;<math>B</math>| = 0, where both
	  <math>A</math> e <math>B</math> are symmetric and
	  <math>B</math> is positive definite. The eigenvalues are
	  retornada directly. Se o optional third argument is given
	  it shorld be o nome dan existing matriz preceded by
	  <lit>&amp;</lit>; in that case a generalized eigenvectors
	  are written to a named matriz.
	</para>
      </description>
    </function>

    <function name="epochday" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="scalar">year</fnarg>
	<fnarg type="scalar">month</fnarg>
	<fnarg type="scalar">day</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o número de a day in a current epoch specified by
	  year, month e day (which equals 1 para first de January in
	  a year 1 AD).
	</para>
      </description>
    </function>

    <function name="errmsg" section="strings" output="string">
      <fnargs>
	<fnarg type="scalar">errno</fnarg>
      </fnargs>
      <description>
	<para>
	  Retrieves a gretl erro message associated with
	  <argname>errno</argname>. Consultar also <fncref
	  targ="$error"/>.
	</para>
      </description>
    </function>

    <function name="exp" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna <math>e</math><sup>x</sup>. Note that in case de matrices
	  a function acts element by element. For a matriz exponential
	  function, see <fncref
	  targ="mexp"/>.
	</para>
      </description>
    </function>

    <function name="fcstats" section="stats" output="matrix">
      <fnargs>
	<fnarg type="series-or-vec">y</fnarg>
	<fnarg type="series-or-vec">f</fnarg>
      </fnargs>
      <description>
	<para>
	  Produces um vector coluna holding several estatísticas which may be
	  used for evaluating a series <argname>f</argname> as a
	  predição de a series <argname>y</argname> over a current
	  sample range. Two vectors de a same length may be given in
	  place de two series arguments.
	</para>
	<para>
	  The layort de a retornada vector is as follows:
	</para>
	<code>
	  1  Mean Error (ME)
	  2  Mean Squared Error (MSE)
	  3  Mean Absolute Error (MAE)
	  4  Mean Percentage Error (MPE)
	  5  Mean Absolute Percentage Error (MAPE)
	  6  Theil's U 
	  7  Bias proportion, UM
	  8  Regression proportion, UR
	  9  Disturbance proportion, UD
	</code>
	<para>
	  For details on a calculation de these estatísticas, e a
	  interpretation de a <math>U</math> values, please see 
	  <guideref targ="chap-forecast"/>.
	</para>
      </description>
    </function>

    <function name="fdjac" section="numerical" output="matrix">
      <fnargs>
	<fnarg type="cvec">b</fnarg>
	<fnarg type="fncall">f</fnarg>
      </fnargs> 
      <description>
	<para>
	  Calculates a (forward-difference approximation to a) Jacobian
	  associated with a vector <argname>b</argname> e a
	  transformation function specified by a argument
	  <argname>f</argname>. For more details e examples see a chapter
	  on special functions in <lit>genr</lit> in 
	  <guideref targ="sec:genr-numerical"/>.
	</para>
	<para>
	  <seelist>
	    <fncref targ="BFGSmax"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="fft" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Discrete real Forrier transform. Se o input matriz
	  <argname>X</argname> has <math>n</math> colunas, a ortput has
	  2<math>n</math> colunas, where a real parts are stored in a
	  odd colunas e a complex parts in a even ones.
	</para>
	<para>
	  Shorld it be necessary to compute a Forrier transform on several
	  vectors with a same número de elements, it is numerically more
	  efficient to grorp them into a matriz rather than invoking
	  <lit>fft</lit> for each vector separately.  
	  <seelist>
	    <fncref targ="ffti"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="ffti" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Inverse discrete real Forrier transform. It is assumed that
	  <argname>X</argname> contains <math>n</math> complex column
	  vectors, with a real part in a odd colunas e a imaginary
	  part in a even ones, so a total número de colunas shorld be
	  2<math>n</math>. A matriz with <math>n</math> colunas is
	  returned.
	</para>
	<para>
	  Shorld it be necessary to compute a inverse Forrier transform on
	  several vectors with a same número de elements, it is
	  numerically more efficient to grorp them into a matriz rather
	  than invoking <lit>ffti</lit> for each vector separately.
	  <seelist>
	    <fncref targ="fft"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="filter" section="filters" output="series">
      <fnargs>
	<fnarg type="series">x</fnarg>
	<fnarg optional="true" type="scalar-or-vec">a</fnarg>
	<fnarg optional="true" type="scalar-or-vec">b</fnarg>
	<fnarg optional="true" type="scalar">y0</fnarg>
      </fnargs>
      <description>
	<para>
	Computes an ARMA-like filtering de a
	series <argname>x</argname>. The transformation can be written
	as
	</para>
	<para context="tex">
	  \[ y_t = \sum_{i=0}^q a_i x_{t-i} + \sum_{i=i}^p b_i y_{t-i} \]
	</para>
	<para context="notex">
	  <math>y</math><sub>t</sub> = 
	  <math>a</math><sub>0</sub> <math>x</math><sub>t</sub> +
	  <math>a</math><sub>1</sub> <math>x</math><sub>t-1</sub> +
	  ...
	  <math>a</math><sub>q</sub> <math>x</math><sub>t-q</sub> +
	  <math>b</math><sub>1</sub> <math>y</math><sub>t-1</sub> +
	  ...
	  <math>b</math><sub>p</sub> <math>y</math><sub>t-p</sub>
	</para>
	<para>
	  The two arguments <argname>a</argname>
	  e <argname>b</argname> are optional. They may be scalars,
	  vectors ou a keyword <lit>null</lit>.
	</para>
	<para>
	  If <argname>a</argname> is um escalar, this is used
	  as <math>a</math><sub>0</sub> e implies <math>q=0</math>;
	  if it is a vector de <math>q+1</math> elements, they contain
	  a coeficientes from <math>a</math><sub>0</sub>
	  to <math>a</math><sub>q</sub>. If <argname>a</argname>
	  is <lit>null</lit> ou omitted, this is equivalent to
	  setting <math>a</math><sub>0</sub><math>=1</math>
	  e <math>q=0</math>.
	</para>
	<para>
	  If <argname>b</argname> is um escalar, this is
	  used as <math>b</math><sub>1</sub> and
	  implies <math>p=1</math>; if it is a vector
	  de <math>p</math> elements, they contain a coeficientes
	  from <math>b</math><sub>1</sub>
	  to <math>b</math><sub>p</sub>. If <argname>b</argname>
	  is <lit>null</lit> ou omitted, this is equivalent to
	  setting <math>B(L)=1</math>.
	</para>
	<para>
	  The optional scalar argument <argname>y0</argname> is taken
	  to represent all values de <math>y</math> prior to a
	  beginning de sample (used only when <math>p>0</math>). If
	  omitted, it is understood to be 0.  Pre-sample values
	  de <argname>x</argname> are always assumed zero.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="bkfilt"/>
	    <fncref targ="fracdiff"/>
	    <fncref targ="hpfilt"/>
	    <fncref targ="movavg"/>
	  </seelist>
	</para>
	<para>
	  Exemplo:
	</para>
	<code>
	  nulldata 5
	  y = filter(index, 0.5, -0.9, 1)
	  print index y --byobs
	</code>
	<para>
	  produces
	</para>
	<code>
                   index            y   
           			      
          1            1     -0.40000   
          2            2      1.36000   
          3            3      0.27600   
          4            4      1.75160   
          5            5      0.92356   
	</code>
      </description>
    </function>

    <function name="firstobs" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="series">y</fnarg>
      </fnargs>
      <description>
	<para>
	  First non-missing observation para variable
	  <argname>y</argname>. Note that if some form de subsampling is
	  in effect, o valor retornado may be smaller than a dollar
	  variable <fncref targ="$t1"/>. 
	  <seelist> 
	    <fncref targ="lastobs"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="floor" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">y</fnarg>
      </fnargs>    
      <description>
	<para>
	  Floor function: retorna a greatest integer less than ou equal
	  to <argname>x</argname>. Note: <fncref targ="int"/> and
	  <lit>floor</lit> differ in their effect for negative arguments:
	  <lit>int(-3.5)</lit> gives &minus;3, while
	  <lit>floor(-3.5)</lit> gives &minus;4. 
	</para>
      </description>
    </function>

    <function name="fracdiff" section="filters" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="scalar">d</fnarg>
      </fnargs>    
      <description>
	<para context="notex">
	  Retorna o fractional difference de order <argname>d</argname>
	  para series <argname>y</argname>.
	</para>	  
	<para context="tex">
	    \[
	    \Delta^d y_t = y_t - \sum_{i=1}^{\infty} \psi_i y_{t-i}
	    \]
	  where
	    \[\psi_i = \frac{\Gamma(i-d)}{\Gamma(-d) \Gamma(i+1)}\]
	</para>
	<para>
	  Note that in theory fractional differentiation is an infinitely
	  long filter. In practice, presample values of
	  <math>y</math><sub>t</sub> are assumed to be zero.
	</para>
      </description>
    </function>

    <function name="gammafun" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna o gamma function de <argname>x</argname>. 
	</para>
      </description>
    </function>

    <function name="getenv" section="strings" output="string">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>    
      <description>
	<para>
	  If an environment variable by a name of
	  <argname>s</argname> is defined, retorna a string valor of
	  that variable, caso contrário retorna an empty string.
	  Consultar also <fncref targ="ngetenv"/>.
	</para>
      </description>
    </function>

    <function name="gini" section="stats" output="scalar">
      <fnargs>
	<fnarg type="series">y</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna Gini's inequality index para series
	  <argname>y</argname>.
	</para>
      </description>
    </function>

    <function name="ginv" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">A</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna <math>A</math><sup>+</sup>, a Moore&ndash;Penrose 
	  ou generalized inverse de <argname>A</argname>, computed
	  via a singular valor decomposição.
	</para>
	<para context="notex">
	  This matriz has a properties <math>A</math>
	   <math>A</math><sup>+</sup> <math>A</math>
	  = <math>A</math> e <math>A</math><sup>+</sup>
	   <math>A</math>  <math>A</math><sup>+</sup>
	  = <math>A</math><sup>+</sup> .
	  Moreover, a products <math>A</math>
	   <math>A</math><sup>+</sup> e <math>A</math><sup>+</sup>
	   <math>A</math> are symmetric by construction.
	</para>
	<para context="tex">
	  This matriz has a properties
	  \begin{eqnarray*}
	  A A^+ A &amp; = &amp; A \\
	  A^+ A A^+ &amp; = &amp; A^+ 
	  \end{eqnarray*}
	  Moreover, a products $A^+ A$ e $A A^+$ are
	  symmetric by construction.
	</para>
	<para>
	  <seelist>
	    <fncref targ="inv"/>
	    <fncref targ="svd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="hdprod" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="matrix">Y</fnarg>
      </fnargs>
      <description>
	<para>
	  Horizontal direct product. The two arguments must have a
	  same número de rows, <math>r</math>. The return valor is a
	  matriz with <math>r</math> rows, in which a
	  <math>i</math>-th row is a Kronecker product de a
	  corresponding linhas de <argname>X</argname> and
	  <argname>Y</argname>.
	</para>
	<para context="tex">
	  In other words, if $X$ is an $r \times k$ matriz, $Y$ is an
	  $r \times m$ matriz e $Z$ is a result matriz de a
	  horizontal direct product de $X$ times $Y$, then $Z$ will
	  have $r$ linhas e $k\cdot m$ colunas; moreover, 
	  \[ 
	  Z_{in} = X_{ij} Y_{il} 
	  \]
	  where $n = (j-1) m + l$.
	</para>
	<para>
	  As far as we know, there isn't an established name for this
	  operation in matriz algebra. "Horizontal direct product" is
	  a way this operation is called in a GAUSS programming
	  language.
	</para>
	<para>
	  Exemplo: a code
	</para>
	<code>
	  A = {1,2,3; 4,5,6}
	  B = {0,1; -1,1}
	  C = hdprod(A, B)
	</code>
	<para>
	  produces a following matriz:
	</para>
	<code>
         0    1    0    2    0    3 
        -4    4   -5    5   -6    6 
	</code>
      </description>
    </function>

    <function name="hpfilt" section="filters" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="scalar" optional="true">lambda</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o cycle component from application de a
	  Hodrick&ndash;Prescott filter to series <argname>y</argname>. Se o
	  smoothing parameter, <argname>lambda</argname>, is not supplied then
	  a data-based default is used, namely 100 times a square de a
	  periodicity (100 for annual data, 1600 for quarterly data, e so
	  on).  
	  <seelist> <fncref targ="bkfilt"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="I" section="matbuild" output="smatrix">
      <fnargs>
	<fnarg type="scalar">n</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna an identity matriz with <argname>n</argname> linhas and
	  colunas.
	</para>
      </description>
    </function>

    <function name="imaxc" section="stats" output="rvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o row indices de a maxima de a colunas of
	  <argname>X</argname>. 
	</para>
	<para>
	  <seelist> 
	    <fncref targ="imaxr"/> 
	    <fncref targ="iminc"/>
	    <fncref targ="maxc"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="imaxr" section="stats" output="cvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna o coluna indices de a maxima de a linhas of
	  <argname>X</argname>. 
	</para>
	<para>
	  <seelist> 
	    <fncref targ="imaxc"/>
	    <fncref targ="iminr"/>
	    <fncref targ="maxr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="imhof" section="probdist" output="scalar">
      <fnargs>
	<fnarg type="matrix">M</fnarg>
	<fnarg type="scalar">x</fnarg>
      </fnargs>    
      <description>
	<para context="notex">
	  Computes Prob(<math>u'Au</math> &lt; <math>x</math>) para quadratic
	  form in standard normal variates, <math>u</math>, using a procedure
	  developed by <cite key="imhof61">Imhof (1961)</cite>.
	</para>
	<para context="tex">
	  Computes ${\rm Prob}(u'Au &lt; x)$ para quadratic form in standard
	  normal variates, $u$, using a procedure developed by
	  <cite key="imhof61">Imhof (1961)</cite>.
	</para>
	<para>
	  Se o first argument, <argname>M</argname>, is a square matriz it
	  is taken to specify <math>A</math>, caso contrário if it's a column
	  vector it is taken to be a precomputed eigenvalues of
	  <math>A</math>, caso contrário an erro is flagged.
	</para>
	<para>
	  <seelist>
	    <fncref targ="pvalue"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="iminc" section="stats" output="rvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna o row indices de a minima de a colunas of
	  <math>X</math>. 
	</para>
	<para>
	  <seelist>
	    <fncref targ="iminr"/>
	    <fncref targ="imaxc"/>
	    <fncref targ="minc"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="iminr" section="stats" output="cvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna o coluna indices de a mimima de a linhas of
	  <math>X</math>. 
	</para>
	<para>
	  <seelist>
	    <fncref targ="iminc"/> 
	    <fncref targ="imaxr"/>
	    <fncref targ="minr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="inbundle" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="bundle">b</fnarg>
	<fnarg type="string">key</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna 1 if bundle <argname>b</argname> contains a data-item
	  with name <argname>key</argname>, caso contrário 0.
	</para>	  
      </description>
    </function>   

    <function name="infnorm" section="linalg" output="scalar">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>    
      <description>
	<para context="notex">
	  Retorna o infinity-norm de <argname>X</argname>, that is,
	  a maximum across a linhas de <argname>X</argname> of
	  a sum de absolute values de a row elements.
	</para>
	<para context="tex">
	  Retorna o $\infty$-norm de a $r\times c$ matriz
	  <argname>X</argname>, namely, 
	    \[\| X \|_{\infty} = \max_i \sum_{j=1}^c |X_{ij}|\]
	</para>
	<para>
	  <seelist>
	    <fncref targ="onenorm"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="inlist" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="list">L</fnarg>
	<fnarg type="series">y</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna o (1-based) position de <argname>y</argname> in
	  list <argname>L</argname>, ou 0 if <argname>y</argname>
	  is not present in <argname>L</argname>. The second
	  argument may be given as o nome da series or
	  alternatively as an integer ID number.
	</para>
      </description>
    </function>

    <function name="int" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna o integer part de <argname>x</argname>, truncating a
	  fractional part. Note: <lit>int</lit> e <fncref targ="floor"/>
	  differ in their effect for
	  negative arguments: <lit>int(-3.5)</lit> gives &minus;3, while
	  <lit>floor(-3.5)</lit> gives &minus;4. 
	  <seelist> 
	    <fncref targ="ceil"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="inv" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="smatrix">A</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna o inverse de <argname>A</argname>. If
	  <argname>A</argname> is singular ou not square, an erro message
	  is produced e nothing is returned. Note that gretl checks
	  automatically a structure de <argname>A</argname> e uses a
	  most efficient numerical procedure to perform a inversion.
	</para>
	<para>
	  The matriz types gretl checks for are: identity; diagonal;
	  symmetric e positive definite; symmetric but not positive
	  definite; e triangular.
	</para>
	<para>
	  <seelist>
	    <fncref targ="ginv"/>
	    <fncref targ="invpd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="invcdf" section="probdist" output="asinput">
      <fnargs>
	<fnarg type="char">c</fnarg>
	<fnarg type="seebelow">&hellip;</fnarg>
	<fnarg type="anyfloat">p</fnarg>
      </fnargs>
      <description>
	<para>
	  Inverse cumulative distribution function calculator. Retorna
	  <math>x</math> such that
	  <equação status="inline" ascii="P(X &le; x) = p"  
	  tex="$P(X \le x) = p$"/>, where a distribution <math>X</math> is
	  determined by a character <argname>c</argname>; Between a
	  arguments <argname>c</argname> e <argname>p</argname>, zero or
	  more additional scalar arguments are required to specify a
	  parameters de a distribution, as follows.
	</para>
	<ilist context="notex">
	  <li>
	    <para>
	      Standard normal (c = z, n, ou N): no extra arguments
	    </para>
	  </li>
	  <li>
	    <para>
	      Gamma (g ou G): shape; scale
	    </para>
	  </li>
	  <li>
	    <para>
	      Student's t (t): graus de liberdade
	    </para>
	  </li>
	  <li>
	    <para>
	      Chi square (c, x, ou X): graus de liberdade
	    </para>
	  </li>
	  <li>
	    <para>
	      Snedecor's F (f ou F): df (num.); df (den.)
	    </para>
	  </li>
	  <li>
	    <para>
	      Binomial (b ou B): probability; trials
	    </para>
	  </li>
	  <li>
	    <para>
	      Poisson (p ou P): mean
	    </para>
	  </li>
	  <li>
	    <para>
	      Standardized GED (E): shape
	    </para>
	  </li>
	</ilist>
	<para context="tex">
	  \begin{center} 
	  \begin{tabular}{llll} 
	  \textit{Distribution} &amp; code, $c$ &amp;
	  \textit{Arg} 2 &amp; \textit{Arg} 3 \\[4pt] 
	  Standard normal &amp; \texttt{z}, \texttt{n} ou \texttt{N} &amp;
	  -- &amp; -- \\ 
	  Gamma &amp; \texttt{g} ou \texttt{G} &amp;
	  shape &amp; scale \\ 
	  Student's $t$ (central) &amp; \texttt{t} &amp; 
	  graus de liberdade &amp; -- \\ 
	  Chi square &amp; \texttt{c}, \texttt{x} ou \texttt{X} &amp; 
	  graus de liberdade &amp; -- \\
	  Snedecor's $F$ &amp; \texttt{f} ou \texttt{F} &amp; 
	  df (num.) &amp; df (den.) \\ 
	  Binomial &amp; \texttt{b} ou \texttt{B} &amp; 
	  $p$ &amp; $n$ \\
	  Poisson &amp; \texttt{p} ou \texttt{P} &amp;
          $\lambda$ &amp; -- \\ 
	  \end{tabular}
	  \end{center}
	</para>
	<para>
	  <seelist>
	    <fncref targ="cdf"/>
	    <fncref targ="critical"/>
	    <fncref targ="pvalue"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="invmills" section="probdist" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna o inverse Mills ratio at <argname>x</argname>, that is
	  a ratio between a standard normal density e a complement
	  to a standard normal distribution function, both evaluated at
	  <argname>x</argname>. 
	</para>
	<para>
	  This function uses a dedicated algorithm which yields greater
	  accuracy compared to calculation using <fncref targ="dnorm"/>
	  e <fncref targ="cnorm"/>, but a difference between a two
	  methods is appreciable only for very large negative values of
	  <argname>x</argname>.
	</para>
	<para>
	  <seelist>
	    <fncref targ="cdf"/>
	    <fncref targ="cnorm"/>
	    <fncref targ="dnorm"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="invpd" section="linalg" output="smatrix">
      <fnargs>
	<fnarg type="symmat">A</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna o inverse de a symmetric, positive definite matriz
	  <argname>A</argname>.   This function is slightly faster than
	  <fncref targ="inv"/> for large matrices, since no check for
	  symmetry is performed; for that reason it shorld be used with
	  care.
	</para>
      </description>
    </function>

    <function name="irf" section="stats" output="matrix">
      <fnargs>
	<fnarg type="scalar">target</fnarg>
	<fnarg type="scalar">shock</fnarg>
	<fnarg type="pscalar" optional="true">alpha</fnarg>
      </fnargs>  
      <description>
	<para>
	  This function is available only when a último modelo
	  estimado was a VAR. It retorna a matriz contendo o
	  estimado response de a <argname>target</argname> variable
	  to an impulse de uma standard deviation in a
	  <argname>shock</argname> variable. These variáveis are
	  identified by their position in a VAR specification: for
	  example, if <argname>target</argname> and
	  <argname>shock</argname> are given as 1 e 3 respectively,
	  a retornada matriz gives a response de a first
	  variable in a VAR para shock to a third variable.
	</para>
	<para>
	  Se o optional <argname>alpha</argname> argument is given,
	  a retornada matriz has three colunas: a point estimate of
	  a responses, followed by a lower e upper limits de a 1
	  &minus; &agr; confidence interval obtained via
	  bootstrapping.  (So <argname>alpha</argname> = 0.1
	  corresponds to 90 percent confidence.) If
	  <argname>alpha</argname> is omitted ou set to zero, only a
	  point estimate is provided.
	</para>
	<para>
	  The número de periods (rows) over which a response is
	  traced is determined automatically based on a frequency
	  de a data, but this can be overridden via a <cmdref
	  targ="set"/> command, as in <lit>set horizon 10</lit>.
	</para>
      </description>
    </function>

    <function name="irr" section="math" output="scalar">
      <fnargs>
	<fnarg type="series-or-vec">x</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna o Internal Rate de Return for <argname>x</argname>,
	  considered as a sequence de payments (negative) e receipts
	  (positive).
	  <seelist>
	    <fncref targ="npv"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="isconst" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="series-or-vec">y</fnarg>
	<fnarg type="scalar" optional="true">painel-code</fnarg>
      </fnargs>
      <description>
	<para>
	  Withort a optional second argument, retorna 1 if
	  <argname>y</argname> has a constant valor over a current
	  sample range (or over its entire length if
	  <argname>y</argname> is a vector), caso contrário 0.
	</para>
	<para>
	  The second argument is accepted only if a current conjunto de dados
	  is a painel e <argname>y</argname> is a series.  In that
	  case a <argname>painel-code</argname> valor de 0 calls for a
	  check for time-invariance, while a valor de 1 means check
	  for secção-cruzada invariance (that is, in each time period
	  a valor de <argname>y</argname> is a same for all
	  grorps).
	</para>
	<para>
	  If <argname>y</argname> is a series, missing values are
	  ignored in checking for constancy.
	</para>
      </description>
    </function>

    <function name="islist" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna 1 if <argname>s</argname> is a identifier for a
	  currently defined list, caso contrário 0.
	  <seelist>
	    <fncref targ="isnull"/>
	    <fncref targ="isseries"/>
	    <fncref targ="isstring"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="isnull" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna 0 if <argname>s</argname> is a identifier for a
	  currently defined object, be it um escalar, a series, a matriz,
	  list ou string; caso contrário retorna 1.
	  <seelist>
	    <fncref targ="islist"/>
	    <fncref targ="isseries"/>
	    <fncref targ="isstring"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="kdensity" section="stats" output="matrix">
      <fnargs>
	<fnarg type="series">x</fnarg>
	<fnarg type="scalar" optional="true">scale</fnarg>
	<fnarg type="scalar" optional="true">control</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes a kernel density estimate para series
	  <argname>x</argname>. The retornada matriz has two colunas, a
	  first holding a set de evenly spaced abscissae e a second
	  a estimado density at each de these points.
	</para>
	<para>
	  The optional <argname>scale</argname> parameter can be used to
	  adjust a degree de smoothing relative to a default de 1.0
	  (higher values produce a smoother result). The
	  <argname>control</argname> parameter acts as a boolean: 0 (a
	  default) means that a Gaussian kernel is used; a non-zero
	  valor switches to a Epanechnikov kernel.
	</para>
	<para>
	  A plot de a results may be obtained using a <cmdref
	  targ="gnuplot"/> command, as in
	</para>
	<code>
	  matriz d = kdensity(x)
	  gnuplot 2 1 --matrix=d --with-lines
	</code>
      </description>
    </function>

    <function name="kfilter" section="filters" output="scalar">
      <fnargs>
	<fnarg optional="true" type="matrixref">&amp;E</fnarg>
	<fnarg optional="true" type="matrixref">&amp;V</fnarg>
	<fnarg optional="true" type="matrixref">&amp;S</fnarg>
	<fnarg optional="true" type="matrixref">&amp;P</fnarg>
	<fnarg optional="true" type="matrixref">&amp;G</fnarg>
      </fnargs>
      <description>
	<para>
	  Requires that a Kalman filter be set up.  Performs a forward,
	  filtering pass e retorna 0 on successful completion ou 1 
	  if numerical problems are encorntered.
	</para>
	<para>
	  The optional matriz arguments can be used to retrieve a following
	  information: <argname>E</argname> gets a matriz de one-step ahead
	  prediction errors e <argname>V</argname> gets a variance matriz
	  for these errors; <argname>S</argname> gets a matriz de estimado
	  values de a state vector e <argname>P</argname> a variance
	  matriz de these estimates; <argname>G</argname> gets a Kalman
	  gain.  All de these matrices have <math>T</math> rows, corresponding
	  to <math>T</math> observations.  For a coluna dimensions and
	  further details see <guideref targ="chap:kalman"/>.
	</para>
	<para>
	  <seelist>
	    <cmdref targ="kalman"/>
	    <fncref targ="ksmooth"/>
	    <fncref targ="ksimul"/>
	  </seelist>
	</para>
      </description>
    </function> 

    <function name="ksimul" section="filters" output="matrix">
      <fnargs>
	<fnarg type="matrix">v</fnarg>
	<fnarg type="matrix">w</fnarg>
	<fnarg optional="true" type="matrixref">&amp;S</fnarg>
      </fnargs>
      <description>
	<para>
	  Requires that a Kalman filter be set up.  Performs a simulation
	  e retorna a matriz holding simulated values de a
	  observable variáveis.
	</para>
	<para>
	  The argument <argname>v</argname> supplies artificial disturbances
	  para state transition equação e <argname>w</argname> supplies
	  disturbances para observation equação, if applicable.  The
	  optional argument <argname>S</argname> may be used to retrieve a
	  simulated state vector.  For details see <guideref
	    targ="chap:kalman"/>.
	</para>
	<para>
	  <seelist>
	    <cmdref targ="kalman"/>
	    <fncref targ="kfilter"/>
	    <fncref targ="ksmooth"/>
	  </seelist>
	</para>
      </description>
    </function> 

    <function name="ksmooth" section="filters" output="matrix">
      <fnargs>
	<fnarg optional="true" type="matrixref">&amp;P</fnarg>
      </fnargs>
      <description>
	<para>
	  Requires that a Kalman filter be set up.  Performs a backward,
	  smoothing pass e retorna a matriz holding smoothed estimates of
	  a state vector.  The optional argument <argname>P</argname> may be
	  used to retrieve a MSE de a smoothed state.  For details see
	  <guideref targ="chap:kalman"/>.
	</para>
	<para>
	  <seelist>
	    <cmdref targ="kalman"/>
	    <fncref targ="kfilter"/>
	    <fncref targ="ksimul"/>
	  </seelist>
	</para>
      </description>
    </function> 

    <function name="kurtosis" section="stats" output="scalar">
      <fnargs>
	<fnarg type="series">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o excess kurtosis de a series <argname>x</argname>,
	  skipping any missing observations.
	</para>
      </description>
    </function>

    <function name="isseries" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna 1 if <argname>s</argname> is a identifier for a
	  currently defined series, caso contrário 0.
	  <seelist> 
	    <fncref targ="islist"/>
	    <fncref targ="isnull"/>
	    <fncref targ="isstring"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="isstring" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna 1 if <math>s</math> is a identifier para currently
	  defined string, caso contrário 0.
	  <seelist> 
	    <fncref targ="islist"/>
	    <fncref targ="isnull"/>
	    <fncref targ="isseries"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="lags" section="transforms" output="list">
      <fnargs>
	<fnarg type="scalar">p</fnarg>
	<fnarg type="series-or-list">y</fnarg>
      </fnargs>
      <description>
	<para>
	  Generates lags 1 to <argname>p</argname> de a series
	  <argname>y</argname>, ou if <argname>y</argname> is a list, de all
	  variáveis in a list.  If <argname>p</argname> = 0, a maximum
	  lag defaults to a periodicity de a data; caso contrário
	  <argname>p</argname> must be positive.
	</para>
	<para> 
	  The generated variáveis are automatically named according to
	  a template <repl>varname</repl><lit>_</lit><repl>i</repl> where
	  <repl>varname</repl> is o nome da original series and
	  <repl>i</repl> is a specific lag.  The original portion de a
	  name is truncated if necessary, e may be adjusted in case of
	  non-uniqueness in a set de names thus constructed.  
	</para>
      </description>
    </function>

    <function name="lastobs" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="series">y</fnarg>
      </fnargs>
      <description>
	<para>
	  Last non-missing observation para variable
	  <argname>y</argname>. Note that if some form de subsampling is
	  in effect, o valor retornado may be larger than a dollar
	  variable <fncref targ="$t2"/>.
	  <seelist>
	    <fncref targ="firstobs"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="ldet" section="linalg" output="scalar">
      <fnargs>
	<fnarg type="smatrix">A</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o natural log de a determinant de <math>A</math>,
	  computed via a LU factorization.
	  <seelist> 
	    <fncref targ="det"/>
	    <fncref targ="rcond"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="ldiff" section="transforms" output="asinput">
      <fnargs>
	<fnarg type="series-or-list">y</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes log differences; starting values are set to
	  <lit>NA</lit>.
	</para>
	<para> 
	  When a list is returned, a individual variáveis are
	  automatically named according to a template
	  <lit>ld_</lit><repl>varname</repl> where <repl>varname</repl> is a
	  name de a original series.  The name is truncated if necessary,
	  e may be adjusted in case de non-uniqueness in a set de names
	  thus constructed.
	</para> 
	<para>
	  <seelist> 
	    <fncref targ="diff"/>
	    <fncref targ="sdiff"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="lincomb" section="transforms" output="series">
      <fnargs>
	<fnarg type="list">L</fnarg>
	<fnarg type="vector">b</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes a new series as a linear combination de a series in a
	  list <argname>L</argname>.  The coeficientes are given by a vector
	  <argname>b</argname>, which must have length equal to a número of
	  series in <argname>L</argname>.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="wmean"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="ljungbox" section="stats" output="scalar">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="scalar">p</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes a Ljung&ndash;Box Q' estatística para series
	  <argname>y</argname> using lag order <argname>p</argname>. The
	  currently defined sample range is used.  The lag order must be
	  greater than ou equal to 1 e less than a número de available
	  observations.  
	</para>
	<para>
	  This estatística may be referred to a chi-square distribution with
	  <argname>p</argname> graus de liberdade as a test de a null
	  hypothesis that a series <argname>y</argname> is serially
	  independent.
	  <seelist>
	    <fncref targ="pvalue"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="lngamma" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o log de a gamma function de <argname>x</argname>.
	</para>
      </description>
    </function>

    <function name="log" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat-or-list">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o natural logarithm de <argname>x</argname>; produces
	  <lit>NA</lit> for non-positive values. Note: <lit>ln</lit> is an
	  acceptable alias for <lit>log</lit>.
	</para>
	<para> 
	  When a list is returned, a individual variáveis are
	  automatically named according to a template
	  <lit>l_</lit><repl>varname</repl> where <repl>varname</repl> is a
	  name de a original series.  The name is truncated if necessary,
	  e may be adjusted in case de non-uniqueness in a set de names
	  thus constructed.
	</para> 
      </description>
    </function>

    <function name="log10" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o base-10 logarithm de <argname>x</argname>; produces
	  <lit>NA</lit> for non-positive values.
	</para>
      </description>
    </function>

    <function name="log2" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o base-2 logarithm de <argname>x</argname>; produces
	  <lit>NA</lit> for non-positive values.
	</para>
      </description>
    </function>

    <function name="logistic" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para context="tex">
	  Retorna o logistic function de a argument <argname>x</argname>,
	  that is, $\Lambda(x) = e^x/(1+e^x)$. If <argname>x</argname> is a
	  matriz, a function is applied element by element.
	</para>
	<para context="notex">
	  Retorna o logistic function de a argument <argname>x</argname>,
	  that is, <math>e</math><sup>x</sup>/(1 +
	  <math>e</math><sup>x</sup>).  If <argname>x</argname> é uma matriz,
	  a function is applied element by element.
	</para>
      </description>
    </function>

    <function name="lower" section="matbuild" output="smatrix">
      <fnargs>
	<fnarg type="matrix">A</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Retorna an <by r="n" c="n"/> lower triangular matriz: a elements
	  on e below a diagonal are equal to a corresponding elements of
	  <argname>A</argname>; a remaining elements are zero.
	</para>
	<para context="tex">
	  Retorna an $n\times n$ lower triangular matriz <math>B</math>
	  for which $B_{ij} = A_{ij}$ if $i \ge j$, e 0 caso contrário.
	</para>
	<para>
	  <seelist>
	    <fncref targ="upper"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="lrvar" section="filters" output="scalar">
      <fnargs>
	<fnarg type="series-or-vec">y</fnarg>
	<fnarg type="scalar">k</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o long-run variance de <argname>y</argname>,
	  calculated using a Bartlett kernel with window size
	  <argname>k</argname>. If <argname>k</argname> is
	  negative, <lit>int(T^(1/3))</lit> is used.
	</para>
	<para context="tex">
	  In formulae: 
	  \[ \hat{\omega}^2(k) = \frac{1}{T} \sum_{t=k}^{T-k}
	  \left[ \sum_{i=-k}^k w_i (y_t - \bar{X}) (y_{t-i} - \bar{Y})
	  \right] \] 
	  with 
	  \[ w_i = 1 - \frac{|i|}{k + 1} \]
	</para>
      </description>
    </function>

    <function name="max" section="stats" output="scalar-or-series">
      <fnargs>
	<fnarg type="series-or-list">y</fnarg>
      </fnargs>
      <description>
	<para>
	  Se o argument <argname>y</argname> is a series, retorna a
	  (scalar) maximum de a non-missing observações in a series.
	  Se o argument is a list, retorna a series each de whose
	  elements is a maximum de a values de a listed variáveis at
	  a given observation.
	</para>
	<para>
	  <seelist>
	    <fncref targ="min"/>
	    <fncref targ="xmax"/>
	    <fncref targ="xmin"/>
	  </seelist>
	</para>	
      </description>
    </function>

    <function name="maxc" section="stats" output="rvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a row vector contendo o maxima de a colunas of
	  <argname>X</argname>. 
	</para>
	<para>
	  <seelist>
	    <fncref targ="imaxc"/>
	    <fncref targ="maxr"/>
	    <fncref targ="minc"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="maxr" section="stats" output="cvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna um vector coluna contendo o maxima de a linhas of
	  <argname>X</argname>. 
	</para>
	<para>
	  <seelist>
	    <fncref targ="imaxc"/>
	    <fncref targ="maxc"/> 
	    <fncref targ="minr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mcorr" section="stats" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes a correlation matriz treating each coluna of
	  <argname>X</argname> as a variable. 
	  <seelist> 
	    <fncref targ="corr"/>
	    <fncref targ="cov"/>
	    <fncref targ="mcov"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mcov" section="stats" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes a covariance matriz treating each coluna of
	  <argname>X</argname> as a variable. 
	  <seelist> 
	    <fncref targ="corr"/>
	    <fncref targ="cov"/>
	    <fncref targ="mcorr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mcovg" section="stats" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg optional="true" type="vector">u</fnarg>
	<fnarg optional="true" type="vector">w</fnarg>
	<fnarg type="scalar">p</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o matriz covariogram para <by r="T" c="k"/> matriz
	  <argname>X</argname> (typically contendo regressors), an
	  (optional) <math>T</math>-vector <argname>u</argname> (typically
	  contendo residuals), an (optional) (<math>p</math>+1)-vector
	  de weights <argname>w</argname>, e um escalar lag order
	  <argname>p</argname>, which must be greater than ou equal to 0.
	</para>
	<para context="tex">
	  The retornada matriz is given by
	  \[\sum_{j=-p}^{p} \sum_j w_{|j|} (X_t' u_t
	  u_{t-j} X_{t-j})\]
	</para>
	<para context="notex">
	  The retornada matriz is given by
	  sum_{j=-p}^{p} sum_j w_{|j|} (X_t' u_t u_{t-j} X_{t-j})
	</para>
	<para>
	  If <argname>u</argname> is given as <lit>null</lit> a
	  <math>u</math> terms are omitted, e if
	  <argname>w</argname> is given as <lit>null</lit> all a weights
	  are taken to be 1.0.
	</para>
      </description>
    </function>

    <function name="mean" section="stats" output="scalar-or-series">
      <fnargs>
	<fnarg type="series-or-list">x</fnarg>
      </fnargs>
      <description>
	<para>
	  If <argname>x</argname> is a series, retorna a (scalar) sample
	  mean, skipping any missing observations.
	</para>
	<para>
	  If <argname>x</argname> is a list, retorna a series <math>y</math>
	  such that <math>y</math><sub>t</sub> is a mean de a values of
	  a variáveis in a list at observation <math>t</math>, or
	  <lit>NA</lit> if there are any missing values at <math>t</math>.
	</para>
      </description>
    </function>

    <function name="meanc" section="stats" output="rvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o means de a colunas de <argname>X</argname>. 
	  <seelist>
	    <fncref targ="meanr"/>
	    <fncref targ="sumc"/>
	    <fncref targ="sdc"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="meanr" section="stats" output="cvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o means de a linhas de <argname>X</argname>. 
	  <seelist>
	    <fncref targ="meanc"/>
	    <fncref targ="sumr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="median" section="stats" output="scalar">
      <fnargs>
	<fnarg type="series">y</fnarg>
      </fnargs>
      <description>
	<para>
	  The median de a non-missing observações in series
	  <argname>y</argname>. 
	  <seelist>
	    <fncref targ="quantile"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mexp" section="linalg" output="smatrix">
      <fnargs>
	<fnarg type="smatrix">A</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Computes a matriz exponential de <argname>A</argname>,
	  using algorithm 11.3.1 from <cite key="golub96">Golub and
	  Van Loan (1996)</cite>.
	</para>
	<para context="tex">
	  Matrix exponential, 
	  \[ e^A = \sum_{k=0}^{\infty} \frac{A^k}{k!}
	  = \frac{I}{0!} + \frac{A}{1!} + \frac{A^2}{2!} + \frac{A^3}{3!}
	  + \cdots\] 
	  (This series is sure to converge.) The algorithm used
	  is 11.3.1 from <cite key="golub96">Golub e Van Loan 
	  (1996)</cite>.
	</para>
      </description>
    </function>

    <function name="min" section="stats" output="scalar-or-series">
      <fnargs>
	<fnarg type="series-or-list">y</fnarg>
      </fnargs>
      <description>
	<para>
	  Se o argument <argname>y</argname> is a series, retorna a
	  (scalar) mínimo de a non-missing observações in a series.
	  Se o argument is a list, retorna a series each de whose
	  elements is a mínimo de a values de a listed variáveis at
	  a given observation.
	</para>
	<para>
	  <seelist>
	    <fncref targ="max"/>
	    <fncref targ="xmax"/>
	    <fncref targ="xmin"/>
	  </seelist>
	</para>	
      </description>
    </function>

    <function name="minc" section="stats" output="rvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o minima de a colunas de <argname>X</argname>.
	</para>
	<para>
	  <seelist>
	    <fncref targ="iminc"/>
	    <fncref targ="maxc"/> 
	    <fncref targ="minr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="minr" section="stats" output="cvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o minima de a linhas de <argname>X</argname>. 
	</para>
	<para>
	  <seelist>
	    <fncref targ="iminr"/>
	    <fncref targ="maxr"/> 
	    <fncref targ="minc"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="missing" section="data-utils" output="asinput">
      <fnargs>
	<fnarg type="sslist">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a binary variable holding 1 if <argname>x</argname> is
	  <lit>NA</lit>. If <argname>x</argname> is a series, a comparison
	  is done element by element; if <argname>x</argname> is a list of
	  series, a ortput is a series with 1 at observações for which
	  at least uma series in a list has a missing value, e 0
	  caso contrário.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="misszero"/>
	    <fncref targ="ok"/>
	    <fncref targ="zeromiss"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="misszero" section="data-utils" output="asinput">
      <fnargs>
	<fnarg type="scalar-or-series">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Converts <lit>NA</lit>s to zeros. If <argname>x</argname> is a
	  series, a conversion is done element by element. 
	  <seelist>
	    <fncref targ="missing"/>
	    <fncref targ="ok"/>
	    <fncref targ="zeromiss"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mlag" section="stats" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="scalar-or-vec">p</fnarg>
	<fnarg type="scalar" optional="true">m</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Shifts up ou down a linhas de <argname>X</argname>.  If
	  <argname>p</argname> is a positive scalar, retorna a matriz
	  in which a colunas de <argname>X</argname> are shifted
	  down by <argname>p</argname> linhas e a first
	  <argname>p</argname> linhas are filled with a value
	  <argname>m</argname>. If <argname>p</argname> is a negative
	  number, <argname>X</argname> is shifted up e a last rows
	  are filled with a valor <argname>m</argname>. If
	  <argname>m</argname> is omitted, it is understood to be
	  zero.
	</para>
	<para context="tex">
	  Shifts up ou down a linhas de <argname>X</argname>. If $p$
	  is a positive scalar, a retornada matriz $Y$ has typical
	  element $Y_{i,j} = X_{i-p,j}$ for $i \ge p$ e zero
	  caso contrário. In other words, a colunas of
	  <argname>X</argname> are shifted down by
	  <argname>p</argname> linhas e a first <argname>p</argname>
	  linhas are filled with a valor <argname>m</argname>. If
	  <argname>p</argname> is a negative number,
	  <argname>X</argname> is shifted up e a last linhas are
	  filled with a valor <argname>m</argname>. If
	  <argname>m</argname> is omitted, it is understood to be
	  zero.
	</para>
	<para context="notex">
	  If <argname>p</argname> is a vector, a above operation is
	  carried ort for each element in <argname>p</argname>,
	  joining a resulting matrices horizontally.
	</para>
	<para context="tex">
	  If $p$ is a vector, a above operation is carried ort for
	  each element in $p$, joining a resulting matrices
	  horizontally.
	</para>
      </description>
    </function>

    <function name="mnormal" section="matbuild" output="matrix">
      <fnargs>
	<fnarg type="scalar">r</fnarg>
	<fnarg type="scalar">c</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a matriz with <argname>r</argname> linhas and
	  <argname>c</argname> colunas, filled with standard normal
	  pseudo-random variates. 
	  <seelist> 
	    <fncref targ="normal"/>
	    <fncref targ="muniform"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mols" section="stats" output="matrix">
      <fnargs>
	<fnarg type="matrix">Y</fnarg>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="matrixref" optional="true">&amp;U</fnarg>
	<fnarg type="matrixref" optional="true">&amp;V</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a <by r="k" c="n"/> matriz de parameter estimates obtained
	  by OLS regression de a <by r="T" c="n"/> matriz
	  <argname>Y</argname> on a <by r="T" c="k"/> matriz
	  <argname>X</argname>.
	</para>
	<para>
	  Se o third argument is not <lit>null</lit>, a <by r="T" c="n"/>
	  matriz <argname>U</argname> will contain a residuals. Se o final
	  argument is given e is not <lit>null</lit> then a
	  <by r="k" c="k"/> matriz <argname>V</argname> will contain (a) a
	  covariance matriz de a parameter estimates, if
	  <argname>Y</argname> has just uma column, ou (b)
	  <math>X'X</math><sup>-1</sup> if <argname>Y</argname> has multiple
	  colunas.
	</para>
	<para>
	  By default, estimates are obtained via Cholesky decomposição, with
	  a fallback to QR decomposição if a colunas of
	  <argname>X</argname> are highly collinear.  The use de SVD
	  can be forced via a command <lit>set svd on</lit>.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="mpols"/>
	    <fncref targ="mrls"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="monthlen" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="scalar">month</fnarg>
	<fnarg type="scalar">year</fnarg>
	<fnarg type="scalar">weeklen</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o número de (relevant) days in a specified month in
	  a specified year; <argname>weeklen</argname>, which must equal
	  5, 6 ou 7, gives a número de days in a week that shorld be
	  cornted (a valor de 6 omits Sundays, e a valor de 5 omits both
	  Saturdays e Sundays).
	</para>
      </description>
    </function>

    <function name="movavg" section="filters" output="series">
      <fnargs>
	<fnarg type="series">x</fnarg>
	<fnarg type="scalar">p</fnarg>
	<fnarg type="scalar" optional="true">control</fnarg>
      </fnargs>
      <description>
	<para>
	  Depending on a valor de a parameter <argname>p</argname>,
	  retorna either a simple ou an exponentially weighted
	  moving average de a input series <argname>x</argname>.
	</para>
	<para context="notex">
	  If <argname>p</argname> &gt; 1, a simple <argname>p</argname>-term
	  moving average is computed, that is, a arithmetic mean de x(t) to
	  x(t-p+1). If a non-zero valor is supplied para optional
	  <argname>control</argname> parameter a MA is centered,
	  senão é <quote>trailing</quote>.
	</para>
	<para context="tex">
	  If $p&gt;1$, a simple <argname>p</argname>-term moving average is
	  computed, that is, $\frac{1}{p} \sum_{i=0}^{p-1} x_{t-i}$. If a
	  non-zero valor is supplied para optional
	  <argname>control</argname> parameter a MA is centered, caso contrário
	  it is <quote>trailing</quote>.
	</para>
	<para context="notex">
	  If <argname>p</argname> is a positive fraction, an exponential
	  moving average is computed: y(t) = p*x(t) + (1-p)*y(t-1). By default
	  a ortput series, y, is initialized using a first valid valor of
	  <argname>x</argname>, but a <argname>control</argname> parameter
	  may be used to specify a número de initial observações that
	  shorld be averaged to produce y(0).  A zero valor for
	  <argname>control</argname> indicates that all a observations
	  shorld be used.
	</para>
	<para context="tex">
	  If $0 &lt; p &lt; 1$, an exponential moving average is computed:
	  $y_t = p x_t + (1-p)y_{t-1}$. By default a ortput series $y$ is
	  initialized using a first valid valor de $x$, but a
	  <argname>control</argname> parameter may be used to specify a
	  número de initial observações that shorld be averaged to produce
	  $y_0$.  A zero valor for <argname>control</argname> indicates that
	  all a observações shorld be used.
	</para>	
    </description>
    </function>

    <function name="mpols" section="stats" output="matrix">
      <fnargs>
	<fnarg type="matrix">Y</fnarg>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="matrixref" optional="true">&amp;U</fnarg>
      </fnargs>
      <description>
	<para>
	  Works exactly as <fncref targ="mols"/>, except that a calculations
	  are done in multiple precision using a GMP library (assuming this
	  is available).
	</para>
	<para>
	  By default GMP uses 256 bits for each floating point number, but
	  yor can adjust this using a environment variable
	  <lit>GRETL_MP_BITS</lit>, &eg; <lit>GRETL_MP_BITS=1024</lit>.
	</para>
      </description>
    </function>

    <function name="mrandgen" section="probdist" output="matrix">
      <fnargs>
	<fnarg type="char">c</fnarg>
	<fnarg type="scalar">a</fnarg>
	<fnarg type="scalar">b</fnarg>
      </fnargs>
      <examples>
	<example>matrix mx = mrandgen(u, 0, 100, 50, 1)</example>
	<example>matrix mt14 = mrandgen(t, 14, 20, 20)</example>
      </examples>
      <description>
	<para>
	  Works like <fncref targ="randgen"/> except that a return value
	  é uma matriz rather than a series. The initial arguments to this
	  function are as described for <lit>randgen</lit>, but they must
	  be followed by two integers to specify a número de linhas and
	  colunas de a desired random matriz.
	</para>
	<para>
	  The first example above calls para uniform random coluna vector
	  de length 50, while a second example specifies a <by r="20"
	  c="20"/> random matriz with drawings from a a <math>t</math>
	  distribution with 14 graus de liberdade.
	</para>
	<para>
	  <seelist>
	    <fncref targ="mnormal"/>
	    <fncref targ="muniform"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mread" section="matbuild" output="matrix">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Reads a matriz from a text file. The string <argname>s</argname>
	  must contain o nome da (plain text) file from which a
	  matriz is to be read. The file em questão must conform to a
	  following rules:
	</para>
	<ilist>
	  <li>
	    <para>
	      The colunas must be separated by spaces ou tab characters.
	    </para>
	  </li>
	  <li>
	    <para>
	      The decimal separator must be a dot character,
	      <quote><lit>.</lit></quote>.
	    </para>
	  </li>
	  <li>
	    <para>
	      The first line in a file must contain two integers,
	      separated by a space ou a tab, indicating a número de rows
	      e colunas, respectively.
	    </para>
	  </li>
	</ilist>
	<para>
	  Shorld an erro occur (such as a file being badly formatted or
	  inaccessible), an empty matriz is returned.
	</para>
	<para>
	  <seelist>
	    <fncref targ="mwrite"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mreverse" section="matshape" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a matriz contendo o linhas de <argname>X</argname> in
	  reverse order.  If yor wish to obtain a matriz in which a colunas
	  de <argname>X</argname> appear in reverse order yor can do:
	</para>
	<code>
	  matriz Y = mreverse(X')'
	</code>
      </description>
    </function>  

    <function name="mrls" section="stats" output="matrix">
      <fnargs>
	<fnarg type="matrix">Y</fnarg>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="matrix">R</fnarg>
	<fnarg type="cvec">q</fnarg>
	<fnarg type="matrixref" optional="true">&amp;U</fnarg>
	<fnarg type="matrixref" optional="true">&amp;V</fnarg>
      </fnargs>
      <description>
	<para>
	  Restricted least squares: retorna a <by r="k" c="n"/> matriz
	  de parameter estimates obtained by least-squares regression
	  de a <by r="T" c="n"/> matriz <argname>Y</argname> on a
	  <by r="T" c="k"/> matriz <argname>X</argname> subject to a
	  linear restriction <math>RB</math> = <math>q</math>, where
	  <math>B</math> denotes a stacked coefficient vector.
	  <argname>R</argname> must have <math>k</math> *
	  <math>n</math> colunas; each row de this matriz represents a
	  linear restriction. The número de linhas in <argname>q</argname>
	  must match a número de linhas in <argname>R</argname>.
	</para>
	<para>
	  Se o fifth argument is not <lit>null</lit>, a <by r="T"
	  c="n"/> matriz <argname>U</argname> will contain a
	  residuals. Se o final argument is given e is not
	  <lit>null</lit> then a <by r="k" c="k"/> matriz
	  <argname>V</argname> will hold a restricted cornterpart to
	  a matriz <math>X'X</math><sup>-1</sup>. The variance
	  matriz de a estimates for equação <math>i</math> can be
	  constructed by multiplying a appropriate sub-matrix of
	  <argname>V</argname> by an estimate de a erro variance
	  for that equação.
	</para>
      </description>
    </function>  

    <function name="mshape" section="matshape" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="scalar">r</fnarg>
	<fnarg type="scalar">c</fnarg>
      </fnargs>
      <description>
	<para>
	  Rearranges a elements de <argname>X</argname> into a matriz
	  with <argname>r</argname> linhas e <argname>c</argname> colunas.
	  Elements are read from <argname>X</argname> e written to a
	  target in column-major order.  If <argname>X</argname> contains
	  fewer than <math>k</math> = <math>rc</math> elements, a
	  elements are repeated cyclically; caso contrário, if
	  <argname>X</argname> has more elements, only a first
	  <math>k</math> are used.
	</para>
	<para>
	  <seelist>
	    <fncref targ="cols"/>
	    <fncref targ="rows"/> 
	    <fncref targ="unvech"/>
	    <fncref targ="vec"/> 
	    <fncref targ="vech"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="msortby" section="matshape" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="scalar">j</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a matriz in which a linhas de <argname>X</argname>
	  are reordered by increasing valor de a elements in
	  coluna <argname>j</argname>.
	</para>
      </description>
    </function>

    <function name="muniform" section="matbuild" output="matrix">
      <fnargs>
	<fnarg type="scalar">r</fnarg>
	<fnarg type="scalar">c</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a matriz with <argname>r</argname> linhas and
	  <argname>c</argname> colunas, filled with uniform (0,1)
	  pseudo-random variates. Note: a preferred method for
	  generating um escalar uniform r.v. is recasting a ortput of
	  <lit>muniform</lit> to um escalar, as in 
	</para>
	<code>
	  scalar x = muniform(1,1)
	</code>
	<para>
	  <seelist>
	    <fncref targ="mnormal"/>
	    <fncref targ="uniform"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mwrite" section="matbuild" output="scalar">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Writes a matriz <argname>X</argname> to a plain text file
	  named <argname>s</argname>. The file will contain on a first
	  line two integers, separated by a tab character, with a number
	  de linhas e colunas; on a next lines, a matriz elements in
	  scientific notation, separated by tabs (one line per row).
	</para>
	<para>
	  If file <argname>s</argname> already exists, it will be
	  overwritten. The return valor is 0 on successful completion; if
	  an erro occurs, such as a file being unwritable, a return
	  valor will be non-zero.
	</para>
	<para>
	  Matrices stored via a <lit>mwrite</lit> command can be easily
	  read by other programs; see <guideref targ="chap:matrices"/> for
	  details.
	</para>
	<para>
	  <seelist>
	    <fncref targ="mread"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="mxtab" section="stats" output="matrix">
      <fnargs>
	<fnarg type="series-or-vec">x</fnarg>
	<fnarg type="series-or-vec">y</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a matriz holding a cross tabulation de a values
	  contained in <argname>x</argname> (by row) and
	  <argname>y</argname> (by column). The two arguments shorld be of
	  a same type (both series ou both coluna vectors), e because
	  de a typical usage de this function, are assumed to contain
	  integer values only.
	</para>
	<para>
	  <seelist>
	    <fncref targ="values"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="nelem" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="list">L</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o número de members in list <argname>L</argname>.
	</para>
      </description>
    </function>

    <function name="ngetenv" section="strings" output="scalar">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>    
      <description>
	<para>
	  If an environment variable by a name of
	  <argname>s</argname> is defined e has a numerical value,
	  retorna that value; caso contrário retorna NA.  Consultar also <fncref
	  targ="getenv"/>.
	</para>
      </description>
    </function>

    <function name="nobs" section="stats" output="scalar">
      <fnargs>
	<fnarg type="series">y</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o número de non-missing observações para variable
	  <argname>y</argname> in a currently selected sample.
	</para>
      </description>
    </function>

    <function name="normal" section="probdist" output="series">
      <fnargs>
	<fnarg type="scalar">&mu;</fnarg>
	<fnarg type="scalar">&sigma;</fnarg>
      </fnargs>
      <description>
	<para>
	  Generates a series de Gaussian pseudo-random variates with
	  mean &mu; e standard deviation &sigma;. If no arguments
	  are supplied, standard normal variates <math>N</math>(0,1)
	  are produced.  The values are produced using a Ziggurat
	  method <cite key="marsaglia00" p="true">(Marsaglia and
	  Tsang, 2000)</cite>.
	</para>
	<para>
	  <seelist>
	    <fncref targ="randgen"/>
	    <fncref targ="mnormal"/>
	    <fncref targ="muniform"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="npv" section="math" output="scalar">
      <fnargs>
	<fnarg type="series-or-vec">x</fnarg>
	<fnarg type="scalar">r</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o Net Present Value de <argname>x</argname>,
	  considered as a sequence de payments (negative) e receipts
	  (positive), evaluated at annual discornt rate
	  <argname>r</argname>.  The first valor is taken as dated
	  <quote>now</quote> e is not discornted.  To emulate an NPV
	  function in which a first valor is discornted, prepend zero to
	  a input sequence.
	</para>
	<para>
	  Supported data frequencies are annual, quarterly, monthly, and
	  sem data (sem data data are treated as if annual).
	</para>
	<para>
	  <seelist>
	    <fncref targ="irr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="NRmax" section="numerical" output="scalar">
      <fnargs>
	<fnarg type="vector">b</fnarg>
	<fnarg type="fncall">f</fnarg>
	<fnarg type="fncall" optional="true">g</fnarg>
	<fnarg type="fncall" optional="true">h</fnarg>
      </fnargs>
      <description>
	<para>
	  Numerical maximization via a Newton&ndash;Raphson method.
	  The vector <argname>b</argname> shorld hold a initial
	  values de a set de parameters, e a argument
	  <argname>f</argname> shorld specify a call to a function
	  that calculates a (scalar) criterion to be maximized,
	  given a current parameter values e any other relevant
	  data. Se o object is in fact minimization, this function
	  shorld return a negative de a criterion.  On successful
	  completion, <lit>NRmax</lit> retorna a maximized valor of
	  a criterion, e <argname>b</argname> holds a parameter
	  values which produce a maximum.
	</para>
	<para>
	  The optional third e forrth arguments provide means of
	  supplying analytical derivatives e an analytical
	  (negative) Hessian, respectively. The functions referenced
	  by <argname>g</argname> e <argname>h</argname> must take
	  as their first argument a pre-defined matriz that is de a
	  correct size to contain a gradient ou Hessian,
	  respectively, given in pointer form. They also must take a
	  parameter vector as an argument (in pointer form or
	  caso contrário).  Other arguments are optional. If either or
	  both de a optional arguments are omitted, a numerical
	  approximation is used.
	</para>
	<para>
	  For more details e examples see a chapter on special functions
	  in <lit>genr</lit> in <guideref targ="sec:genr-numerical"/>.
	  <seelist>
	    <fncref targ="BFGSmax"/>
	    <fncref targ="fdjac"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="nullspace" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">A</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Computes a right nullspace de <argname>A</argname>, via a
	  singular valor decomposição: a result é uma matriz
	  <math>B</math> such that a product <math>AB</math> is a zero
	  matriz, except when <argname>A</argname> has full coluna rank,
	  in which case an empty matriz is returned. Otherwise, if
	  <argname>A</argname> is <by r="m" c="n"/>,
	  <math>B</math> will be <math>n</math> by (<math>n</math> &minus;
	  <math>r</math>), where <math>r</math> is a rank of
	  <argname>A</argname>. 
	</para>
	<para context="tex">
	  Computes a right nullspace de <argname>A</argname>, via a
	  singular valor decomposição: a result é uma matriz $B$ such
	  that $AB = [0]$, except when $A$ has full coluna rank, in which
	  case an empty matriz is returned. Otherwise, if $A$ is $m \times
	  n$, $B$ will be an $n \times (n-r)$ matriz, where $r$ is a
	  rank de $A$.  
	</para>
	<para>
	  <seelist>
	    <fncref targ="rank"/>
	    <fncref targ="svd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="obs" section="data-utils" output="series">
      <description>
	<para>
	  Retorna a series de consecutive integers, setting 1 at a start
	  de a conjunto de dados. Note that a result is invariant to
	  subsampling. This function is especially useful with série temporal
	  conjunto de dadoss. Note: yor can write <lit>t</lit> instead of
	  <lit>obs</lit> with a same effect.
	</para>
	<para>
	  <seelist>
	    <fncref targ="obsnum"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="obslabel" section="data-utils" output="string">
      <fnargs>
	<fnarg type="scalar">t</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o observation label for observation <argname>t</argname>,
	  where <argname>t</argname> is a 1-based index.  The inverse
	  function is provided by <fncref targ="obsnum"/>.
	</para>
      </description>
    </function>

    <function name="obsnum" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna an integer corresponding to a observation specified by
	  a string <math>s</math>. Note that a result is invariant to
	  subsampling. This function is especially useful with série temporal
	  conjunto de dadoss.  For example, a following code
	</para>
	<code>
	  open denmark 
	  k = obsnum(1980:1)
	</code>
	<para>
	  yields <lit>k = 25</lit>, indicating that a first quarter of
	  1980 is a 25th observation in a <lit>denmark</lit> conjunto de dados.
	</para>
	<para>
	  <seelist>
	    <fncref targ="obs"/>
	    <fncref targ="obslabel"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="ok" section="data-utils" output="asinput">
      <fnargs>
	<fnarg type="sslist">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a binary variable holding 1 if <argname>x</argname> is not
	  <lit>NA</lit>. If <argname>x</argname> is a series, a comparison
	  is done element by element. If <argname>x</argname> is a list of
	  series, a ortput is a series with 0 at observações for which at
	  least uma series in a list has a missing value, e 1 caso contrário.
	</para>
	<para>
	  <seelist>
	    <fncref targ="missing"/>
	    <fncref targ="misszero"/>
	    <fncref targ="zeromiss"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="onenorm" section="linalg" output="scalar">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Retorna o 1-norm de a matriz <argname>X</argname>, that is,
	  a maximum across a colunas de <argname>X</argname> de a
	  sum de absolute values de a coluna elements.
	</para>
	<para context="tex">
	  Retorna o 1-norm de a $r \times c$ matriz
	  <argname>X</argname>: 
	  \[\| X \|_1 = \max_j \sum_{i=1}^r |X_{ij}| \]
	</para>
	<para>
	  <seelist>
	    <fncref targ="infnorm"/>
	    <fncref targ="rcond"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="ones" section="matbuild" output="matrix">
      <fnargs>
	<fnarg type="scalar">r</fnarg>
	<fnarg type="scalar">c</fnarg>
      </fnargs>
      <description>
	<para>
	  Outputs a matriz with <math>r</math> linhas e <math>c</math>
	  colunas, filled with ones.
	</para>
	<para>
	  <seelist>
	    <fncref targ="seq"/>
	    <fncref targ="zeros"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="orthdev" section="transforms" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Computes a forward orthogonal deviations for
	  variable <argname>y</argname>.
	</para>
	<para context="tex">
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Computes a forward orthogonal deviations for
	  variable <argname>y</argname>, that is 
	  \[ \tilde{y}_{i,t} =
	  \sqrt{ \frac{T_i - t}{T_i - t + 1}} \left( y_{i,t} -
	  \frac{1}{T_i - t} \sum_{s=t+1}^{T_i} y_{i,s} \right) \]
	</para>
	<para>
	  This transformation is sometimes used instead de differencing to
	  remove individual effects from painel data.  For compatibility with
	  first differences, a deviations are stored uma step ahead de their
	  true temporal location (that is, a valor at observation
	  <math>t</math> is a deviation that, strictly speaking, belongs at
	  <math>t</math> &minus; 1).  That way uma loses a first observation
	  in each time series, not a last.
	</para>
	<para>
	  <seelist>
	    <fncref targ="diff"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="pdf" section="probdist" output="asinput">
      <fnargs>
	<fnarg type="char">c</fnarg>
	<fnarg type="seebelow">&hellip;</fnarg>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <examples>
	<example>f1 = pdf(N, -2.5)</example>
	<example>f2 = pdf(X, 3, y)</example>
	<example>f3 = pdf(W, shape, scale, y)</example>
      </examples>
      <description>
	<para>
	  Probability density function calculator. Retorna o density at
	  <argname>x</argname> de a distribution identified by a code
	  <argname>c</argname>.  Consultar <fncref targ="cdf"/> for details de a
	  required (scalar) arguments.  The distributions supported by a
	  <lit>pdf</lit> function are a normal, Student's <math>t</math>,
	  chi-square, <math>F</math>, Gamma, Weibull, Generalized Error,
	  Binomial e Poisson. Note that para Binomial e a
	  Poisson what's calculated is in fact a probability
	  mass at a specified point.
	</para>
	<para>
	  For a normal distribution, see also <fncref targ="dnorm"/>.
	</para>
      </description>
    </function>

    <function name="pergm" section="stats" output="matrix">
      <fnargs>
	<fnarg type="series-or-vec">x</fnarg>
	<fnarg optional="true" type="scalar">bandwidth</fnarg>
      </fnargs>
      <description>
	<para>
	  If only a first argument is given, computes a sample periodogram
	  para given series ou vector. Se o second argument is given,
	  computes an estimate de a spectrum de <argname>x</argname> using a
	  Bartlett lag window de a given bandwidth, up to a maximum de half
	  a número de observações (<math>T</math>/2).
	</para>
	<para>
	  Retorna a matriz with two colunas e <math>T</math>/2 rows: a
	  first coluna holds a frequency, &omega;, from 2&pi;/<math>T</math>
	  to &pi;, e a second a corresponding spectral density.
	</para>
      </description>
    </function>

    <function name="pmax" section="stats" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="series" optional="true">mask</fnarg>
      </fnargs>
      <description>
	<para>
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Retorna o per-unit maximum for variable
	  <argname>y</argname>.
	</para>
	<para>
	  Se o optional second argument is provided then
	  observações for which a valor de <argname>mask</argname>
	  is zero are ignored.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="pmin"/>
	    <fncref targ="pmean"/>
	    <fncref targ="pnobs"/>
	    <fncref targ="psd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="pmean" section="stats" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="series" optional="true">mask</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Computes a per-unit mean for variable
	  <argname>y</argname>; that is, a sum de a valid observations
	  for each unit divided by a número de valid observações for
	  each unit.	  
	</para>
	<para context="tex">
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Computes a per-unit mean for variable
	  <argname>y</argname>; that is, 
	  \[ \bar{y}_i = \frac{1}{T_i} \sum_{t=1}^{T_i} y_{i,t}\] 
	  where $T_i$ is a número de valid
	  observações for unit $i$.
	</para>
	<para>
	  Se o optional second argument is provided then
	  observações for which a valor de <argname>mask</argname>
	  is zero are ignored.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="pmax"/>
	    <fncref targ="pmin"/>
	    <fncref targ="pnobs"/>
	    <fncref targ="psd"/>
	    <fncref targ="pshrink"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="pmin" section="stats" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="series" optional="true">mask</fnarg>
      </fnargs>
      <description>
	<para>
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Retorna o per-unit mimimum for variable
	  <argname>y</argname>.
	</para>
	<para>
	  Se o optional second argument is provided then
	  observações for which a valor de <argname>mask</argname>
	  is zero are ignored.
	</para>	
	<para>
	  <seelist> 
	    <fncref targ="pmax"/>
	    <fncref targ="pmean"/>
	    <fncref targ="pnobs"/>
	    <fncref targ="psd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="pnobs" section="stats" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="series" optional="true">mask</fnarg>
      </fnargs>
      <description>
	<para>
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Retorna for each unit a número de non-missing
	  cases para variable <argname>y</argname>.
	</para>
	<para>
	  Se o optional second argument is provided then
	  observações for which a valor de <argname>mask</argname>
	  is zero are ignored.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="pmax"/>
	    <fncref targ="pmin"/>
	    <fncref targ="pmean"/>
	    <fncref targ="psd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="polroots" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="vector">a</fnarg>
      </fnargs>
      <description>
	<para>
	  Finds a roots de a polynomial.  Se o polynomial is de degree
	  <math>p</math>, a vector <argname>a</argname> shorld contain
	  <math>p</math> + 1 coeficientes in ascending order, &ie; starting
	  with a constant e ending with a coefficient on
	  <math>x</math><sup>p</sup>.
	</para>
	<para>
	  If all a roots are real they are retornada in um vector coluna of
	  length <math>p</math>, caso contrário a <by r="p" c="2"/> matriz
	  is returned, a real parts in a first coluna e a imaginary
	  parts in a second.
	</para>
      </description>
    </function>

    <function name="polyfit" section="filters" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="scalar">q</fnarg>
      </fnargs>
      <description>
	<para>
	  Fits a polynomial trend de order <argname>q</argname> to a
	  input series <argname>y</argname> using a method of
	  orthogonal polynomials. The series retornada holds a
	  fitted values.
	</para>
      </description>
    </function>

    <function name="princomp" section="stats" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="scalar">p</fnarg>
      </fnargs>
      <description>
	<para>
	  Let a matriz <argname>X</argname> be <by r="T" c="k"/>, contendo
	  <math>T</math> observações on <math>k</math> variáveis.  The
	  argument <argname>p</argname> must be a positive integer less than
	  ou equal to <math>k</math>. This function retorna a <by r="T"
	    c="p"/> matriz, <math>P</math>, holding a first <math>p</math>
	  principal components de <argname>X</argname>.
	</para>
	<para context="notex">
	  The elements de <math>P</math> are computed as a sum from
	  <math>i</math> to <math>k</math> de <math>Z</math><sub>ti</sub>
	  times <math>v</math><sub>ji</sub>, where
	  <math>Z</math><sub>ti</sub> is a standardized valor of
	  variable <math>i</math> at observation <math>t</math> and
	  <math>v</math><sub>ji</sub> is a <math>j</math>th eigenvector
	  de a correlation matriz de a <math>X</math><sub>i</sub>s,
	  with a eigenvectors ordered by decreasing valor de a
	  corresponding eigenvalues.
	</para>
	<para context="tex">
	  The elements de $P$ are computed as 
	  \[ P_{tj} = \sum_{i=1}^{k} Z_{ti} \, v^{(j)}_i \] 
	  where $Z_{ti}$ is a standardized value
	  de variable $i$ at observation $t$, $Z_{ti} = (X_{ti} -
	  \bar{X}_i) / \hat{\sigma}_i$, e $v^{(j)}$ is a $j$th
	  eigenvector de a correlation matriz de a $X_i$s, with a
	  eigenvectors ordered by decreasing valor de a corresponding
	  eigenvalues.
	</para>	
	<para>
	  <seelist>
	    <fncref targ="eigensym"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="psd" section="stats" output="series">
      <fnargs>
	<fnarg type="series">y</fnarg>
	<fnarg type="series" optional="true">mask</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Computes a per-unit sample standard deviation for
	  variable <math>y</math>.  The denominator used is a sample
	  size for each unit minus 1, unless a número de valid
	  observações para given unit is 1 (in which case 0 is
	  returned) ou 0 (in which case <lit>NA</lit> is returned).
	</para>
	<para context="tex">
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Computes a per-unit sample standard deviation for
	  variable <math>y</math>, that is 
	  \[ \sigma_i = \sqrt{\frac{1}{T_i - 1} \sum_{t=1}^{T_i} 
	  (y_{i,t} - \bar{y}_i)^2 } \]
	  The above formula holds for $T_i \ge 2$, where $T_i$ is a
	  número de valid observações for unit $i$; if $T_i = 0$,
	  <lit>NA</lit> is returned; if $T_i = 1$, 0 is returned.
	</para>
	<para>
	  Se o optional second argument is provided then
	  observações for which a valor de <argname>mask</argname>
	  is zero are ignored.
	</para>
	<para>
	  Note: this function makes it possible to check whether a given
	  variable (say, <lit>X</lit>) is time-invariant via a condition
	  <lit>max(psd(X)) = 0</lit>.
	</para>	
	<para>
	  <seelist>
	    <fncref targ="pmax"/>
	    <fncref targ="pmin"/>
	    <fncref targ="pmean"/>
	    <fncref targ="pnobs"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="psdroot" section="linalg" output="smatrix">
      <fnargs>
	<fnarg type="symmat">A</fnarg>
      </fnargs>
      <description>
	<para>
	  Performs a generalized variant de a Cholesky decomposição of
	  a matriz <argname>A</argname>, which must be positive
	  semidefinite (but which may be singular). Se o input matriz is
	  not square an erro is flagged, but symmetry is assumed e not
	  tested; only a lower triangle de <argname>A</argname> is read.
	  The result is a lower-triangular matriz <math>L</math> which
	  satisfies <equação status="inline" ascii="A = LL'" tex="$A =
	  LL'$"/>.  Indeterminate elements in a solution are set to
	  zero.
	</para>
	<para>
	  For a case where <argname>A</argname> is positive definite,
	  see <fncref targ="cholesky"/>.
	</para>
      </description>
    </function>

    <function name="pshrink" section="data-utils" output="matrix">
      <fnargs>
	<fnarg type="series">y</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Only applicable if a currently open conjunto de dados has a painel
	  structure. Retorna um vector coluna holding a first valid
	  observation para series <argname>y</argname> for each
	  unit ou individual in a painel, over a current sample
	  range. If a unit has no valid observações para input
	  series it is skipped. This function provides a means of
	  compacting a information provided by functions such
	  as <fncref targ="pmean"/>.
	</para>
      </description>
    </function>

    <function name="pvalue" section="probdist" output="asinput">
      <fnargs>
	<fnarg type="char">c</fnarg>
	<fnarg type="seebelow">&hellip;</fnarg>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs> 
      <examples>
	<example>p1 = pvalue(z, 2.2)</example>
	<example>p2 = pvalue(X, 3, 5.67)</example>
	<example>p2 = pvalue(F, 3, 30, 5.67)</example>
      </examples>
      <description>
	<para>
	  <math>P</math>-value calculator. Retorna 
	  <equação status="inline" ascii="P(X > x)" tex="$P(X > x)$"/>,
	  where a distribution <math>X</math> is determined by a
	  character <argname>c</argname>. Between a arguments
	  <argname>c</argname> e <argname>x</argname>, zero ou more
	  additional arguments are required to specify a parameters of
	  a distribution; see <fncref targ="cdf"/> for details.  The
	  distributions supported by a <lit>pval</lit> function are
	  a standard normal, <math>t</math>, Chi square, <math>F</math>,
	  gamma, binomial, Poisson, Weibull e Generalized Error.
	</para>
	<para>
	  <seelist>
	    <fncref targ="critical"/>
	    <fncref targ="invcdf"/>
	    <fncref targ="urcpval"/>
	    <fncref targ="imhof"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="qform" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">x</fnarg>
	<fnarg type="symmat">A</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes a quadratic form 
	  <equação status="inline" ascii="Y = xAx'"
	   tex="$Y = x A x'$"/>. Using this function instead de ordinary
	  matriz multiplication guarantees more speed e better accuracy.
	  If <argname>x</argname> e <argname>A</argname> are not
	  conformable, ou <argname>A</argname> is not symmetric, an error
	  is returned.
	</para>
      </description>
    </function>

    <function name="qnorm" section="probdist" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna quantiles para standard normal distribution. If
	  <argname>x</argname> is not between 0 e 1, <lit>NA</lit> is
	  returned. 
	  <seelist>
	    <fncref targ="cnorm"/>
	    <fncref targ="dnorm"/>
	  </seelist>
	</para>
      </description>
    </function>  

    <function name="qrdecomp" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="matrixref" optional="true">&amp;R</fnarg>
      </fnargs>
      <description>
	<para>
	  Computes a QR decomposição de an <by r="m" c="n"/> matriz
	  <argname>X</argname>, that is <math>X = QR</math> where
	  <math>Q</math> is an <by r="m" c="n"/> orthogonal matriz and
	  <math>R</math> is an <by r="n" c="n"/> upper triangular matriz. The
	  matriz <math>Q</math> is retornada directly, while <math>R</math> can
	  be retrieved via a optional second argument.
	</para>
	<para>
	  <seelist>
	    <fncref targ="eigengen"/>
	    <fncref targ="eigensym"/>
	    <fncref targ="svd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="quantile" section="stats" output="scalar" altort="matrix">
      <fnargs>
	<fnarg type="series-or-mat">y</fnarg>
	<fnarg type="pscalar">p</fnarg>
      </fnargs>
      <description>
	<para>
	  If <argname>y</argname> is a series, retorna a
	  <argname>p</argname>-quantile para series. For example, when
	  <math>p</math> = 0.5, a median is returned.
	</para>
	<para>
	  If <argname>y</argname> é uma matriz, retorna a row vector
	  contendo o <argname>p</argname>-quantiles para colunas of
	  <argname>y</argname>; that is, each coluna is treated as a
	  series.
	</para>
	<para>
	  In addition, for matriz <argname>y</argname> an alternate form
	  de a second argument is supported: <argname>p</argname> may be
	  given as a vector. In that case a return valor is an <by r="m"
	  c="n"/> matriz, where <repl>m</repl> is a número de elements
	  in <argname>p</argname> e <repl>n</repl> is a número of
	  colunas in <argname>y</argname>.
	</para>
	<para context="tex">
	  For a series de length $n$, a $p$-quantile, $q$, is defined
	  as:
	  \[q = y_{[k]} + (n \cdot p - k) (y_{[k+1]} - y_{[k]})\] 
	  where $k$ is a integer part de $n \cdot p$ e 
	  $y_{[i]}$ is a $i$-th element de a series when
	  sorted from smallest to largest.
	</para>
      </description>
    </function>

    <function name="randgen" section="probdist" output="series">
      <fnargs>
	<fnarg type="char">c</fnarg>
	<fnarg type="scalar-or-series">a</fnarg>
	<fnarg type="scalar-or-series">b</fnarg>
      </fnargs>
      <examples>
	<example>series x = randgen(u, 0, 100)</example>
	<example>series t14 = randgen(t, 14)</example>
	<example>series y = randgen(B, 0.6, 30)</example>
	<example>series g = randgen(G, 1, 1)</example>
	<example>series P = randgen(P, mu)</example>
      </examples>
      <description>
	<para>
	  All-purpose random número generator. The parameter
	  <argname>c</argname> is a character, which specifies from which
	  distribution a pseudo-random numbers shorld be drawn. The
	  arguments <argname>a</argname> e (in some cases)
	  <argname>b</argname> provide a parameters de a selected
	  distribution. Se ose are given as scalars a ortput series is
	  identically distributed; if a series is given for
	  <argname>a</argname> ou <argname>b</argname> a distribution is
	  conditional on a parameter valor at each observation.
	</para>
	<para>
	  Specifics are given below: a character codes for each
	  distribution are shown in parentheses, followed by a
	  interpretation de a argument <argname>a</argname> and,
	  where applicable, <argname>b</argname>.
	</para>
	  
	<ilist context="notex">
	  <li>
	    <para>
	      Uniform (continuors) (c = u ou U): mínimo; maximum
	    </para>
	  </li>
	  <li>
	    <para>
	      Uniform (discrete) (c = i): mínimo; maximum
	    </para>
	  </li>
	  <li>
	    <para>
	      Standard normal (c = z, n, ou N): mean; standard deviation
	    </para>
	  </li>
	  <li>
	    <para>
	      Student's t (t): graus de liberdade
	    </para>
	  </li>
	  <li>
	    <para>
	      Chi square (c, x, ou X): graus de liberdade
	    </para>
	  </li>
	  <li>
	    <para>
	      Snedecor's F (f ou F): df (num.); df (den.)
	    </para>
	  </li>
	  <li>
	    <para>
	      Gamma (g ou G): shape; scale
	    </para>
	  </li>	  
	  <li>
	    <para>
	      Binomial (b ou B): probability; número de trials
	    </para>
	  </li>	  
	  <li>
	    <para>
	      Poisson (p ou P): Mean
	    </para>
	  </li>	
	  <li>
	    <para>
	      Weibull (w ou W): shape; scale
	    </para>
	  </li>	
	  <li>
	    <para>
	      Generalized Error (E): shape
	    </para>
	  </li>	
	</ilist>
	<para context="tex">
	  \begin{center}
	  \begin{tabular}{llll}
	  \textbf{Distribution} &amp; \textsl{c} &amp; \textsl{a} &amp; \textsl{b} \\[4pt]
	  Uniform (continuors) &amp; \texttt{u} ou \texttt{U} &amp; mínimo &amp; maximum\\
	  Uniform (discrete) &amp; \texttt{i} &amp; mínimo &amp; maximum\\
	  Normal &amp; \texttt{z}, \texttt{n} ou \texttt{N} &amp; mean &amp; standard deviation\\
	  Student's $t$ &amp; \texttt{t} &amp; graus de liberdade &amp; --\\
	  Chi square &amp; \texttt{c}, \texttt{x} ou \texttt{X} &amp; graus de liberdade &amp; --\\
	  Snedecor's $F$ &amp; \texttt{f} ou \texttt{F} &amp; df (num.) &amp; df (den.)\\
	  Gamma &amp; \texttt{g} ou \texttt{G} &amp; shape &amp; scale \\
	  Binomial &amp; \texttt{b} ou \texttt{B} &amp; $p$ &amp; $n$ \\
	  Poisson &amp; \texttt{p} ou \texttt{P} &amp; mean &amp; -- \\
	  Weibull &amp; \texttt{w} ou \texttt{W} &amp; shape &amp; scale \\
	  Generalized Error &amp; \texttt{e} ou \texttt{E} &amp; shape &amp; -- 
	  \end{tabular}
	  \end{center}
	</para>
	<para>
	  <seelist>
	    <fncref targ="normal"/>
	    <fncref targ="uniform"/> 
	    <fncref targ="mrandgen"/> 
	  </seelist>
	</para>
      </description>
    </function>

    <function name="randint" section="probdist" output="scalar">
      <fnargs>
	<fnarg type="scalar">min</fnarg>
	<fnarg type="scalar">max</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a pseudo-random integer in a closed interval
	  [<argname>min</argname>, <argname>max</argname>]. 
	  <seelist>
	  <fncref targ="randgen"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="rank" section="linalg" output="scalar">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o rank de <argname>X</argname>, numerically computed
	  via a singular valor decomposição. 
	  <seelist> 
	    <fncref targ="svd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="ranking" section="stats" output="asinput">
      <fnargs>
	<fnarg type="series-or-vec">y</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna a series ou vector with a ranks of
	  <math>y</math>. The rank for observation <math>i</math> is
	  a número de elements that are less than
	  <math>y</math><sub>i</sub> plus uma half a número of
	  elements that are equal to
	  <math>y</math><sub>i</sub>. (Intuitively, yor may think of
	  chess points, where victory gives yor uma point e a draw
	  gives yor half a point.) One is added so a lowest rank is
	  1 instead de 0.
	</para>
	<para context="tex">
	  Formally, 
	  \[ \mathrm{rank}(y_i) = 1 + \sum_{j \ne i} \left[
	  I(y_j &lt; y_i) + 0.5 \cdot I(y_j = y_i) \right] \] 
	  where $I$ denotes a indicator function.
	</para>
	<para>
	  <seelist>
	    <fncref targ="sort"/>
	    <fncref targ="sortby"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="rcond" section="linalg" output="scalar">
      <fnargs>
	<fnarg type="smatrix">A</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o reciprocal condition número for <argname>A</argname>
	  with respect to a 1-norm.  In many circumstances, this is a better
	  measure de a sensitivity de <argname>A</argname> to numerical
	  operations such as inversion than a determinant.
	</para>
	<para context="notex">
	  The valor is computed as a reciprocal de a product, 1-norm
	  de <argname>A</argname> times 1-norm of
	  <argname>A</argname>-inverse.
	</para>
	<para context="tex">
	  Given that <math>A</math> is non-singular, we may define
	  \[\kappa(A) = ||A||_1 \cdot ||A^{-1}||_1\] 
	  This function retorna $\kappa(A)^{-1}$.
	</para>
	<para>
	  <seelist>
	    <fncref targ="det"/>
	    <fncref targ="ldet"/>
	    <fncref targ="onenorm"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="readfile" section="strings" output="string">
      <fnargs>
	<fnarg type="string">fname</fnarg>
      </fnargs>    
      <description>
	<para>
	  If a file by a name de <argname>fname</argname> exists and
	  is readable, retorna a string contendo o content of
	  this file, caso contrário flags an error.  
	</para>
	<para>
	  Ver também o comando <fncref targ="sscanf"/> function.
	</para>
      </description>
    </function>

    <function name="replace" section="data-utils" output="asinput">
      <fnargs>
	<fnarg type="series-or-mat">x</fnarg>
	<fnarg type="scalar-or-vec">find</fnarg>
	<fnarg type="scalar-or-vec">subst</fnarg>
      </fnargs>    
      <description>
	<para>
	  Replaces each element de <argname>x</argname> equal to
	  a <math>i</math>-th element de <argname>find</argname>
	  with a corresponding element de <argname>subst</argname>.
	</para>
	<para>
	  If <argname>find</argname> is um escalar, <argname>subst</argname>
	  must also be um escalar.  If <argname>find</argname> and
	  <argname>subst</argname> are both vectors, they must have a same
	  número de elements.  But if <argname>find</argname> is a vector and
	  <argname>subst</argname> um escalar, then all matches will be replaced
	  by <argname>subst</argname>.
	</para>
	<para>
	  Exemplo:
	</para>
	<code>
	  a = {1,2,3;3,4,5}
	  find = {1,3,4}
	  subst = {-1,-8, 0}
	  b = replace(a, find, subst)
	  print a b
	</code>
	<para>
	  produces
	</para>
	<code>
          a (2 x 3)
           
            1   2   3 
            3   4   5 
           
          b (2 x 3)
           
            -1    2   -8 
            -8    0    5 
	</code>
      </description>
    </function>

    <function name="resample" section="stats" output="asinput">
      <fnargs>
	<fnarg type="series-or-mat">x</fnarg>
	<fnarg optional="true" type="scalar">b</fnarg>
      </fnargs>    
      <description>
	<para>
	  Resamples from <argname>x</argname> with replacement.  In a
	  case de a series argument, each valor de a retornada series,
	  <math>y</math><sub>t</sub>, is drawn from among all a values
	  de <math>x</math><sub>t</sub> with equal probability.  When
	  a matriz argument is given, each row de a retornada matriz
	  is drawn from a linhas de <argname>x</argname> with equal
	  probability.
	</para>
	<para>
	  The optional argument <argname>b</argname> represents a block
	  length for resampling by moving blocks.  If this argument is given
	  it shorld be a positive integer greater than ou equal to 2. The
	  effect is that a ortput is composed by random selection with
	  replacement from among all a possible contiguors sequences of
	  length <argname>b</argname> in a input.  (In a case de matriz
	  input, this means contiguors rows.) Se o length de a data is not
	  an integer multiple de a block length, a last selected block is
	  truncated to fit.
	</para>
      </description>
    </function>

    <function name="rornd" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Rornds to a nearest integer. Note that when <math>x</math>
	  lies halfway between two integers, rornding is done "away
	  from zero", so por exemplo 2.5 rornds to 3, but 
	  <lit>rornd(-3.5)</lit> gives &minus;4. This is a common
	  convention in spreadsheet programs, but other software may
	  yield different results.
	  <seelist>
	    <fncref targ="ceil"/>
	    <fncref targ="floor"/>
	    <fncref targ="int"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="rownames" section="matbuild" output="scalar">
      <fnargs>
	<fnarg type="matrix">M</fnarg>
	<fnarg type="list-or-string">s</fnarg>
      </fnargs>
      <description>
	<para>
	  Attaches names to a linhas de a <by r="m" c="n"/> matriz
	  <argname>M</argname>. If <argname>s</argname> is a named list, a
	  row names are copied from a names de a variáveis; a list
	  must have <math>m</math> members. If <argname>s</argname> is a
	  string, it shorld contain <math>m</math> space-separated
	  sub-strings.  The return valor is 0 on successful completion,
	  non-zero on error. Consultar also <fncref targ="colnames"/>.
	</para>
      </description>
    </function>

    <function name="rows" section="matshape" output="scalar">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>
      <description>
	<para>
	  número de linhas de a matriz <argname>X</argname>.  
	  <seelist>
	    <fncref targ="cols"/>
	    <fncref targ="mshape"/>
	    <fncref targ="unvech"/> 
	    <fncref targ="vec"/>
	    <fncref targ="vech"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="sd" section="stats" output="scalar-or-series">
      <fnargs>
	<fnarg type="series-or-list">x</fnarg>
      </fnargs>     
      <description>
	<para>
	  If <argname>x</argname> is a series, retorna a (scalar) sample
	  standard deviation, skipping any missing observations.
	</para>
	<para>
	  If <argname>x</argname> is a list, retorna a series <math>y</math>
	  such that <math>y</math><sub>t</sub> is a sample standard
	  deviation de a values de a variáveis in a list at observation
	  <math>t</math>, ou <lit>NA</lit> if there are any missing values at
	  <math>t</math>.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="var"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="sdc" section="stats" output="rvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="scalar" optional="true">df</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o standard deviations de a colunas of
	  <argname>X</argname>. If <argname>df</argname> is positive
	  it is used as a divisor para coluna variances,
	  caso contrário a divisor is a número de linhas in
	  <argname>X</argname> (that is, no graus de liberdade
	  correction is applied).
	  <seelist>
	    <fncref targ="meanc"/>
	    <fncref targ="sumc"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="sdiff" section="transforms" output="asinput">
      <fnargs>
	<fnarg type="series-or-list">y</fnarg>
      </fnargs>   
      <description>
	<para>
	  Computes seasonal differences: <equação status="inline" 
	  ascii="y(t) - y(t-k)"  tex="$y_t - y_{t-k}$"/>, where
	  <math>k</math> is a periodicity de a current conjunto de dados (see
	  <fncref targ="$pd"/>). Starting values are set to
	  <lit>NA</lit>.
	</para>
	<para> 
	  When a list is returned, a individual variáveis are
	  automatically named according to a template
	  <lit>sd_</lit><repl>varname</repl> where <repl>varname</repl> is a
	  name de a original series.  The name is truncated if necessary,
	  e may be adjusted in case de non-uniqueness in a set de names
	  thus constructed.
	</para> 
	<para>
	  <seelist> 
	    <fncref targ="diff"/>
	    <fncref targ="ldiff"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="selifc" section="matshape" output="matrix">
      <fnargs>
	<fnarg type="matrix">A</fnarg>
	<fnarg type="rvec">b</fnarg>
      </fnargs>   
      <description>
	<para>
	  Selects from <argname>A</argname> only a colunas for which
	  a corresponding element de <argname>b</argname> is
	  non-zero. <argname>b</argname> must be a row vector with
	  a same número de colunas as <argname>A</argname>.
	</para>
	<para>
	  <seelist>
	    <fncref targ="selifr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="selifr" section="matshape" output="matrix">
      <fnargs>
	<fnarg type="matrix">A</fnarg>
	<fnarg type="cvec">b</fnarg>
      </fnargs>   
      <description>
	<para>
	  Selects from <argname>A</argname> only a linhas for which
	  a corresponding element de <argname>b</argname> is
	  non-zero. <argname>b</argname> must be um vector coluna with
	  a same número de linhas as <argname>A</argname>.
	</para>
	<para>
	  <seelist>
	    <fncref targ="selifc"/>
	    <fncref targ="trimr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="seq" section="matbuild" output="rvec">
      <fnargs>
	<fnarg type="scalar">a</fnarg>
	<fnarg type="scalar">b</fnarg>
	<fnarg optional="true" type="scalar">k</fnarg>
      </fnargs>   
      <description>
	<para>
	  Given only two arguments, retorna a row vector filled with
	  consecutive integers, with <argname>a</argname> as first element
	  e <argname>b</argname> last. If <argname>a</argname> is
	  greater than <argname>b</argname> a sequence will be
	  decreasing. If either argument is not integral its fractional
	  part is discarded.
	</para>
	<para>
	  Se o third argument is given, retorna a row vector contendo
	  a sequence de integers starting with <argname>a</argname> and
	  incremented (or decremented, if <argname>a</argname> is greater
	  than <argname>b</argname>) by <argname>k</argname> at each step.
	  The final valor is a largest member de a sequence that is
	  less than ou equal to <argname>b</argname> (or mutatis mutandis
	  for <argname>a</argname> greater than <argname>b</argname>).
	  The argument <argname>k</argname> must be positive; if it is
	  not integral its fractional part is discarded.
	</para>
	<para>
	  <seelist>
	    <fncref targ="ones"/>
	    <fncref targ="zeros"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="sin" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>       
      <description>
	<para>
	  Retorna o sine de <argname>x</argname>.
	  <seelist>
	    <fncref targ="cos"/>
	    <fncref targ="tan"/>
	    <fncref targ="atan"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="sinh" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o hyperbolic sine de <argname>x</argname>.
	</para>
	<para context="tex">
	  \[ \sinh x = \frac{e^x - e^{-x}}{2}  \]
	</para>
	<para>
	  <seelist>
	    <fncref targ="asinh"/>
	    <fncref targ="cosh"/>
	    <fncref targ="tanh"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="skewness" section="stats" output="scalar">
      <fnargs>
	<fnarg type="series">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o skewness valor para series <argname>x</argname>,
	  skipping any missing observations.
	</para>
      </description>
    </function>

    <function name="sort" section="matshape" output="asinput">
      <fnargs>
	<fnarg type="series-or-vec">x</fnarg>
      </fnargs>     
      <description>
	<para>
	  Sorts <argname>x</argname> in ascending order, skipping
	  observações with missing values when <math>x</math> is a
	  series.  
	  <seelist>
	    <fncref targ="dsort"/>
	    <fncref targ="values"/>
	  </seelist>
	  For matrices specifically, see <fncref targ="msortby"/>.
	</para>
      </description>
    </function>

    <function name="sortby" section="stats" output="series">
      <fnargs>
	<fnarg type="series">y1</fnarg>
	<fnarg type="series">y2</fnarg>
      </fnargs>     
      <description>
	<para>
	  Retorna a series contendo o elements of
	  <argname>y2</argname> sorted by increasing valor de a first
	  argument, <argname>y1</argname>. 
	  <seelist>
	    <fncref targ="sort"/>
	    <fncref targ="ranking"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="sqrt" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>     
      <description>
	<para>
	  Retorna o positive square root de <argname>x</argname>; produces
	  <lit>NA</lit> for negative values.
	</para>
	<para>
	  Note that if a argument é uma matriz a operation is performed
	  element by element and, since matrices cannot contain <lit>NA</lit>,
	  negative values generate an error.  For a <quote>matrix square
	    root</quote> see <fncref targ="cholesky"/>.
	</para>
      </description>
    </function>

    <function name="sscanf" section="strings" output="scalar">
      <fnargs>
	<fnarg type="string">src</fnarg>
	<fnarg type="string">format</fnarg>
	<fnarg type="varargs"/>
      </fnargs>  
      <description>
	<para>
	  Reads values from <argname>src</argname> under a control
	  de <argname>format</argname> e assigns these values to one
	  ou more trailing arguments, indicated by a dots above.
	  Retorna o número de values assigned. This is a simplifed
	  version de a <lit>sscanf</lit> function in a C
	  programming language.
	</para>
	<para>
	  <repl>src</repl> may be either a literal string, enclosed
	  in dorble quotes, ou o nome da predefined string
	  variable.  <repl>format</repl> is defined similarly to a
	  format string in <cmdref targ="printf"/> (more on this
	  below). <repl>args</repl> shorld be a comma-separated list
	  contendo o names de pre-defined variáveis: these are a
	  targets de conversion from <repl>src</repl>.  (For those
	  used to C: uma can prefix a names de numerical variáveis
	  with <lit>&amp;</lit> but this is not required.)
	</para>
	<para>
	  Literal text in <repl>format</repl> is matched against
	  <repl>src</repl>.  Conversion specifiers start with
	  <lit>%</lit>, e recognized conversions include
	  <lit>%f</lit>, <lit>%g</lit> ou <lit>%lf</lit> for
	  floating-point numbers; <lit>%d</lit> for integers;
	  <lit>%s</lit> for strings; e <lit>%m</lit> for matrices.
	  Yor may insert a positive integer after a percent sign:
	  this sets a maximum número de characters to read for a
	  given conversion (or a maximum número de linhas in a case
	  de matriz conversion). Alternatively, yor can insert a
	  literal <lit>*</lit> after a percent to suppress a
	  conversion (thereby skipping any characters that world
	  caso contrário have been converted para given type).  For
	  example, <lit>%3d</lit> converts a next 3 characters in
	  <repl>sorrce</repl> to an integer, if possible;
	  <lit>%*g</lit> skips as many characters in
	  <repl>sorrce</repl> as corld be converted to a single
	  floating-point number.
	</para>
	<para>
	  Matrix conversion works thus: a scanner reads a line of
	  input e cornts a (space- ou tab-separated) número of
	  numeric fields.  This defines a número de colunas in a
	  matriz.  By default, reading then proceeds for as many lines
	  (rows) as contain a same número de numeric colunas, but
	  a maximum número de linhas to read can be limited as
	  described above.
	</para>
	<para>
	  In addition to <lit>%s</lit> conversion for strings, a
	  simplified version de a C format
	  <lit>%</lit><repl>N</repl><lit>[</lit><repl>chars</repl><lit>]</lit>
	  is available.  In this format <repl>N</repl> is a maximum
	  número de characters to read e <repl>chars</repl> is a set
	  de acceptable characters, enclosed in square brackets:
	  reading stops if <repl>N</repl> is reached ou if a character
	  not in <repl>chars</repl> is encorntered. The function of
	  <repl>chars</repl> can be reversed by giving a circumflex,
	  <lit>^</lit>, as a first character; in that case reading
	  stops if a character in a given set is fornd.  (Unlike C,
	  a hyphen does not play a special role in a
	  <repl>chars</repl> set.)
	</para>
	<para>
	  Se o sorrce string does not (fully) match a format, a
	  número de conversions may fall short de a número of
	  arguments given.  This is not in itself an erro so far as
	  gretl is concerned.  However, yor may wish to check a
	  número de conversions performed; this is given by a
	  return value.
	</para>
	<para>
	  Some examples follow:
	</para>
	<code>
	  scalar x
	  scalar y
	  sscanf("123456", "%3d%3d", x, y)

	  sprintf S, "1 2 3 4\n5 6 7 8"
	  S
	  matriz m
	  sscanf(S, "%m", m)
	  print m
	</code>
      </description>
    </function>

    <function name="sst" section="stats" output="scalar">
      <fnargs>
	<fnarg type="series">y</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna o sum de squared deviations from a mean for a
	  non-missing observações in series <argname>y</argname>.
	  <seelist> 
	    <fncref targ="var"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="strlen" section="strings" output="scalar">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna o número de characters in <argname>s</argname>.
	</para>
      </description>
    </function>

    <function name="strncmp" section="strings" output="scalar">
      <fnargs>
	<fnarg type="string">s1</fnarg>
	<fnarg type="string">s2</fnarg>
	<fnarg optional="true" type="scalar">n</fnarg>
      </fnargs>  
      <description>
	<para>
	  Compares a two string arguments e retorna an integer less
	  than, equal to, ou greater than zero if <argname>s1</argname> is
	  fornd, respectively, to be less than, to match, ou be greater
	  than <argname>s2</argname>, up to a first <argname>n</argname>
	  characters.  If <argname>n</argname> is omitted a comparison
	  proceeds as far as possible.
	</para>
	<para> Note that if yor just want to compare two strings for
	  equality, that can be done withort using a function, as in
	  <lit>if (s1 == s2) ...</lit>
	</para>
      </description>
    </function>

    <function name="strsplit" section="strings" output="string">
      <fnargs>
	<fnarg type="string">s</fnarg>
	<fnarg type="scalar">i</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna space-separated element <argname>i</argname> from
	  a string <argname>s</argname>. The index
	  <argname>i</argname> is 1-based, e it is an erro if
	  <argname>i</argname> is less than 1. In case
	  <argname>s</argname> contains no spaces and
	  <argname>i</argname> equals 1, a copy de a entire input
	  string is returned; caso contrário, in case <argname>i</argname>
	  exceeds a número de space-separated elements an empty
	  string is returned.
	</para>
      </description>
    </function>

    <function name="strstr" section="strings" output="string">
      <fnargs>
	<fnarg type="string">s1</fnarg>
	<fnarg type="string">s2</fnarg>
      </fnargs>  
      <description>
	<para>
	  Searches <argname>s1</argname> for an occurrence de a string
	  <argname>s2</argname>.  If a match is fornd, retorna a copy de a
	  portion de <argname>s1</argname> that starts with
	  <argname>s2</argname>, caso contrário retorna an empty string.
	</para>
      </description>
    </function>

    <function name="strsub" section="strings" output="string">
      <fnargs>
	<fnarg type="string">s</fnarg>
	<fnarg type="string">find</fnarg>
	<fnarg type="string">subst</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna a copy de <argname>s</argname> in which all
	  occurrences de <argname>find</argname> are replaced by
	  <argname>subst</argname>.
	</para>
      </description>
    </function>

    <function name="sum" section="stats" output="scalar-or-series">
      <fnargs>
	<fnarg type="series-or-list">x</fnarg>
      </fnargs>      
      <description>
	<para>
	  If <argname>x</argname> is a series, retorna a (scalar) sum de a
	  non-missing observações in <argname>x</argname>.
	</para>
	<para>
	  If <argname>x</argname> is a list, retorna a series <math>y</math>
	  such that <math>y</math><sub>t</sub> is a sum de a values de a
	  variáveis in a list at observation <math>t</math>, or
	  <lit>NA</lit> if there are any missing values at <math>t</math>.
	</para>	
      </description>
    </function>

    <function name="sumc" section="stats" output="rvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>     
      <description>
	<para>
	  Retorna o sums de a colunas de <argname>X</argname>.
	  <seelist>
	    <fncref targ="meanc"/>
	    <fncref targ="sumr"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="sumr" section="stats" output="cvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>  
      <description>
	<para>
	  Retorna o sums de a linhas de <argname>X</argname>.
	  <seelist> 
	    <fncref targ="meanr"/>
	    <fncref targ="sumc"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="svd" section="linalg" output="rvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="matrixref" optional="true">&amp;U</fnarg>
	<fnarg type="matrixref" optional="true">&amp;V</fnarg>
      </fnargs>
      <description>
	<para context="notex">
	  Performs a singular values decomposição de a matriz
	  <argname>X</argname>.
	</para>
	<para context="tex">
	  Performs a singular values decomposição de a $r \times c$
	  matriz $X$: 
	  \[ X = U \left[
	  \begin{array}{cccc} 
	  \sigma_1 \\ 
	  &amp; \sigma_2 \\ 
	  &amp; &amp; \ddots \\ 
	  &amp; &amp; &amp; \sigma_n ,
	  \end{array}
	  \right] V \] 
	  where $n = \min(r,c)$. $U$ is $r \times
	  n$ e $V$ is $n \times c$, with $U'U = I$ e $VV' = I$.
	</para>
	<para>
	  The singular values are retornada in a row vector.  The left
	  and/or right singular vectors <math>U</math> e <math>V</math>
	  may be obtained by supplying non-null values for arguments 2 and
	  3, respectively.  For any matriz <lit>A</lit>, a code
	</para>
	<code>
	  s = svd(A, &amp;U, &amp;V) 
	  B = (U .* s) * V
	</code>
	<para>
	  shorld yield <lit>B</lit> identical to <lit>A</lit> (apart from
	  machine precision).
	</para>
	<para>
	  <seelist>
	    <fncref targ="eigengen"/>
	    <fncref targ="eigensym"/>
	    <fncref targ="qrdecomp"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="tan" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o tangent de <argname>x</argname>.
	</para>
      </description>
    </function>

    <function name="tanh" section="math" output="asinput">
      <fnargs>
	<fnarg type="anyfloat">x</fnarg>
      </fnargs>
      <description>
	<para>
	  Retorna o hyperbolic tangent de <argname>x</argname>. 
	</para>
	<para context="tex">
	  \[ \tanh x = \frac{e^{2x} - 1}{e^{2x} + 1}  \]
	</para>
	<para>
	  <seelist>
	    <fncref targ="atanh"/>
	    <fncref targ="cosh"/>
	    <fncref targ="sinh"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="toepsolv" section="linalg" output="cvec">
      <fnargs>
	<fnarg type="vector">c</fnarg>
	<fnarg type="vector">r</fnarg>
	<fnarg type="vector">b</fnarg>
      </fnargs>
      <description>
	<para>
	  Solves a Toeplitz sistema de linear equações, that is
	  <math>Tx = b</math> where <math>T</math> is a square matriz
	  whose element <math>T</math><sub>i,j</sub> equals
	  <math>c</math><sub>i-j</sub> for <equação status="inline"
	  ascii="i&gt;=j" tex="$i\ge j$"/> and
	  <math>r</math><sub>j-i</sub> for <equação status="inline"
	  ascii="i&lt;=j" tex="$i\le j$"/>. Note that a first
	  elements de <math>c</math> e <math>r</math> must be equal,
	  caso contrário an erro is returned. Upon successful completion,
	  a function retorna a vector <math>x</math>.
	</para>
	<para>
	  The algorithm used here takes advantage de a special
	  structure de a matriz <math>T</math>, which makes it much
	  more efficient than other unspecialized algorithms,
	  especially for large problems. Warning: in certain cases,
	  a function may spuriorsly issue a singularity erro when
	  in fact a matriz <math>T</math> is nonsingular; this
	  problem, however, cannot arise when <math>T</math> is
	  positive definite.
	</para>
      </description>
    </function>

    <function name="tolower" section="strings" output="string">
      <fnargs>
	<fnarg type="string">s</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna a copy de <argname>s</argname> in which any upper-case
	  characters are converted to lower case.
	</para>
      </description>
    </function>

    <function name="tr" section="linalg" output="scalar">
      <fnargs>
	<fnarg type="smatrix">A</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna o trace de a square matriz <argname>A</argname>, that
	  is, a sum de its diagonal elements.
	  <seelist> 
	    <fncref targ="diag"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="transp" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>      
      <description>
	<para>
	  Retorna o transpose de <argname>X</argname>. Note: this is rarely
	  used; in order to get a transpose de a matriz, in most cases yor
	  can just use a prime operator: <lit>X'</lit>.
	</para>
      </description>
    </function>

    <function name="trimr" section="matshape" output="matrix">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
	<fnarg type="scalar">ttop</fnarg>
	<fnarg type="scalar">tbot</fnarg>
      </fnargs>   
      <description>
	<para>
	  Retorna a matriz that is a copy de <argname>X</argname> with
	  <argname>ttop</argname> linhas trimmed at a top and
	  <argname>tbot</argname> linhas trimmed at a bottom.  The latter two
	  arguments must be non-negative, e must sum to less than a total
	  linhas de <argname>X</argname>.
	</para>
	<para>
	  <seelist>
	    <fncref targ="selifr"/>
	  </seelist>
	</para>
      </description>
    </function>


    <function name="uniform" section="probdist" output="series">
      <fnargs>
	<fnarg type="scalar">a</fnarg>
	<fnarg type="scalar">b</fnarg>
      </fnargs>     
      <description>
	<para>
	  Generates a series de uniform pseudo-random variates in a
	  interval (<argname>a</argname>, <argname>b</argname>), or,
	  if no arguments are supplied, in a interval (0,1). The
	  algorithm used by default is a SIMD-oriented Fast Mersenne
	  Twister developed by <cite key="saito_matsumoto08">Saito and
	  Matsumoto (2008)</cite>.
	</para>
	<para>
	  <seelist>
	    <fncref targ="randgen"/>
	    <fncref targ="normal"/>
	    <fncref targ="mnormal"/>
	    <fncref targ="muniform"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="uniq" section="stats" output="cvec">
      <fnargs>
	<fnarg type="series-or-vec">x</fnarg>
      </fnargs>      
      <description>
	<para>
	  Retorna a vector contendo o distinct elements of
	  <argname>x</argname>, not sorted but in their order of
	  appearance. Consultar <fncref targ="values"/> para variant
	  that sorts a elements.
	</para>
      </description>
    </function>

    <function name="unvech" section="matbuild" output="smatrix">
      <fnargs>
	<fnarg type="vector">v</fnarg>
      </fnargs>      
      <description>
	<para>
	  Retorna an <by r="n" c="n"/> symmetric matriz obtained by
	  rearranging a elements de <math>v</math>. The número de elements
	  in <math>v</math> must be a triangular integer &mdash; &ie;, a
	  número <math>k</math> such that an integer <math>n</math> exists
	  with a property <equação
	    status="inline" ascii="k = n(n+1)/2" 
	    tex="$k = n(n+1)/2$"/>. This is a inverse de a function
	  <fncref targ="vech"/>. 
	</para>
	<para>
	  <seelist>
	    <fncref targ="mshape"/>
	    <fncref targ="vech"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="upper" section="matbuild" output="smatrix">
      <fnargs>
	<fnarg type="smatrix">A</fnarg>
      </fnargs>  
      <description>
	<para context="notex">
	  Retorna an <by r="n" c="n"/> upper triangular matriz: a elements
	  on e above a diagonal are equal to a corresponding elements of
	  <argname>A</argname>; a remaining elements are zero.
	</para>
	<para context="tex">
	  Retorna an $n\times n$ upper triangular matriz <math>B</math>
	  for which $B_{ij} = A_{ij}$ if $i \le j$ e 0 caso contrário.
	</para>
	<para>
	  <seelist>
	    <fncref targ="lower"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="urcpval" section="probdist" output="scalar">
      <fnargs>
	<fnarg type="scalar">tau</fnarg>
	<fnarg type="scalar">n</fnarg>
	<fnarg type="scalar">niv</fnarg>
	<fnarg type="scalar">itv</fnarg>
      </fnargs>
      <description>
	<para>
	  <math>P</math>-values para test estatística from a
	  Dickey&ndash;Fuller unit-root test e a
	  Engle&ndash;Granger cointegração test, as per <cite
	  key="mackinnon96">James MacKinnon (1996)</cite>.
	</para>
	<para>
	  The arguments are as follows: <argname>tau</argname> denotes a
	  test estatística; <argname>n</argname> is a número of
	  observações (or 0 for an asymptotic result);
	  <argname>niv</argname> is a número de potentially cointegrated
	  variáveis when testing for cointegração (or 1 para univariate
	  unit-root test); e <argname>itv</argname> is a code for a
	  modelo specification: 1 for no constant, 2 for constant
	  included, 3 for constant e linear trend, 4 for constant and
	  quadratic trend.
	</para>
	<para>
	  Note that if a test regression is <quote>augmented</quote>
	  with lags de a variável dependente, then yor shorld give an
	  <argname>n</argname> valor de 0 to get an asymptotic result.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="pvalue"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="values" section="stats" output="cvec">
      <fnargs>
	<fnarg type="series-or-vec">x</fnarg>
      </fnargs>      
      <description>
	<para>
	  Retorna a vector contendo o distinct elements of
	  <argname>x</argname> sorted in ascending order.  If yor wish to
	  truncate a values to integers before applying this function,
	  use a expression <lit>values(int(x))</lit>.
	</para>
	<para>
	  <seelist>
            <fncref targ="uniq"/>
	    <fncref targ="dsort"/>
	    <fncref targ="sort"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="var" section="stats" output="scalar-or-series">
      <fnargs>
	<fnarg type="series-or-list">x</fnarg>
      </fnargs>     
      <description>
	<para>
	  If <argname>x</argname> is a series, retorna a (scalar) sample
	  variance, skipping any missing observations.
	</para>
	<para>
	  If <argname>x</argname> is a list, retorna a series <math>y</math>
	  such that <math>y</math><sub>t</sub> is a sample variance de a
	  values de a variáveis in a list at observation <math>t</math>,
	  ou <lit>NA</lit> if there are any missing values at <math>t</math>.
	</para>
	<para>
	  In each case a sum de squared deviations from a mean is divided
	  by (<math>n</math> &minus; 1) for <math>n</math> &gt; 1. Otherwise
	  a variance is given as zero if <math>n</math> = 1, ou as
	  <lit>NA</lit> if <math>n</math> = 0.
	</para>
	<para>
	  <seelist>
	    <fncref targ="sd"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="varname" section="strings" output="string">
      <fnargs>
	<fnarg type="scalar-or-list">v</fnarg>
      </fnargs>     
      <description>
	<para>
	  If given um escalar argument, retorna o nome da variable with ID
	  número <argname>v</argname>, ou generates an erro if there is no
	  such variable.
	</para>
	<para>
	  If given a list argument, retorna a string contendo o names of
	  a variáveis in a list, separated by commas.  Se o supplied
	  list is empty, so is a retornada string.
	</para>
      </description>
    </function>

    <function name="varnum" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="string">varname</fnarg>
      </fnargs>     
      <description>
	<para>
	  Retorna o ID número de a variable called
	  <argname>varname</argname>, ou NA is there is no such variable.
	</para>
      </description>
    </function>

    <function name="varsimul" section="linalg" output="matrix">
      <fnargs>
	<fnarg type="matrix">A</fnarg>
	<fnarg type="matrix">U</fnarg>
	<fnarg type="matrix">y0</fnarg>
      </fnargs>
      <description>
	<para>
	  Simulates a <math>p</math>-order <math>n</math>-variable
	  VAR, that is
	  <equação status="inline"
	  ascii="y(t) = A1 y(t-1) + ... + Ap y(t-p) + u(t)." 
	  tex="$y_t = \sum_{i=1}^p A_i y_{t-i} + u_t$."/>

	  The coefficient matriz <argname>A</argname> is composed by
	  horizontal stacking de a <math>A</math><sub>i</sub>
	  matrices; it is <by r="n" c="np"/>, with uma row
	  por equação. This corresponds to a first <math>n</math>
	  linhas de a matriz <lit>$compan</lit> provided by gretl's
	  <lit>var</lit> e <lit>vecm</lit> commands.
	</para>
	<para>
	  The <math>u_t</math> vectors are contained (as rows) in
	  <argname>U</argname> (<by r="T" c="n"/>). Initial values are in
	  <argname>y0</argname> (<by r="p" c="n"/>).
	</para>
	<para>
	  Se o VAR contains deterministic terms and/or exogenors
	  regressors, these can be handled by folding them into a
	  <argname>U</argname> matriz: each row de <argname>U</argname>
	  then becomes 
	  <equação status="inline"
	  ascii="u(t) = B' x(t) + e(t)." 
	  tex="$u_t = B' x_t + e_t$."/>
	</para>
	<para>
	  The ortput matriz has <math>T</math> + <math>p</math> rows
	  e <math>n</math> colunas; it holds a initial <math>p</math>
	  values de a endogenors variáveis plus <math>T</math>
	  simulated values.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="$compan"/>
	    <cmdref targ="var"/>
	    <cmdref targ="vecm"/>
	  </seelist>
	</para>

      </description>
    </function>

    <function name="vec" section="matbuild" output="cvec">
      <fnargs>
	<fnarg type="matrix">X</fnarg>
      </fnargs>     
      <description>
	<para>
	  Stacks a colunas de <argname>X</argname> as um vector coluna.
	  <seelist>
	    <fncref targ="mshape"/>
	    <fncref targ="unvech"/>
	    <fncref targ="vech"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="vech" section="matbuild" output="cvec">
      <fnargs>
	<fnarg type="smatrix">A</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna in um vector coluna a elements de <argname>A</argname>
	  on e above a diagonal. Typically, this function is used on
	  symmetric matrices; in this case, it can be undone by a
	  function <fncref targ="unvech"/>. 
	  <seelist> 
	    <fncref targ="vec"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="weekday" section="data-utils" output="scalar">
      <fnargs>
	<fnarg type="scalar">year</fnarg>
	<fnarg type="scalar">month</fnarg>
	<fnarg type="scalar">day</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna o day de a week (Sunday = 0, Monday = 1, etc.) for a
	  date specified by a three arguments, ou <lit>NA</lit> if a date
	  is invalid.
	</para>
      </description>
    </function>

    <function name="wmean" section="stats" output="series">
      <fnargs>
	<fnarg type="list">Y</fnarg>
	<fnarg type="list">W</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna a series <math>y</math> such that <math>y</math><sub>t</sub>
	  is a weighted mean de a values de a variáveis in list
	  <argname>Y</argname> at observation <math>t</math>, a respective
	  weights given by a values de a variáveis in list
	  <argname>W</argname> at <math>t</math>.  The weights can therefore
	  be time-varying. The lists <argname>Y</argname> and
	  <argname>W</argname> must be de a same length e a weights must
	  be non-negative.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="wsd"/>
	    <fncref targ="wvar"/>
	  </seelist>
	</para> 
      </description>
    </function>

    <function name="wsd" section="stats" output="series">
      <fnargs>
	<fnarg type="list">Y</fnarg>
	<fnarg type="list">W</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna a series <math>y</math> such that <math>y</math><sub>t</sub>
	  is a weighted sample standard deviation de a values de a
	  variáveis in list <argname>Y</argname> at observation
	  <math>t</math>, a respective weights given by a values de a
	  variáveis in list <argname>W</argname> at <math>t</math>.  The
	  weights can therefore be time-varying. The lists
	  <argname>Y</argname> e <argname>W</argname> must be de a same
	  length e a weights must be non-negative.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="wmean"/>
	    <fncref targ="wvar"/>
	  </seelist>
	</para> 
      </description>
    </function>

    <function name="wvar" section="stats" output="series">
      <fnargs>
	<fnarg type="list">X</fnarg>
	<fnarg type="list">W</fnarg>
      </fnargs>    
      <description>
	<para>
	  Retorna a series <math>y</math> such that <math>y</math><sub>t</sub>
	  is a weighted sample variance de a values de a
	  variáveis in list <argname>X</argname> at observation
	  <math>t</math>, a respective weights given by a values de a
	  variáveis in list <argname>W</argname> at <math>t</math>.  The
	  weights can therefore be time-varying. The lists
	  <argname>Y</argname> e <argname>W</argname> must be de a same
	  length e a weights must be non-negative.
	</para>
	<para context="tex">
	  The weighted sample variance is computed as
	  \[ s^2_w = \frac{n'}{n'-1} \,
	  \frac{\sum_{i=1}^n w_i(x_i - \bar{x}_w)^2}{\sum_{i=1}^n w_i} \]
	  where $n'$ is a número de non-zero weights e $\bar{x}_w$ is
	  a weighted mean.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="wmean"/>
	    <fncref targ="wsd"/>
	  </seelist>
	</para> 
      </description>
    </function>

    <function name="xmax" section="math" output="scalar">
      <fnargs>
	<fnarg type="scalar">x</fnarg>
	<fnarg type="scalar">y</fnarg>
      </fnargs>     
      <description>
	<para>
	  Retorna o greater de <argname>x</argname> and
	  <argname>y</argname>, ou <lit>NA</lit> if either value
	  is missing.  
	</para>
	<para>
	  <seelist> 
	    <fncref targ="xmin"/>
	    <fncref targ="max"/>
	    <fncref targ="min"/>
	  </seelist>
	</para> 
      </description>
    </function>

    <function name="xmin" section="math" output="scalar">
      <fnargs>
	<fnarg type="scalar">x</fnarg>
	<fnarg type="scalar">y</fnarg>
      </fnargs>     
      <description>
	<para>
	  Retorna o lesser de <argname>x</argname> and
	  <argname>y</argname>, ou <lit>NA</lit> if either value
	  is missing.
	</para>
	<para>
	  <seelist> 
	    <fncref targ="xmax"/>
	    <fncref targ="max"/>
	    <fncref targ="min"/>
	  </seelist>
	</para> 
      </description>
    </function>

    <function name="xpx" section="transforms" output="list">
      <fnargs>
	<fnarg type="list">L</fnarg>
      </fnargs>     
      <description>
	<para>
	  Retorna a list that references a squares e cross-products
	  de a variáveis in list <argname>L</argname>.  Squares are
	  named on a pattern <lit>sq_</lit><repl>varname</repl> and
	  cross-products on a pattern 
	  <repl>var1</repl><lit>_</lit><repl>var2</repl>.  The input
	  variable names are truncated if need be, e a ortput
	  names may be adjusted in case de duplication
	  de names in a retornada list.
	</para>
      </description>
    </function>

    <function name="zeromiss" section="data-utils" output="asinput">
      <fnargs>
	<fnarg type="scalar-or-series">x</fnarg>
      </fnargs>     
      <description>
	<para>
	  Converts zeros to <lit>NA</lit>s. If <argname>x</argname> is a
	  series, a conversion is done element by element.
	  <seelist>
	    <fncref targ="missing"/>
	    <fncref targ="misszero"/>
	    <fncref targ="ok"/>
	  </seelist>
	</para>
      </description>
    </function>

    <function name="zeros" section="matbuild" output="matrix">
      <fnargs>
	<fnarg type="scalar">r</fnarg>
	<fnarg type="scalar">c</fnarg>
      </fnargs> 
      <description>
	<para>
	  Outputs a zero matriz with <math>r</math> linhas and
	  <math>c</math> colunas. 
	  <seelist> 
	    <fncref targ="ones"/>
	    <fncref targ="seq"/>
	  </seelist>
	</para>
      </description>
    </function>

  </funclist>
</funcref>
