topsrc = @top_srcdir@
prefix = @prefix@
datarootdir = @datarootdir@

DOC_MODULE = libgretl
SRC_DIR = $(topsrc)/lib/src
DOC_SRC_DIR = $(topsrc)/doc/reference

# Header files to ignore when scanning.
IGNORE_SRCS = \
        gretl_f2c.h \
	bhhh_max.c \
	bhhh_max.h \
	clapack_double.h \
	cmd_private.h \
	csvdata.c \
	csvdata.h \
        estim_private.h \
	flow_control.c \
	flow_control.h \
	gretl_bundle.c \
	gretl_bundle.h \
	gretl_intl.c \
	gretl_intl.h \
	gretl_func.c \
	gretl_func.h \
	gretl_win32.c \
	gretl_win32.h \
	gretl_www.c \
	gretl_www.h \
	interact.c \
	interact.h \
	libglue.c \
	libglue.h \
	missing_private.h \
	monte_carlo.c \
	monte_carlo.h \
	objstack.c \
	objstack.h \
	options.c \
	options.h \
	printscan.c \
	printscan.h \
	tsls.c \
	tsls.h \
	usermat.c \
	usermat.h \
	version.h

# extra options to supply to gtkdoc-scan
SCAN_OPTIONS = --ignore-headers="$(IGNORE_SRCS)"

# extra options to supply to gtkdoc-mkdb
MKDB_OPTIONS = --output-format xml --xml-mode --ignore-files="$(IGNORE_SRCS)"

# Used for dependencies. The docs will be rebuilt if any of these change.
HFILE_GLOB=$(DOC_SOURCE_DIR)/*.h
CFILE_GLOB=$(DOC_SOURCE_DIR)/*.c

GTKDOC_CC = $(LIBTOOL) --mode=compile $(CC)
GTKDOC_LD = $(LIBTOOL) --mode=link $(CC)

all: links.stamp
	gtkdoc-scan --module $(DOC_MODULE) $(SCAN_OPTIONS) --source-dir $(SRC_DIR)
	gtkdoc-mkdb --module $(DOC_MODULE) $(MKDB_OPTIONS) --source-dir $(SRC_DIR)
	mkdir -p html
	cd html && gtkdoc-mkhtml $(DOC_MODULE) ../$(DOC_MODULE)-docs.xml
	gtkdoc-fixxref --module $(DOC_MODULE) --module-dir html

links.stamp: Makefile
	for f in $(DOC_SRC_DIR)/*.xml ; do \
	if [ ! -f `basename $$f` ] ; then ln -sf $$f . ; fi ; done
	touch $@

clean:
	rm -f html/*.html xml/*.xml
