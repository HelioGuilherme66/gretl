<?PSGML NOFILL programlisting example informalequation?>

  <chapter id="sampling"><title>Sub-sampling a dataset</title>

  <sect1 id="sample-intro"><title>Introduction</title>

    <para>Some subtle issues can arise here.  This chapter attempts to
      explain the issues.</para>

    <para>A sub-sample may be defined in relation to a full data set
      in two different ways: we will refer to these as
      <quote>setting</quote> the sample and <quote>restricting</quote>
      the sample respectively.</para>

  </sect1>

  <sect1 id="sample-set"><title>Setting the sample</title>

    <para>By <quote>setting</quote> the sample we mean defining a
      sub-sample simply by means of adjusting the starting and/or
      ending point of the current sample range.  This is likely to be
      most relevant for time-series data.  For example, one has
      quarterly data from 1960:1 to 2003:4, and one wants to run a
      regression using only data from the 1970s.  A suitable command
      is then

      <programlisting>
	smpl 1970:1 1979:4</programlisting> Or one wishes to set aside
      a block of observations at the end of the data period for
      out-of-sample forecasting.  In that case one might do

      <programlisting>
	smpl ; 2000:4</programlisting> where the semicolon is
      shorthand for <quote>leave the starting observation
	unchanged</quote>.  (The semicolon may also be used in place
      of the second parameter, to mean that the ending observation
      should be unchanged.) By <quote>unchanged</quote> here, we mean
      unchanged relative to the last <literal>smpl</literal> setting,
      or relative to the full dataset if no sub-sample has been
      defined up to this point. For example, after

      <programlisting>
	smpl 1970:1 2003:4
	smpl ; 2000:4</programlisting> the sample range will be 1970:1
      to 2000:4.</para>  

    <para>An incremental or relative form of setting the sample range
      is also supported.  In this case a relative offset should be
      given, in the form of a signed integer (or a semicolon to
      indicate no change), for both the starting and ending point. For
      example

      <programlisting>
	smpl +1 ;</programlisting> will advance the starting
      observation by one while preserving the ending observation, and

      <programlisting>
	smpl +2 -1</programlisting> will both advance the starting
      observation by two and retard the ending observation by
      one.</para>

    <para>An important feature of <quote>setting</quote> the sample as
      described above is that it necessarily results in the selection
      of a subset of observations that are contiguous in the full
      dataset. The structure of the dataset is therefore unaffected
      (for example, if it is a quarterly time series before setting
      the sample, it remains a quarterly time series
      afterwards).</para> 

  </sect1>

  <sect1 id="sample-restrict"><title>Restricting the sample</title>

    <para>By <quote>restricting</quote> the sample we mean selecting
      observations on the basis of some Boolean (logical) criterion,
      or by means of a random number generator.  This is likely to be
      most relevant for cross-sectional or panel data.</para>  

    <para>Suppose we have data on a cross-section of individuals,
      recording their gender, income and other characteristics.  We
      wish to select for analysis only the women.  If we have a
      <varname>gender</varname> dummy variable with value 1 for men
      and 0 for women we could do

      <programlisting>
	smpl gender=0 --restrict</programlisting> to this effect.  Or
      suppose we want to restrict the sample to respondents with
      incomes over &dollar;50,000.  Then we could use</para>

      <programlisting>
	smpl income>50000 --restrict</programlisting>

    <para>A question arises here.  If we issue the two commands above
      in sequence, what do we end up with in our sub-sample: all cases
      with income over 50000, or just women with income over 50000? By
      default, in a gretl script, the answer is the latter: women with
      income over 50000.  The second restriction augments the first,
      or in other words the final restriction is the logical product
      of the new restriction and any restriction that is already in
      place.</para>

    <para>
      If you want a new restriction to replace any existing
      restrictions you can first recreate the full dataset
      using</para>

    <programlisting>
      smpl full</programlisting>

    <para>Alternatively, you can add the <literal>replace</literal>
    option to the <literal>smpl</literal> command:</para>

    <programlisting>
      smpl income>50000 --restrict --replace</programlisting>

    <para>This option has the effect of automatically re-establishing
      the full dataset before applying the new restriction.</para>

    <para>Unlike a simple <quote>setting</quote> of the sample,
      <quote>restricting</quote> the sample may result in selection of
      non-contiguous observations from the full data set.  It may also
      change the structure of the data set.</para> 

    <para>This can be seen in the case of panel data.  Say we have a
      panel of five firms (indexed by the variable
      <varname>firm</varname>) observed in each of several years
      (identified by the variable <varname>year</varname>).  Then the
      restriction

      <programlisting>
	smpl year=1995 --restrict</programlisting> produces a dataset
      that is not a panel, but a cross-section for the year 1995.
      Similarly

      <programlisting>
	smpl firm=3 --restrict</programlisting> produces a time-series
      dataset for firm number 3.</para> 

    <para>For these reasons (possible non-contiguity in the
      observations, possible change in the structure of the data),
      gretl acts differently when you <quote>restrict</quote> the
      sample as opposed to simply <quote>setting</quote> it. In the
      case of setting, the program merely records the starting and
      ending observations and uses these as parameters to the various
      commands calling for the estimation of models, the computation
      of statistics, and so on. In the case of restriction, the
      program makes a reduced copy of the dataset and by default
      treats this reduced copy as a simple, undated
      cross-section.<footnote><para>With one exception: if you start
	  with a balanced panel dataset and the restriction is such
	  that it preserves a balanced panel &mdash; for example, it
	  results in the deletion of all the observations for one
	  cross-sectional unit &mdash; then the reduced dataset is
	  still, by default, treated as a panel.</para>
      </footnote> If you wish to re-impose a time-series or panel
      interpretation of the reduced dataset you can do so using the
      <command>setobs</command> command, or the GUI menu item
      <quote>Sample, Dataset structure</quote>.</para> 

    <para>The fact that <quote>restricting</quote> the sample results
      in the creation of a reduced copy of the original dataset may
      raise an issue when the dataset is very large (say, several
      thousands of observations).  With such a dataset in memory, the
      creation of a copy may lead to a situation where the computer
      runs low on memory for calculating regression results.  You can
      work around this as follows:</para>

    <orderedlist>
      <listitem>
	<para>
	  Open the full data set, and impose the sample restriction.
	</para>
      </listitem>
      <listitem><para>
	  Save a copy of the reduced data set to disk.
	</para>
      </listitem>
      <listitem><para>
	  Close the full dataset and open the reduced one.
	</para>
      </listitem>
      <listitem><para>
	  Proceed with your analysis.
	</para>
      </listitem>
    </orderedlist>

  </sect1>

  <sect1 id="sample-random"><title>Random sampling</title>

    <para>With very large datasets (or perhaps to study the properties
      of an estimator) you may wish to draw a random sample from the
      full dataset. This can be done using, for example,

      <programlisting>
	smpl 100 --random</programlisting> to select 100 cases.  If
      you want the sample to be reproducible, you should set the seed
      for the random number generator first, using 
      <command>set</command>.</para>

    <para>This sort of sampling falls under the
      <quote>restriction</quote> category: a reduced copy of the
      dataset is made.</para>

  </sect1>

  <sect1 id="sample-menu"><title>The Sample menu items</title>

    <para>The discussion above has focused on the script command 
      <command>smpl</command>. You can also use the items under the
      <guimenuitem>Sample</guimenuitem> menu in the GUI program to
      select a sub-sample.</para>

    <para>The menu items mostly work in the same way as the
      corresponding <literal>smpl</literal> variant, except that when
      you use the item <quote>Sample, Restrict based on
	criterion</quote>, and the dataset is already sub-sampled, you
      are given the option of preserving or replacing the current
      restriction.  Replacing the current restriction means, in
      effect, invoking the <literal>replace</literal> option described
      above (<xref linkend="sample-restrict"/>).
    </para>

  </sect1>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
sgml-default-dtd-file:"../manual.ced"
mode: xml
sgml-parent-document:("../manual.xml" "book" "chapter")
End:
-->









