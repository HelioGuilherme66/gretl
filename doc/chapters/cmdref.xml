<?PSGML NOFILL programlisting example informalequation?>

  <chapter id="cmdref"><title>Command Reference</title>

  <sect1 id="cmd-intro"><title>Introduction</title>
    <para>
      The commands defined below may be executed in the command-line
      client program.  They may also be placed in a
      <quote>script</quote> file for execution in the GUI, or entered
      using the latter's <quote>console mode</quote>.  In most cases
      the syntax given below also applies when you are presented with
      a line to type in a dialog box in the GUI (but see also
      <application>gretl</application>'s online help), except that you
      should <emphasis>not</emphasis> type the initial command word
      &mdash; it is implicit from the context. One other difference is
      that you cannot enter the <command>-o</command> flag for
      regression commands in GUI dialog boxes: there is a menu item
      for displaying the coefficient variance&ndash;covariance matrix
      (which is the effect of <command>-o</command> in regression
      commands).
    </para>

    <para>
      The following conventions are used below:
    </para>

    <itemizedlist>

      <listitem><para>
	  A <literal>typewriter font</literal> is used for material
	  that you would type directly, and also for internal names of
	  variables.
	</para></listitem>

      <listitem><para>Terms in <replaceable>italics</replaceable> are
	  place-holders: you should substitute something specific,
	  e.g. you might type <varname>income</varname> in place of
	  the generic <replaceable>xvar</replaceable>.
	</para></listitem>

      <listitem><para><literal>[ -o ]</literal> means that the flag
	  <command>-o</command> is optional: you may type it or not
	  (but in any case don't type the brackets).
	</para></listitem>

      <listitem><para>The phrase <quote>estimation command</quote>
	  means any one of <command>ols</command>,
	  <command>hilu</command>, <command>corc</command>,
	  <command>ar</command>, <command>arch</command>,
	  <command>hsk</command>, <command>tsls</command>,
	  <command>wls</command>, <command>hccm</command>,
	  <command>add</command>, <command>omit</command>.
	</para></listitem>

    </itemizedlist>

    <para>
      Section and Chapter references below are to Ramanathan (2002).
    </para>

  </sect1>

  <sect1 id="cmd-cmd">
    <title>gretl commands</title>

    <sect2 id="add"><title>add</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable> &opto;
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>add 5 7 9</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>add xx yy zz -o</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Must be invoked after an estimation command.  The variables in
	<replaceable>varlist</replaceable> are added to the previous
	model and the new model estimated.  If more than one variable
	is added, the <emphasis>F</emphasis> statistic for the added
	variables will be printed (for the OLS procedure only) along
	with its p-value.  A p-value below 0.05 means that the
	coefficients are jointly significant at the 5 percent level. A
	number of internal variables may be retrieved using the
	<command>genr</command> command, provided
	<command>genr</command> is invoked directly after this
	command. The <literal>-o</literal> flag causes the coefficient
	variance&ndash;covariance matrix to be printed.
      </para>

    </sect2>

    <sect2 id="addto"><title>addto</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>modelID varlist</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Example:</entry>
	      <entry><command>addto 2 5 7 9</command>
	      </entry> 
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Works like the <command>add</command> command, except that you
	specify a previous model (using its ID number, which is
	printed at the start of the model output) to take as the base
	for adding variables.  The example above adds variables number
	5, 7 and 9 to Model 2.
      </para>
      
      <para role="bodge">&nbsp;</para>

    </sect2>

    <sect2 id="adf"><title>adf</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>order varname</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Example:</entry>
	      <entry><command>adf 2 x1</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	  Computes statistics for two Dickey&ndash;Fuller tests.  In
	each case the null hypothesis is that the variable in question
	exhibits a unit root. The first is a
	<emphasis>t</emphasis>-test based on the model 
	  <informalequation>
	  <alt role="tex">\[(1-L)x_t=m+gx_{t-1}+\epsilon_t\]</alt>
	  <graphic fileref="figures/adf1"/>
	  </informalequation> The null hypothesis is that
	<emphasis>g</emphasis> = 0. The second (augmented) test
	proceeds by estimating an unrestricted regression (with
	regressors a constant, a time trend, the first lag of the
	variable, and <replaceable>order</replaceable> lags of the
	first difference) and a restricted version (dropping the time
	trend and the first lag).  The test statistic is
	  <informalequation>
	  <alt
	    role="tex">\[F_{2,T-k}=\frac{(ESS_r-ESS_u)/2}{ESS_u/(T-k)}\]</alt>
	  <graphic fileref="figures/adf2"/>
	  </informalequation> where <emphasis>T</emphasis> is the
	sample size, <emphasis>k</emphasis> the number of parameters
	in the unrestricted model, and the subscripts
	<emphasis>u</emphasis> and <emphasis>r</emphasis> denote the
	unrestricted and restricted models respectively. Note that the
	critical values for these statistics are not the usual ones; a
	p-value range is printed, when it can be determined.
      </para>
    </sect2>	

    <sect2 id="ar"><title>ar</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>lags</replaceable>
		<literal>;</literal> <replaceable>depvar
		  indepvars</replaceable> &opto; 
	      </entry>
	    </row>
	    <row>
	      <entry>Example:</entry>
	      <entry><command>ar 1 3 4 ; y 0 x1 x2 x3</command>
	      </entry> 
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Computes parameter estimates using the generalized
	Cochrane&ndash;Orcutt iterative procedure (see Section 9.5 of
	Ramanathan). Iteration is terminated when successive error
	sums of squares do not differ by more than 0.005 percent or
	after 20 iterations. <replaceable>lags</replaceable> is a list
	of lags in the residuals, terminated by a semicolon. In the
	above example, the error term is specified as 
	<informalequation>
	  <alt role="tex">\[u_t = \rho_1u_{t-1} + \rho_3 u_{t-3} +
	    \rho_4 u_{t-4} + e_t\]</alt>
	  <graphic fileref="figures/corc"/>
	</informalequation> <replaceable>depvar</replaceable> is the
	dependent variable and <replaceable>indepvars</replaceable> is
	the list of independent variables.  If the
	<literal>-o</literal> flag is given, the covariance matrix of
	regression coefficients is printed. Residuals of the
	transformed regression are stored under the name
	<varname>uhat</varname>, which can be retrieved by
	<command>genr</command>.  A number of other internal variables
	may be retrieved using the <command>genr</command> command,
	provided <command>genr</command> is invoked after this
	command.
      </para>

    </sect2>

    <sect2 id="arch"><title>arch</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>order depvar indepvars</replaceable>
		&opto;
	      </entry>
	    </row>
	    <row>
	      <entry>Example:</entry>
	      <entry><command>arch 4 y 0 x1 x2 x3</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Tests the model for ARCH (Autoregressive Conditional
	Heteroskedasticity) of the lag order specified in
	<replaceable>order</replaceable>, which must be an integer. If
	the LM test statistic has p-value below 0.10, then ARCH
	estimation is also carried out.  If the predicted variance of
	any observation in the auxiliary regression is not positive,
	then the corresponding squared residual is used instead.
	Weighted least square estimation is then performed on the
	original model. The flag <literal>-o</literal> calls for the
	coefficient covariance matrix.
      </para>

    </sect2>

    <sect2 id="arma"><title>arma</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>p q</replaceable>
		<literal>;</literal> <replaceable>depvar</replaceable>
		<literal>[ -v | -x ]</literal>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>arma 1 2 ; y</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>arma 2 2 ; y -v</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Estimates a univariate ARMA (Autoregressive, Moving Average)
	model.  The integer values <replaceable>p</replaceable> and
	<replaceable>q</replaceable> represent the AR and MA orders
	respectively.  If the <literal>-v</literal>
	(<quote>verbose</quote>) flag is given, details of the
	iterative estimation procedure are shown.
      </para>

      <para>The default is to use the <quote>native</quote> gretl ARMA
	function; the <literal>-x</literal> flag calls for use of the
	<application>X-12-ARIMA</application> program instead (this
	will work only if the <application>X-12-ARIMA</application>
	package for gretl is installed).
      </para>

      <para>The native gretl ARMA algorithm is largely due to Riccardo
	<quote>Jack</quote> Lucchetti.  It uses a conditional maximum
	likelihood procedure, implemented via iterated least squares
	estimation of the outer product of the gradient (OPG)
	regression.  See <xref linkend="jack-arma"/> for the logic of
	the procedure.  The AR coefficients are initialized using an
	OLS auto-regression, and the MA coefficients are initialized
	at zero.</para>

      <para>The AIC value given in connection with ARMA models is
	calculated according to the definition used in
	<application>X-12-ARIMA</application>, namely
	  <informalequation>
	  <alt role="tex">\[\mbox{AIC}=-2L+2k\]</alt>
	  <graphic fileref="figures/aic"/>
	  </informalequation> where <emphasis>L</emphasis> is the
	log-likelihood and <emphasis>k</emphasis> is the total number
	of parameters estimated. The <quote>frequency</quote> figure
	  printed in connection with AR and MA roots is the &lgr;
	  value that solves
	  <informalequation>
	  <alt role="tex">\[z=re^{i2\pi\lambda}\]</alt>
	  <graphic fileref="figures/lambda"/>
	  </informalequation> where <emphasis>z</emphasis> is the root
	  in question and <emphasis>r</emphasis> is its modulus.
      </para>

    </sect2>

    <sect2 id="chow"><title>chow</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>obs</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>chow 25</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>chow 1988.1</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Must follow an OLS regression.  Creates a dummy variable which
	equals 1 from the split point specified by
	<replaceable>obs</replaceable> to the end of the sample, 0
	otherwise, and also creates interaction terms between this
	dummy and the original independent variables.  An augmented
	regression is run including these terms and an
	<emphasis>F</emphasis> statistic is calculated, taking the
	augmented regression as the unrestricted and the original as
	restricted.  This statistic is appropriate for testing the
	null hypothesis of no structural break at the given split
	point.
      </para>

    </sect2>

    <sect2 id="coeffsum"><title>coeffsum</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>indepvars</replaceable>
	      </entry>
	    </row>
	    <row><entry>Example:</entry>
	      <entry><command>coeffsum xt xt_1 xr_2</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Must follow an regression.  Calculates the sum of the
	coefficients on the variables in the
	<replaceable>indepvars</replaceable> list.  Prints this sum
	along with its standard error and the p-value for the null
	hypothesis that the sum is zero.
      </para>

    </sect2>


    <sect2 id="coint"><title>coint</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>order depvar indepvar</replaceable>
	      </entry>
	    </row>
	    <row><entry>Examples:</entry>
	      <entry><command>coint 2 y x</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>coint 4 y x1 x2</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Carries out Augmented Dickey&ndash;Fuller tests on the null
	hypothesis that each of the variables listed has a unit root,
	using the given lag order.  The cointegrating regression is
	estimated, and an ADF test is run on the residuals from this
	regression.  The Durbin&ndash;Watson statistic for the
	cointegrating regression is also given.  Note that none of
	these test statistics can be referred to the usual statistical
	tables.
      </para>

    </sect2>

    <sect2 id="johansen"><title>coint2</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>order depvar indepvar</replaceable>
	      </entry>
	    </row>
	    <row><entry>Examples:</entry>
	      <entry><command>coint2 2 y x</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>coint2 4 y x1 x2 -o</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Carries out the Johansen trace test for cointegration among
	the listed variables for the given order. Critical values are
	computed via J. Doornik's gamma approximation (Doornik, 1998).
	For details of this test see Hamilton (1994, Chapter 19).  If
	the <literal>-o</literal> flag is given the results of the
	various auxiliary regressions are printed.
      </para>

    </sect2>

    <sect2 id="corc"><title>corc</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
		&opto;
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>corc 1 0 2 4 6 7</command> 
	      </entry>
	    </row>
	    <row><entry></entry>
	      <entry><command>corc -o 1 0 2 4 6 7</command>
	      </entry>
	    </row>
	    <row><entry></entry>
	      <entry><command>corc y 0 x1 x2 x3</command>
	      </entry>
	    </row>
	    <row><entry></entry>
	      <entry><command>corc -o y 0 x1 x2 x3</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Computes parameter estimates using the Cochrane&ndash;Orcutt
	iterative procedure (see Section 9.4 of Ramanathan) with
	<replaceable>depvar</replaceable> as the dependent variable
	and <replaceable>indepvars</replaceable> as the list of
	independent variables.  Iteration is terminated when
	successive estimates of the autocorrelation coefficient do not
	differ by more than 0.001 or after 20 iterations.  If the
	<literal>-o</literal> flag is given, the covariance matrix of
	regression coefficients is printed.  Residuals of this
	transformed regression are stored under the name
	<varname>uhat</varname>.  Various internal variables may be
	retrieved using the <command>genr</command> command, provided
	<command>genr</command> is invoked immediately after this
	command.
      </para>

    </sect2>

    <sect2 id="corr"><title>corr</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry>[ <replaceable>varlist</replaceable> ]
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>corr 1 3 5</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>corr y x1 x2 x3</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Prints the pairwise correlation coefficients for the variables
	in <replaceable>varlist</replaceable>, or for all variables in
	the data set if <replaceable>varlist</replaceable> is not
	given.
      </para>

    </sect2>


    <sect2 id="corrgm"><title>corrgm</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>variable</replaceable> [
		<replaceable>maxlag</replaceable> ]
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Prints the values of the autocorrelation function for the
	<replaceable>variable</replaceable> specified (either by name
	or number).  See Ramanathan, Section 11.7.  It is thus
	<inlineequation>
	  <alt role="tex">$\rho(u_t, u_{t-s})$</alt>
	  <inlinemediaobject>
	    <imageobject>
	      <imagedata align="center" fileref="figures/autocorr"/>
	    </imageobject>
	  </inlinemediaobject>
	</inlineequation> where
	<emphasis>u</emphasis><subscript><emphasis>t</emphasis></subscript> 
	is the <emphasis>t</emphasis>th observation of the variable
	<emphasis>u</emphasis> and <emphasis>s</emphasis> is the
	number of lags.
      </para>

      <para>
	The partial autocorrelations are also shown: these are net of
	the effects of intervening lags.  The command also graphs the
	correlogram and prints the Box-Pierce <emphasis>Q</emphasis>
	statistic for testing the null hypothesis that the series is
	<quote>white noise</quote>. This is asymptotically distributed
	as chi-square with degrees of freedom equal to the number of
	lags used.
      </para>

      <para>
	If an (optional) integer <replaceable>maxlag</replaceable>
	value is supplied the length of the correlogram is limited to
	at most that number of lags, otherwise the length is
	determined automatically.
      </para>

    </sect2>

    <sect2 id="criteria"><title>criteria</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>ess T k</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Example:</entry>
	      <entry><command>criteria 23.45 45 8</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Computes the model selection statistics (see Ramanathan,
	Section 4.3), given <replaceable>ess</replaceable> (error sum
	of squares), the number of observations
	(<emphasis>T</emphasis>), and the number of coefficients
	(<emphasis>k</emphasis>). <emphasis>T</emphasis>,
	<emphasis>k</emphasis>, and <replaceable>ess</replaceable> may
	be numerical values or names of previously defined variables.
      </para>

    </sect2>

    <sect2 id="critical"><title>critical</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>dist param1 </replaceable>
		<literal>[</literal> <replaceable>param2</replaceable>
		<literal>]</literal>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>critical t 20</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>critical X 5</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>critical F 3 37</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>If <replaceable>dist</replaceable> is
	<literal>t</literal>, <literal>X</literal> or
	<literal>F</literal>, prints out the critical values for the
	student's <emphasis>t</emphasis>, chi-square or
	<emphasis>F</emphasis> distribution respectively, for the
	common significance levels and using the specified degrees of
	freedom, given as <replaceable>param1</replaceable> for t and
	chi-square, or <replaceable>param1</replaceable> and
	<replaceable>param2</replaceable> for <emphasis>F</emphasis>.
	If <replaceable>dist</replaceable> is <literal>d</literal>,
	prints the upper and lower values of the Durbin-Watson
	statistic at 5 percent significance, for the given number of
	observations, <replaceable>param1</replaceable>, and for the
	range of 1 to 5 explanatory variables.
      </para>

    </sect2>

    <sect2 id="cusum"><title>cusum</title>

      <para>
	Must follow the estimation of a model via OLS.  Performs the
	CUSUM test for parameter stability.  A series of (scaled)
	one-step ahead forecast errors is obtained by running a series
	of regressions: the first regression uses the first
	<emphasis>k</emphasis> observations and is used to generate a
	prediction of the dependent variable at observation at
	observation <emphasis>k</emphasis> + 1; the second uses the
	first <emphasis>k</emphasis> + 1 observations and generates a
	prediction for observation <emphasis>k</emphasis> + 2, and so
	on (where <emphasis>k</emphasis> is the number of parameters
	in the original model).  The cumulated sum of the scaled
	forecast errors is printed and graphed.  The null hypothesis
	of parameter stability is rejected at the 5 percent
	significance level if the cumulated sum strays outside of the
	95 percent confidence band.
      </para>

      <para>
	The Harvey&ndash;Collier <emphasis>t</emphasis>-statistic for
	testing the null hypothesis of parameter stability is also
	printed.  See Chapter 7 of Greene's <citetitle>Econometric
	  Analysis</citetitle> for details.
      </para>

    </sect2>

    <sect2 id="data"><title>data</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Reads the variables in <replaceable>varlist</replaceable>
	from a database (gretl or RATS 4.0), which must have been
	opened previously using the <command>open</command> command.
	In addition, a data frequency and sample range must be
	established using the the <command>setobs</command> and
	<command>smpl</command> commands prior to using this command.
	Here is a full example:</para>

      <programlisting>
	open macrodat.rat
	setobs 4 1959:1
	smpl ; 1999:4
	data GDP_JP GDP_UK</programlisting>

      <para>These commands open a database named
	<filename>macrodat.rat</filename>, establish a quarterly data
	set starting in the first quarter of 1959 and ending in the
	fourth quarter of 1999, and then import the series named
	<varname>GDP_JP</varname> and
	<varname>GDP_UK</varname>.</para>

      <para>If the series to be read are of higher frequency than the
	working data set, you must specify a compaction method as
	below:</para>

      <programlisting>
	data (compact=average) LHUR PUNEW</programlisting>

      <para>The four available compaction methods are
	<quote>average</quote> (takes the mean of the high frequency
	observations), <quote>last</quote> (uses the last
	observation), <quote>first</quote> and <quote>sum</quote>.
      </para> 

    </sect2>    

    <sect2 id="delete"><title>delete</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Removes the listed variables (given by name or number)
	from the dataset. <emphasis>Use with caution</emphasis>: no
	confirmation is asked, and any variables with higher ID
	numbers will be re-numbered.</para>

      <para>If no <replaceable>varlist</replaceable> is given with
	this command, it deletes the last (highest numbered) variable
	from the dataset.</para>

    </sect2>

    <sect2 id="diff"><title>diff</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	The first difference of each variable in
	<replaceable>varlist</replaceable> is obtained and the result
	stored in a new variable with the prefix
	<varname>d_</varname>.  Thus <command>diff x y</command>
	creates the new variables <varname>d_x = x(t) -
	  x(t-1)</varname> and <varname>d_y = y(t) - y(t-1)</varname>.
      </para>

    </sect2>

    <sect2 id="cmd-end"><title>end</title>

      <para>
	Ends a block of commands of some sort.  For example,
	<command>end system</command> terminates an equation system.
      </para>

    </sect2>

    <sect2 id="endloop"><title>endloop</title>

      <para>
	Terminates a simulation loop.  See <command>loop</command>.
      </para>

    </sect2>

    <sect2 id="equation"><title>equation</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar</replaceable>
		<replaceable>indepvars</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Example:</entry>
	      <entry><command>equation y x1 x2 x3 const</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Specifies an equation within a system of equations (see the
	<command>system</command> command).  The sytax for specifying
	an equation is the same as that for, e.g., the
	<command>ols</command> command.
      </para>

    </sect2>

    <sect2 id="eqnprint"><title>eqnprint</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Options:</entry>
	      <entry>&opto; <literal>[ -f</literal>
		<replaceable>filename</replaceable>
		<literal>]</literal>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Must follow the estimation of a model via OLS.  Prints the
	estimated model in the form of a &latex; equation.  If a
	filename is specified using the <literal>-f</literal> flag
	output goes to that file, otherwise it goes to a file with a
	name of the form <filename>equation_N.tex</filename>, where
	<literal>N</literal> is the number of models estimated to date
	in the current session.  See also the
	<command>tabprint</command> command.</para>

      <para>
	If the <literal>-o</literal> flag is given the &latex; file is
	a complete document, ready for processing; otherwise it must
	be included in a document.
      </para>

    </sect2>

    <sect2 id="fcast"><title>fcast</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry>[ <replaceable>startobs endobs</replaceable> ]
		<replaceable>newvarname</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>fcast 1997.1 1999.4 f1</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>fcast f2</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Must follow an estimation command.  Forecasts are generated
	for the specified range (or the largest possible range if no
	<replaceable>startobs</replaceable> and
	<replaceable>endobs</replaceable> are given) and the values
	saved as <replaceable>newvarname</replaceable>, which can be
	printed, graphed, or plotted. The right-hand side variables
	are those in the original model.  There is no provision to
	substitute other variables.  If an autoregressive error
	process is specified (for <command>hilu</command>,
	<command>corc</command>, and <command>ar</command>) the
	forecast is conditional one step ahead and incorporates the
	error process.
      </para>

    </sect2>

    <sect2 id="fcasterr"><title>fcasterr</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>startobs endobs</replaceable> &opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	After estimating an OLS model which includes a constant and at
	least one independent variable (these restrictions may be
	relaxed at some point) you can use this command to print out
	fitted values over the specified observation range, along with
	the estimated standard errors of those predictions and 95
	percent confidence intervals.  If the <literal>-o</literal>
	flag is given the results will also be displayed using
	gnuplot.  The augmented regression method of Salkever (1976)
	is used to generate the forecast standard errors.
      </para>

    </sect2>

    <sect2 id="fit"><title>fit</title>

      <para>
	The <command>fit</command> command (must follow an estimation
	command) is a shortcut for the <command>fcast</command>
	command.  It generates fitted values, in a series called
	<command>autofit</command>, for the current sample, based on
	the last regression.  In the case of time-series models,
	<command>fit</command> also pops up a gnuplot graph of fitted
	and actual values of the dependent variable against time.
      </para>

    </sect2>

    <sect2 id="freq"><title>freq</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>var</replaceable> 
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Prints the frequency distribution for
	<replaceable>var</replaceable> (given by name or number) along
	with a chi-square test for normality. In interactive mode a
	gnuplot graph of the distribution is displayed.  
      </para>

      <!-- <para role="bodge">&nbsp;</para> -->
      <!-- <para role="bodge">&nbsp;</para> -->
      <!-- BODGE to make genr section title not an orphan -->

    </sect2>

    <sect2 id="genr"><title>genr</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>newvar</replaceable> =
		<replaceable>formula</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Creates new variables, usually through transformations of
	existing variables. See also <command>diff</command>,
	<command>logs</command>, <command>lags</command>,
	<command>ldiff</command>, <command>multiply</command> and
	<command>square</command> for shortcuts.
      </para>

      <para>
	Supported <emphasis>arithmetical operators</emphasis> are, in
	order of precedence: <literal>^</literal> (exponentiation);
	<literal>*</literal>, <literal>/</literal> and
	<literal>%</literal> (modulus or remainder);
	<literal>+</literal> and <literal>-</literal>. 
      </para>

      <para>
	The available <emphasis>Boolean operators</emphasis> are
	(again, in order of precedence): <literal>!</literal>
	(negation), <literal>&amp;</literal> (logical AND),
	<literal>|</literal> (logical OR), <literal>&gt;</literal>,
	<literal>&lt;</literal>, <literal>=</literal>,
	<literal>&gt;=</literal> (greater than or equal),
	<literal>&lt;=</literal> (less than or equal) and
	<literal>!=</literal> (not equal).  The Boolean operators can
	be used in constructing dummy variables: for instance
	<literal>(x > 10)</literal> returns 1 if <literal>x</literal>
	&gt; 10, 0 otherwise. Supported <emphasis>functions</emphasis>
	fall into these groups:
      </para>

      <itemizedlist>
	<listitem><para>Standard math functions:
	    <function>abs</function>, <function>cos</function>,
	    <function>exp</function>, <function>int</function>
	    (integer part), <function>ln</function> (natural log:
	    <function>log</function> is a synonym),
	    <function>sin</function>,
	    <function>sqrt</function>.</para>
	</listitem>
	<listitem><para>Statistical functions:
	    <function>max</function> (maximum value in a series),
	    <function>min</function> (minimum),
	    <function>mean</function> (arithmetic mean),
	    <function>median</function>, <function>var</function>
	    (variance) <function>sd</function> (standard deviation),
	    <function>sst</function> (sum of squared deviations from
	    the mean), <function>sum</function>,
	    <function>cov</function> (covariance),
	    <function>corr</function> (correlation coefficient),
	    <function>pvalue</function></para>
	</listitem>
	<listitem><para>Time-series functions:
	    <function>diff</function> (first difference),
	    <function>ldiff</function> (log-difference, or first
	    difference of natural logs).  To generate lags of a
	    variable <varname>x</varname>, use the syntax
	    <command>x(-N)</command>, where <varname>N</varname>
	    represents the desired lag length; to generate leads, use
	    <command>x(+N)</command>;</para>
	</listitem>
	<listitem><para>Miscellaneous: <function>cum</function>
	    (cumulate), <function>sort</function>,
	    <function>uniform</function>, <function>normal</function>,
	    <function>misszero</function> (replace the missing
	    observation code in a given series with zeros),
	    <command>zeromiss</command> (the inverse operation to
	    <command>misszero</command>), <function>nobs</function>
	    (return the number of valid observations in a given data
	    series).</para>
	</listitem>
      </itemizedlist> 


      <para>
	All of the above functions with the exception of
	<function>cov</function>, <function>corr</function>,
	<function>pvalue</function>, <function>uniform</function> and
	<function>normal</function> take as their single argument
	either the name of a variable (note that you can't refer to
	variables by their ID numbers in a <command>genr</command>
	command) or a composite expression that evaluates to a
	variable (e.g. <literal>ln((x1+x2)/2)</literal>).
	<function>cov</function> and <function>corr</function> both
	require two arguments, and return respectively the covariance
	and the correlation coefficient between two named variables.
	The <function>pvalue</function> function takes the same
	arguments as the <command>pvalue</command> command (see
	below), but in this context commas should be placed between
	the arguments. <function>uniform()</function> and
	<function>normal()</function>, which do not take arguments,
	return pseudo-random series drawn from the uniform (0&ndash;1)
	and standard normal distributions respectively (see also the
	<command>seed</command> command).  Uniform series are
	generated using the C library function
	<function>rand()</function>; for normal series the method of
	Box and Muller (1958) is used.</para>

      <para>Besides the operators and functions just noted there are
	some special uses of <command>genr</command>:
      </para>

      <itemizedlist>
	<listitem><para><command>genr time</command> creates a time
	    trend variable (1,2,3,&hellip;) called
	    <command>time</command>. <command>genr index</command>
	    does the same thing except that the variable is called
	    <varname>index</varname>.</para>
	</listitem>
	<listitem><para><command>genr dummy</command> creates dummy
	    variables up to the periodicity of the data.  E.g. in the
	    case of quarterly data (periodicity 4), the program
	    creates <varname>dummy_1</varname> = 1 for first quarter
	    and 0 in other quarters, <varname>dummy_2</varname> = 1
	    for the second quarter and 0 in other quarters, and so
	    on.</para>
	</listitem>
	<listitem><para><command>genr paneldum</command> creates a set
	    of special dummy variables for use with a panel data set
	    &mdash; see <xref linkend="panel"/> above.</para>
	</listitem>
	<listitem><para>Various internal variables defined in the
	    course of running a regression can be retrieved using
	    <command>genr</command>, as follows:</para>

	  <informaltable role="cmd" frame="none">
	    <tgroup cols="2">
	      <colspec colwidth="100pt"/>
	      <colspec colwidth="300pt"/>
	      <tbody>
		<row>
		  <entry><varname>$ess</varname></entry>
		  <entry>error sum of squares
		  </entry>
		</row>
		<row>
		  <entry><varname>$rsq</varname></entry>
		  <entry>unadjusted <emphasis>R</emphasis>-squared
		  </entry>
		</row>
		<row>
		  <entry><varname>$T</varname></entry>
		  <entry>number of observations used
		  </entry>
		</row>
		<row>
		  <entry><varname>$df</varname></entry>
		  <entry>degrees of freedom
		  </entry>
		</row>
		<row>
		  <entry><varname>$trsq</varname></entry>
		  <entry><emphasis>TR</emphasis>-squared (sample size
		    times <emphasis>R</emphasis>-squared)
		  </entry>
		</row>
		<row>
		  <entry><varname>$sigma</varname></entry>
		  <entry>standard error of residuals
		  </entry>
		</row>
		<row>
		  <entry><varname>$aic</varname></entry>
		  <entry>Akaike Information Criterion
		  </entry>
		</row>
		<row>
		  <entry><varname>$lnl</varname></entry>
		  <entry>log-likelihood (logit and probit models)
		  </entry>
		</row>
		<row>
		  <entry><varname>$sigma</varname></entry>
		  <entry>standard error of residuals
		  </entry>
		</row>
		<row>
		  <entry>coeff(<replaceable>var</replaceable>)</entry>
		  <entry>estimated coefficient for variable
		    <replaceable>var</replaceable>
		  </entry>
		</row>
		<row>
		  <entry>stderr(<replaceable>var</replaceable>)</entry>
		  <entry>estimated standard error for variable
		    <replaceable>var</replaceable>
		  </entry>
		</row>
		<row>
		  <entry>rho(<replaceable>i</replaceable>)</entry>
		  <entry><replaceable>i</replaceable>th order
		    autoregressive coefficient for residuals
		  </entry>
		</row>
		<row>
		  <entry>vcv(<replaceable>var1</replaceable>,<replaceable>var2</replaceable>)</entry>
		  <entry>covariance between coefficients for named
		    variables <replaceable>var1</replaceable> and
		    <replaceable>var2</replaceable>
		  </entry>
		</row>
	      </tbody>
	    </tgroup>
	  </informaltable>
	</listitem>
      </itemizedlist> 

      <para>
	<emphasis>Note</emphasis>: In the command-line program,
	<command>genr</command> commands that retrieve model-related
	data always reference the model that was estimated most
	recently.  This is also true in the GUI program, if one uses
	<command>genr</command> in the <quote>gretl console</quote> or
	enters a formula using the <quote>Define new variable</quote>
	option under the Variable menu in the main window.  With the
	GUI, however, you have the option of retrieving data from any
	model currently displayed in a window (whether or not it's the
	most recent model).  You do this under the <quote>Model
	  data</quote> menu in the model's window.</para>

      <para>The internal series <varname>uhat</varname> and
	<varname>yhat</varname> hold, respectively, the residuals and
	fitted values from the last regression.</para>

      <para>
	Three other <quote>internal</quote> variables are available:
	<varname>$nobs</varname> holds the number of observations in
	the current sample range (note that this may or may not equal
	the value of <varname>$T</varname>, the number of observations
	used in estimating the last model).  The variable
	<varname>t</varname> serves as an index of the observations.
	Thus for instance <literal>genr dum = (t=15)</literal> will
	generate a dummy variable that has value 1 for observation 15,
	0 otherwise.  The variable <varname>$pd</varname> holds the
	frequency or periodicity of the data (e.g. 4 for quarterly
	data).</para>
	
      <para>
	<xref linkend="tab-genr"/> gives several examples of uses of
	<command>genr</command> with explanatory notes; here are a
	couple of tips on dummy variables:
      </para>

      <itemizedlist>
	<listitem><para>Suppose <varname>x</varname> is coded with
	    values 1, 2, or 3 and you want three dummy variables,
	    <varname>d1</varname> = 1 if <varname>x</varname> = 1, 0
	    otherwise, <varname>d2</varname> = 1 if
	    <varname>x</varname> = 2, and so on.  To create these, use
	    the commands: 

	    <programlisting>
	      genr d1 = (x=1)
	      genr d2 = (x=2)
	      genr d3 = (x=3)</programlisting>
	  </para>
	</listitem>

	<listitem><para>To create <varname>z</varname> =
	    <literal>max(x,y)</literal> do

	   <programlisting>
	      genr d = x&gt;y
	      genr z = (x*d)+(y*(1-d))</programlisting>
	  </para>
	</listitem>
      </itemizedlist>

      <table id="tab-genr" frame="none">
	<title>Examples of use of genr command</title>
	<tgroup cols="2">
	  <thead>
	    <row>
	      <entry>Command</entry>
	      <entry>Comment</entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry><command>genr y = x1^3</command></entry>
	      <entry><command>x1</command> cubed</entry>
	    </row>          
	    <row>
	      <entry><command>genr y =
		  ln((x1+x2)/x3)</command></entry>
	      <entry></entry>
	    </row>
	    <row>
	      <entry><command>genr z = x&gt;y</command></entry>
	      <entry>sets <command>z(t)</command> to 1 if
		<command>x(t) &gt; y(t)</command> else to 0</entry>
	    </row> 
	    <row>
	      <entry><command>genr y = x(-2)</command></entry>
	      <entry><command><varname>x</varname> lagged 2
		  periods</command></entry>
	    </row>     
	    <row>
	      <entry><command>genr y = x(2)</command></entry>
	      <entry><command><varname>x</varname> led 2
		  periods</command></entry>
	    </row>
	    <row>
	      <entry><command>genr y = diff(x)</command></entry>
	      <entry><command>y(t) = x(t) - x(t-1)</command></entry>
	    </row>
	    <row>
	      <entry><command>genr y = ldiff(x)</command></entry>
	      <entry><command>y(t) = log x(t) - log x(t-1)</command>,
		the instantaneous rate of growth of
		<varname>x</varname></entry>
	    </row>
	    <row>
	      <entry><command>genr y = sort(x)</command></entry>
	      <entry>sorts <varname>x</varname> in increasing order
		and stores in <varname>y</varname></entry>
	    </row>
	    <row>
	      <entry><command>genr y = -sort(-x)</command></entry>
	      <entry>sort <varname>x</varname> in decreasing
		order</entry>
	    </row>
	    <row>
	      <entry><command>genr y = int(x)</command></entry>
	      <entry>truncate <varname>x</varname> and store its
		integer value as <varname>y</varname></entry>
	    </row>
	    <row>
	      <entry><command>genr y = abs(x)</command></entry>
	      <entry>store the absolute values of
		<command>x</command></entry>
	    </row>
	    <row>
	      <entry><command>genr y = sum(x)</command></entry>
	      <entry>sum <varname>x</varname> values excluding missing
		&minus;999 entries</entry>
	    </row>
	    <row>
	      <entry><command>genr y = cum(x)</command></entry>
	      <entry>cumulation: 
		<inlineequation>
		  <alt role="tex">$y_t = \sum_{\tau=1}^t
		    x_{\tau}$</alt>
		  <inlinemediaobject>
		    <imageobject>
		      <imagedata align="center"
			  fileref="figures/cumulate"/>
		    </imageobject>
		  </inlinemediaobject>
		</inlineequation>
	      </entry>
	    </row>
	    <row>
	      <entry><command>genr aa = $ess</command></entry>
	      <entry>set <varname>aa</varname> equal to the Error Sum
		of Squares from last regression</entry>
	    </row>
	    <row>
	      <entry><command>genr x = coeff(sqft)</command></entry>
	      <entry>grab the estimated coefficient on the variable
		<varname>sqft</varname> from the last
		regression</entry>
	    </row>
	    <row>
	      <entry><command>genr rho4 = rho(4)</command></entry>
	      <entry>grab the 4th-order autoregressive coefficient
		from the last model (presumes an <command>ar</command>
		model)</entry>
	    </row>
	    <row>
	      <entry><command>genr cvx1x2 = vcv(x1,
		  x2)</command></entry>
	      <entry>grab the estimated coefficient covariance of vars
		<varname>x1</varname> and <varname>x2</varname> from
		the last model</entry>
	    </row>
	    <row>
	      <entry><command>genr foo = uniform()</command></entry>
	      <entry>uniform pseudo-random variable in range
		0&ndash;1</entry>
	    </row>
	    <row>
	      <entry><command>genr bar = 3 *
		  normal()</command></entry>
	      <entry>normal pseudo-random variable, &mu; = 0, &sigma;
		= 3</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>

      <para>
	&nbsp;
      </para>

    </sect2>

    <sect2 id="gnuplot"><title>gnuplot</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>yvars xvar</replaceable> <literal>[
		  -o | -m ]</literal>
	      </entry>
	    </row>
	    <row>
	      <entry>Addendum:</entry>
	      <entry><literal>{ </literal> <replaceable>literal
		  gnuplot commands</replaceable> <literal>}</literal> 
	      </entry>
	    </row>
	    <row>
	      <entry>Alternate form:</entry>
	      <entry><literal>-z</literal> <replaceable>yvar xvar
		  dummy</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	In the first case the <replaceable>yvars</replaceable> are
	graphed against <replaceable>xvar</replaceable>.  If the flag
	<literal>-o</literal> is supplied the plot will use lines; if
	the flag <literal>-m</literal> is given the plot uses impulses
	(vertical lines); otherwise points will be used.
      </para>

      <para>
	In the <quote>alternate form</quote> (with
	<literal>-z</literal>) <replaceable>yvar</replaceable> is
	graphed against <replaceable>xvar</replaceable> with the
	points shown in different colors depending on whether the
	value of <replaceable>dummy</replaceable> is 1 or 0.
      </para>

      <para>
	To make a time-series graph, do <command>gnuplot</command>
	<replaceable>yvars</replaceable> <varname>time</varname>. If
	no variable named <varname>time</varname> already exists, then
	it will be generated automatically.  Special dummy variables
	will be created for plotting quarterly and monthly data.
      </para>

      <para>
	In interactive mode the result is piped to gnuplot for
	display.  In batch mode a plot file named
	<filename>gpttmp01.plt</filename> is written.  (With
	subsequent uses of <command>gnuplot</command> similar files
	are created, with the number in the file name incremented.)
	The plots can be generated later using the command
	<command>gnuplot gpttmp.plt</command>.  (Under MS Windows,
	start <application>wgnuplot</application> and open the file
	<filename>gpttmp01.plt</filename>.)
      </para>

      <para>A further option to this command is available: following
	the specification of the variables to be plotted and the
	option flag (if any), you may add literal gnuplot commands to
	control the appearance of the plot (for example, setting the
	plot title and/or the axis ranges).  These commands should be
	enclosed in braces, and each gnuplot command must be
	terminated with a semi-colon.  A backslash may be used to
	continue a set of gnuplot commands over more than one line.
	Here is an example of the syntax:
      </para>

      <para>
	<literal>{ set title 'My Title'; set yrange [0:1000];
	  }</literal>
      </para>

    </sect2>

    <sect2 id="graph"><title>graph</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>yvars xvar</replaceable> &opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	ASCII graphics.  The <replaceable>yvars</replaceable> (which
	may be given by name or number) are  graphed against
	<replaceable>xvar</replaceable> using ASCII symbols. The
	<literal>-o</literal> flag will graph with 40 rows and 60
	columns. Without it, the graph will be 20 by 60 (for screen
	output). See also the <command>gnuplot</command> command.
      </para>

    </sect2>

    <sect2 id="hausman"><title>hausman</title>

      <para>
	This test is available only after estimating a model using the
	<command>pooled</command> command (see also
	<command>panel</command> and <command>setobs</command>).  It
	tests the simple pooled model against the principal
	alternatives, the fixed effects and random effects
	models.</para>

      <para>
	The fixed effects model adds a dummy variable for all but one
	of the cross-sectional units, allowing the intercept of the
	regression to vary across the units.  An
	<emphasis>F</emphasis>-test for the joint significance of
	these dummies is presented.  The random effects model
	decomposes the residual variance into two parts, one part
	specific to the cross-sectional unit and the other specific to
	the particular observation.  (This estimator can be computed
	only if the number of cross-sectional units in the data set
	exceeds the number of parameters to be estimated.) The
	Breusch&ndash;Pagan LM statistic tests the null hypothesis
	(that the pooled OLS estimator is adequate) against the random
	effects alternative.</para>

      <para>
	The pooled OLS model may be rejected against both of the
	alternatives, fixed effects and random effects. Provided the
	unit- or group-specific error is uncorrelated with the
	independent variables, the random effects estimator is more
	efficient than the fixed effects estimator; otherwise the
	random effects estimator is inconsistent and the fixed effects
	estimator is to be preferred. The null hypothesis for the
	Hausman test is that the group-specific error is not so
	correlated (and therefore the random effects model is
	preferable).  A low p-value for this test counts against the
	random effects model and in favor of fixed effects.</para>

    </sect2>

    <sect2 id="hccm"><title>hccm</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
		&opto;
	      </entry>  
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Presents OLS estimates with the heteroskedasticity consistent
	covariance matrix estimates for the standard errors of
	regression coefficients using MacKinnon and White (1985)
	<quote>jackknife</quote> estimates (see Ramanathan, Section
	8.3).  The coefficient covariance matrix is printed if the
	<literal>-o</literal> flag is given.
      </para>

    </sect2>

    <sect2 id="help"><title>help</title>

      <para>
	Gives a list of available commands. <command>help</command>
	<replaceable>command</replaceable> describes
	<replaceable>command</replaceable> (e.g. <command>help
	  smpl</command>).  You can type <command>man</command>
	instead of <command>help</command> if you like. 
      </para> 

    </sect2>

    <sect2 id="hilu"><title>hilu</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
		&opto;
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>hilu 1 0 2 4 6 7</command>  
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>hilu -o y 0 x1 x2 x3</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Computes parameter estimates using the Hildreth&ndash;Lu
	search procedure (fine tuned by the CORC procedure) with
	<replaceable>depvar</replaceable> as the dependent variable
	and <replaceable>indepvars</replaceable> as the list of
	independent variables. The error sum of squares of the
	transformed model is graphed against the value of rho from
	&minus;0.99 to 0.99.  If the <literal>-o</literal> flag is
	present, the covariance matrix of regression coefficients will
	be printed. Residuals of this transformed regression are
	stored under the name <varname>uhat</varname>.
      </para>

    </sect2>

    <sect2 id="hsk"><title>hsk</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
		&opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable> 

      <para>
	Prints heteroskedasticity corrected estimates (see Ramanathan,
	ch. 8) and associated statistics.  The auxiliary regression
	predicts the log of the square of residuals (using squares of
	independent variables but not their cross products) from which
	weighted least squares estimates are obtained.  If the
	<literal>-o</literal> flag is given, the covariance matrix of
	regression coefficients is printed. Various internal variables
	may be retrieved using the <command>genr</command> command,
	provided <command>genr</command> is invoked immediately after
	this command.
      </para>

    </sect2>

    <sect2 id="if"><title>if</title>

      <para>Flow control for command execution.  The syntax is</para>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry><command>if</command>
		<replaceable>condition</replaceable></entry>
	    </row>
	    <row>
	      <entry>&nbsp;<replaceable>commands</replaceable></entry>
	    </row>
	    <row>
	      <entry><command>else</command></entry>
	    </row>
	    <row>
	      <entry>&nbsp;<replaceable>commands</replaceable></entry>
	    </row>
	    <row>
	      <entry><command>endif</command></entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>       

      <para><replaceable>condition</replaceable> must be a Boolean
	expression, for the syntax of which see <xref
	  linkend="genr"/>.  The <command>else</command> block is
	optional; <literal>if</literal> &hellip;
	<literal>endif</literal> blocks may be nested.</para>

    </sect2>

    <sect2 id="import"><title>import</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>filename</replaceable> &opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable> 

      <para>
	  Without the <literal>-o</literal> flag, brings in data from
	a comma-separated values (CSV) format file, such as can easily
	be written from a spreadsheet program.  The file should have
	variable names on the first line and a rectangular data matrix
	on the remaining lines.  Variables should be arranged
	<quote>by observation</quote> (one column per variable; each
	row represents an observation).  See <xref
	    linkend="datafiles"/> for details.
      </para>

      <para>
	With the <literal>-o</literal> flag, reads a data file in BOX1
	format, as can be obtained using the Data Extraction Service
	of the US Bureau of the Census.
      </para>

    </sect2>

    <sect2 id="info"><title>info</title>

      <para>
	<command>info</command> prints out any information contained
	in the header file corresponding to the current datafile.
	(This information must be enclosed between
	<literal>(*</literal> and <literal>*)</literal>, these markers
	being placed on separate lines.)
      </para>

    </sect2>

    <sect2 id="label"><title>label</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>varname</replaceable> <literal>-d
		  "</literal><replaceable>Descriptive
		  string</replaceable><literal>" -n
		  "</literal><replaceable>display
		  name</replaceable><literal>"</literal>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Sets the descriptive label for the given variable (if the
	<literal>-d</literal> flag is given, followed by a string in
	double quotes) and/or the <quote>display name</quote> for the
	variable (if the <literal>-n</literal> flag is given, followed
	by a quoted string).  If a variable has a display name, this
	is used when generating graphs.</para>
    </sect2>

    <sect2 id="labels"><title>labels</title>

      <para>
	Prints out the informative labels for any variables that have
	been generated using <command>genr</command>, and any labels
	added to the data set via the GUI.
      </para>

    </sect2>

    <sect2 id="lad"><title>lad</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Calculates a regression that minimizes the sum of the absolute
	deviations of the observed from the fitted values of the
	dependent variable.  Coefficient estimates are derived using
	the Barrodale&ndash;Roberts simplex algorithm; a warning is
	printed if the solution is not unique. Standard errors are
	derived using the bootstrap procedure with 500 drawings.
      </para>

    </sect2>

    <sect2 id="lags"><title>lags</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Creates new variables which are lagged values of each of the
	variables in varlist.  The number of lagged variables equals
	the periodicity. For example, if the periodicity is 4
	(quarterly), the command <command>lags x y</command> creates
	<varname>x_1</varname> = <varname>x(t-1)</varname>,
	<varname>x_2</varname> = <varname>x(t-2)</varname>,
	<varname>x_3</varname> = <varname>x(t-3)</varname> and
	<varname>x_4</varname> <varname>x(t-4)</varname>. Similarly
	for <varname>y</varname>. These variables must be referred to
	in the exact form, that is, with the underscore.
      </para>

    </sect2>

    <sect2 id="ldiff"><title>ldiff</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	The first difference of the natural log of each variable in
	varlist is obtained and the result stored in a new variable
	with the prefix <varname>ld_</varname>.  Thus <command>ldiff x
	  y</command> creates the new variables
	<varname>ld_x</varname> =
	  <inlineequation>
	  <alt role="tex">$\ln(x_t) - \ln(x_{t-1})$</alt>
	  <inlinemediaobject>
	    <imageobject>
	      <imagedata align="center" fileref="figures/ldx"/>
	    </imageobject>
	  </inlinemediaobject>
	  </inlineequation> and <varname>ld_y</varname> =
	  <inlineequation>
	  <alt role="tex">$\ln(y_t) - \ln(y_{t-1})$</alt>
	  <inlinemediaobject>
	    <imageobject>
	      <imagedata align="center" fileref="figures/ldy"/>
	    </imageobject>
	  </inlinemediaobject>
	  </inlineequation>.
      </para>

    </sect2>

    <sect2 id="leverage"><title>leverage</title>

      <para>
	  Must immediately follow an <command>ols</command> command.
	Calculates the leverage (<emphasis>h</emphasis>, which must
	lie in the range 0 to 1) for each data point in the sample on
	which the previous model was estimated.  Displays the residual
	(<emphasis>u</emphasis>) for each observation along with its
	leverage and a measure of its influence on the estimates, 
	  <inlineequation>
	  <alt role="tex">$uh/(1 - h)$</alt>
	  <inlinemediaobject>
	    <imageobject>
	      <imagedata align="center" fileref="figures/influence"/>
	    </imageobject>
	  </inlinemediaobject>
	  </inlineequation>.  <quote>Leverage points</quote> for which
	the value of <emphasis>h</emphasis> exceeds
	2<emphasis>k</emphasis>/<emphasis>n</emphasis> (where
	<emphasis>k</emphasis> is the number of parameters being
	estmated and <emphasis>n</emphasis> is the sample size) are
	flagged with an asterisk.  For details on the concepts of
	leverage and influence see Davidson and MacKinnon (1993,
	Chapter 2).
      </para>

      <para>
	DFFITS values are also shown: these are <quote>studentized
	  residuals</quote> (predicted residuals divided by their
	standard errors) multiplied by 
	  <inlineequation>
	  <alt role="tex">$\sqrt{h/(1 - h)}$</alt>
	  <inlinemediaobject>
	    <imageobject>
	      <imagedata align="center" fileref="figures/dffit"/>
	    </imageobject>
	  </inlinemediaobject>
	  </inlineequation>. For a discussion of studentized residuals
	and DFFITS see G. S. Maddala, <citetitle>Introduction to
	  Econometrics</citetitle>, chapter 12; also Belsley, Kuh and
	Welsch (1980).  Briefly, a <quote>predicted residual</quote>
	is the difference between the observed value of the dependent
	variable at observation <emphasis>t</emphasis>, and the fitted
	value for observation <emphasis>t</emphasis> obtained from a
	regression in which that observation is omitted (or a dummy
	variable with value 1 for observation <emphasis>t</emphasis>
	alone has been added); the studentized residual is obtained by
	dividing the predicted residual by its standard error.</para>

      <para>If the <literal>-o</literal> flag is given with this
	command, then the leverage, influence and DFFITS values are
	added to the current data set.</para>

    </sect2>

    <sect2 id="lmtest"><title>lmtest</title>

      <para>
	Must immediately follow an <command>ols</command> command.
	Prints the Lagrange Multiplier test statistics (and associated
	p-values) for nonlinearity and heteroskedasticity (White's
	test) or, if the <literal>-o</literal> flag is given, the LMF
	test statistic for serial correlation up to the periodicity
	(see Kiviet, 1986).  The corresponding auxiliary regression
	coefficients are also printed out.  See Ramanathan, Chapters
	7, 8, and 9 for details. In the case of White's test, only the
	squared independent variables are used and not their cross
	products.  In the case of the autocorrelation test, if the
	p-value of the LMF statistic is less than 0.05 then serial
	correlation-robust standard errors are calculated and
	displayed.  For details on the calculation of these standard
	errors see Wooldridge (2002, Chapter 12).
      </para>

    </sect2>

    <sect2 id="logistic"><title>logistic</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
		<literal>[
		  ymax=</literal><replaceable>value</replaceable>
		<literal>]</literal>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>logistic y const x</command>  
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>logistic y const x ymax=50</command>  
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Logistic regression: carries out an OLS regression using the
	logistic transformation of the dependent variable,
	<informalequation>
	  <alt role="tex">\[\log\left(\frac{y}{y^*-y}\right)\]</alt>
	  <graphic fileref="figures/logistic1"/>
	  </informalequation></para>

      <para>The dependent variable must be strictly positive.  If it
	is a decimal fraction, between 0 and 1, the default is to use
	a <emphasis>y</emphasis><superscript>*</superscript>
	value (the asymptotic maximum of the dependent variable) of 1.
	If the dependent variable is a percentage, between 0 and 100,
	the default
	<emphasis>y</emphasis><superscript>*</superscript> is
	100.  If you wish to set a different maximum, use the optional
	<literal>ymax=</literal><replaceable>value</replaceable> syntax
	following the list of regressors.  The supplied value must be
	greater than all of the observed values of the dependent
	variable.</para>

      <para>The fitted values and residuals from the regression are
	automatically transformed using 	  
	<informalequation>
	  <alt role="tex">\[y=\frac{y^*}{1+e^{-x}}\]</alt>
	  <graphic fileref="figures/logistic2"/>
	  </informalequation> 
	where <emphasis>x</emphasis> represents either a fitted value
	or a residual from the OLS regression using the transformed
	dependent variable.  The reported values are therefore
	comparable with the original dependent variable.</para>

      <para>Note that if the dependent variable is binary, you should
	use the <command>logit</command> command instead.
      </para>

    </sect2>

    <sect2 id="logit"><title>logit</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Binomial logit regression. The dependent variable should be a
	binary variable.  Maximum likelihood estimates of the
	coefficients on <replaceable>indepvars</replaceable> are
	obtained via the EM or Expectation&ndash;Maximization method
	(see Ruud, 2000, Chapter 27).  As the model is nonlinear the
	slopes depend on the values of the independent variables: the
	reported slopes are evaluated at the means of those variables.
	The chi-square statistic tests the null hypothesis that all
	coefficients are zero apart from the constant.
      </para>

      <para>
	If you want to use logit for analysis of proportions (where
	the dependent variable is the proportion of cases having a
	certain characteristic, at each observation, rather than a 1
	or 0 variable indicating whether the characteristic is present
	or not) you should not use the <command>logit</command>
	command, but rather construct the logit variable (e.g.
	<command>genr lgt_p = log(p/(1 - p))</command>) and use this
	as the dependent variable in an OLS regression.  See
	Ramanathan, Chapter 12.
      </para>

    </sect2>

    <sect2 id="logs"><title>logs</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	The natural log of each of the variables in varlist is
	obtained and the result stored in a new variable with the
	prefix <literal>l_</literal> which is <quote>el</quote>
	underscore.  <command>logs x y</command> creates the new
	variables <varname>l_x</varname> = ln(<varname>x</varname>)
	and <varname>l_y</varname> = ln(<varname>y</varname>).
      </para>

      <para role="bodge">&nbsp;</para>

    </sect2>

    <sect2 id="loop"><title>loop</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Usage:</entry>
	      <entry><command>loop</command>
		<replaceable>number_of_times</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>loop while</command>
		<replaceable>condition</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>loop for i=</command>
		<replaceable>start</replaceable><command>..</command>
		<replaceable>end</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>loop 1000</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>loop while essdiff > .00001</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>loop for i=1991..2000</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Opens a special mode in which the program accepts commands
	to be repeated either a specified number of times, or so long
	as a specified condition holds true, or for successive integer
	values of the (internal) index variable <varname>i</varname>.
	Within a loop, only 7 commands can be used:
	<command>genr</command>, <command>ols</command>,
	<command>print</command>, <command>sim</command>,
	<command>smpl</command>, <command>store</command> and
	<command>summary</command> (store can't be used in a
	<quote>while</quote> loop).  You exit the mode of entering
	loop commands with <command>endloop</command>: at this point
	the stacked commands are executed.  Loops cannot be nested.
	See <xref linkend="looping"/> for details.
      </para>

    </sect2>

    <sect2 id="meantest"><title>meantest</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>var1 var2</replaceable> &opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Calculates the <emphasis>t</emphasis> statistic for the null
	hypothesis that the population means are equal for the
	variables <replaceable>var1</replaceable> and
	<replaceable>var2</replaceable>, and shows its p-value.
	Without the <literal>-o</literal> flag, the statistic is
	computed on the assumption that the variances are equal for
	the two variables; with the <literal>-o</literal> flag the
	variances are assumed to be unequal. (The flag will make a
	difference only if there are different numbers of non-missing
	observations for the two variables.)
      </para>

    </sect2>

    <sect2 id="mpols"><title>mpols</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples: </entry>
	      <entry><command>mpols 1 0 2 4 6 7</command>  
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>mpols y 0 x1 x2 x3</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>           

      <para>
	Computes OLS estimates with <replaceable>depvar</replaceable>
	as the dependent variable and
	<replaceable>indepvars</replaceable> as the list of
	independent variables, using multiple precision floating-point
	arithmetic. The variables may be specified by name or number;
	use the number zero for a constant term. This command is
	available only if <application>gretl</application> is compiled
	with support for the Gnu Multiple Precision library (GMP).
      </para>

      <para>
	To estimate a polynomial fit, using multiple precision
	arithmetic to generate the required powers of the independent
	variable, use the form, e.g. <command>mpols y 0 x ; 2 3
	  4</command> This does a regression of <varname>y</varname>
	on <varname>x</varname>, <varname>x</varname> squared,
	<varname>x</varname> cubed and <varname>x</varname> to the
	fourth power.  That is, the numbers (which must be positive
	integers) to the right of the semicolon specify the powers of
	<varname>x</varname> to be used.  If more than one independent
	variable is specified, the last variable before the semicolon
	is taken to be the one that should be raised to various
	powers.
      </para>

    </sect2>

    <sect2 id="multiply"><title>multiply</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>x suffix varlist</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>multiply invpop pc 3 4 5 6</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>multiply 1000 big x1 x2 x3</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	The variables in <replaceable>varlist</replaceable>
	(referenced by name or number) are multiplied by
	<replaceable>x</replaceable>, which may be either a numerical
	value or the name of a variable already defined. The products
	are named with the specified <replaceable>suffix</replaceable>
	(maximum 3 characters). The original variable names are
	truncated first if need be. For instance, suppose you want to
	create per capita versions of certain variables, and you have
	the variable <varname>pop</varname> (population).  A suitable
	set of commands is then: <command>genr invpop =
	  1/pop</command> <command>multiply invpop pc income
	  expend</command> which will create
	<varname>incomepc</varname> as the product of
	<varname>income</varname> and <varname>invpop</varname>, and
	<varname>expendpc</varname> as <varname>expend</varname> times
	<varname>invpop</varname>.
      </para>

    </sect2>

    <sect2 id="nls"><title>nls</title>

      <para>
	Performs Nonlinear Least Squares (NLS) estimation using a
	modified version of the Levenberg&ndash;Marquandt algorithm.
	The user must supply a function specification.  The parameters
	of this function must be declared and given starting values
	(using the <command>genr</command> command) prior to
	estimation. Optionally, the user may specify the derivatives
	of the regression function with respect to each of the
	parameters; if analytical derivatives are not supplied, a
	numerical approximation to the Jacobian is computed.</para>

      <para>
	It is easiest to show what is required by example.  The
	following is a complete script to estimate the nonlinear
	consumption function set out in William Greene's
	<citetitle>Econometric Analysis</citetitle>, in chapter 11 of
	the 4th edition, or chapter 9 of the 5th.  (The numbers to the
	left of the lines are for reference and are not part of the
	commands.)</para>

      <programlisting>
	1   open greene11_3.gdt
	2   ols C 0 Y
	3   genr alpha = coeff(0)
	4   genr beta = coeff(Y)
	5   genr gamma = 1.0
	6   nls C = alpha + beta * Y^gamma
	7   deriv alpha = 1
	8   deriv beta = Y^gamma
	9   deriv gamma = beta * Y^gamma * log(Y)
	10  end nls
      </programlisting>

      <para>
	It is often convenient to initialize the parameters by
	reference to a related linear model; that is accomplished here
	on lines 2 to 5.  The parameters alpha, beta and gamma could
	be set to any initial values (not necessarily based on a model
	estimated with OLS), although convergence of the NLS procedure
	is not guaranteed for an arbitrary starting point.</para>

      <para>
	The actual NLS commands occupy lines 6 to 10. On line 6 the
	<command>nls</command> command is given: a dependent variable
	is specified, followed by an equals sign, followed by a
	function specification.  The syntax for the expression on the
	right is the same as that for the <command>genr</command>
	command.  The next three lines specify the derivatives of the
	regression function with respect to each of the parameters in
	turn.  Each line begins with the keyword
	<command>deriv</command>, gives the name of a parameter, an
	equals sign, and an expression whereby the derivative can be
	calculated (again, the syntax here is the same as for
	<command>genr</command>). These <command>deriv</command> lines
	are optional, but it is recommended that you supply them if
	possible. Line 10, <command>end nls</command>, completes the
	command and calls for estimation.</para>

      <para>For further details on NLS estimation please see
	<xref linkend="nlschap"/>.</para>

    </sect2>

    <sect2 id="noecho"><title>noecho</title>

      <para>
	Suppresses the echoing of commands and comments (other than
	those inserted using the <command>print</command> command)
	when executing a command script.
      </para>

    </sect2>

    <sect2 id="nulldata"><title>nulldata</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>series_length</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Example:</entry>
	      <entry><command>nulldata 100</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Establishes a <quote>blank</quote> data set, containing only a
	constant, with periodicity 1 and the specified number of
	observations. This may be used for simulation purposes: some
	of the <command>genr</command> commands (e.g. <command>genr
	  uniform()</command>, <command>genr normal()</command>,
	<command>genr time</command>) will generate dummy data from
	scratch to fill out the data set. This command may be useful
	in conjunction with <command>loop</command>.  See also the
	<command>seed</command> command.
      </para>

    </sect2>

    <sect2 id="ols"><title>ols</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
		<literal>[ -o | -q ]</literal>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples: </entry>
	      <entry><command>ols 1 0 2 4 6 7</command>  
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>ols -o y 0 x1 x2 x3</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>ols -q y 0 x1 x2 x3</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>                

      <para>
	Computes ordinary least squares (OLS) estimates with
	<replaceable>depvar</replaceable> as the dependent variable
	and <replaceable>indepvars</replaceable> as the list of
	independent variables. The <literal>-o</literal> flag calls
	for printing of the covariance matrix of regression
	coefficients in addition to the various statistics that are
	printed by default.  The <literal>-q</literal> flag suppresses
	the printing of output.
      </para>

      <para>Variables may be specified by name or number; use the
	number zero for a constant term. The program also prints the
	p-values for <emphasis>t</emphasis> (two-tailed) and
	<emphasis>F</emphasis>-statistics.  A p-value below 0.01
	indicates significance at the 1 percent level and is denoted
	by <literal>***</literal>. <literal>**</literal> indicates
	significance between 1 and 5 percent and <literal>*</literal>
	indicates significance between 5 and 10 percent levels. Model
	selection statistics (described in Ramanathan, Section 4.3)
	are also printed. Various internal variables may be retrieved
	using the <command>genr</command> command, provided
	<command>genr</command> is invoked immediately after this
	command.
      </para>

    </sect2>

    <sect2 id="omit"><title>omit</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable> &opto;
	      </entry>
	    </row>
	    <row>
	      <entry>Example:</entry>
	      <entry><command>omit 5 7 9</command> 
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	This command must be invoked after an estimation command. The
	variables in <replaceable>varlist</replaceable> are omitted
	from the previous model and the new model estimated. If more
	than one variable is omitted, the Wald
	<emphasis>F</emphasis>-statistic for the omitted variables
	will be printed along with its p-value (for the OLS procedure
	only).  A p-value below 0.05 means that the coefficients are
	jointly significant at the 5 percent level. Various internal
	variables may be retrieved using the <command>genr</command>
	command, provided <command>genr</command> is invoked
	immediately after this command. The coefficient covariance
	matrix is printed if the <literal>-o</literal> flag is given.
      </para>

      <para role="bodge">&nbsp;</para> 

    </sect2>

    <sect2 id="omitfrom"><title>omitfrom</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>modelID varlist</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Example: </entry>
	      <entry><command>omitfrom 2 5 7 9</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Works like the <command>omit</command> command, except
	that you specify a previous model (using its ID number, which
	is printed at the start of the model output) to take as the
	base for omitting variables.  The example above omits
	variables number 5, 7 and 9 from Model 2.
      </para>

    </sect2>

    <sect2 id="open"><title>open</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>datafile</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Opens a data file.  If a data file is already open, it is
	replaced by the newly opened one.  The program will try to
	detect the format of the data file (native, CSV or BOX1).
      </para>

      <para>
	This command can also be used to open a database (gretl or
	RATS 4.0) for reading, in which case it should be followed by
	the <command>data</command> command to extract particular
	series from the database.
      </para>

    </sect2>

    <sect2 id="outfile"><title>outfile</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><literal>[</literal>
		<replaceable>flag</replaceable> <literal>]</literal>
		<literal>[</literal>
		<replaceable>filename</replaceable>
		<literal>]</literal>
	      </entry>
	    </row>
	    <row>
	      <entry>Example:</entry>
	      <entry>outfile -w regress.txt</entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry>ols y 0 x1 x2</entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry>outfile -c</entry>
	    </row>	  
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Divert output to <replaceable>filename</replaceable>,
	until further notice.  Use the flag <literal>-a</literal> to
	append output to an existing file, or <literal>-w</literal> to
	start a new file (or overwrite an existing one).  Only one
	file can be opened in this way at any given time.</para>

      <para>The <literal>-c</literal> flag is used to close an output
	file that was previously opened as above.  Output will then
	revert to the default stream.</para>

      <para>In the example above, the results of one regression are
	written to the file <filename>regress.txt</filename>, which is
	then closed.</para>

    </sect2>

    <sect2 id="pca"><title>pca</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable>
		<literal>[</literal> <replaceable>flag</replaceable>
		<literal>]</literal>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Rudimentary Principal Components Analysis.  Prints the
	eigenvalues of the correlation matrix for the variables in
	<replaceable>varlist</replaceable> along with the proportion
	of the joint variance accounted for by each component.  Also
	prints the corresponding eigenvectors (<quote>component
	  loadings</quote>).</para>  

      <para>If the <literal>-o</literal> flag is given, components
	with eigenvalues greater than 1.0 are saved to the dataset as
	variables, with names <varname>PC1</varname>,
	<varname>PC2</varname> and so on.  These artificial variables
	are formed as the sum of (component loading) times
	(standardized <varname>Xi</varname>), where
	<varname>Xi</varname> denotes the <emphasis>i</emphasis>th
	variable in <replaceable>varlist</replaceable>.</para>

      <para>If the <literal>-a</literal> flag is given, all of the
	components are saved as described above.</para> 

    </sect2>

    <sect2 id="panel-cmd"><title>panel</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><literal>-s</literal> or <literal>-c</literal>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Request that the current data set be interpreted as a
	panel (pooled cross section and time series).  With no flag,
	or with the <literal>-s</literal> flag, the data set is taken
	to be in the form of stacked time series (successive blocks of
	data contain time series for each cross-sectional unit).  With
	the <literal>-c</literal> flag, the data set is read as
	stacked cross-sections (successive blocks contain cross
	sections for each time period).  See also <xref
	  linkend="setobs"/>.
      </para>

    </sect2>    

    <sect2 id="pergm"><title>pergm</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varname</replaceable> &opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Computes and displays (and if not in batch mode, graphs) the
	spectrum of the specified variable.  Without the
	<literal>-o</literal> flag the sample periodogram is given;
	with the flag a Bartlett lag window of length 2 root
	<emphasis>T</emphasis> (where <emphasis>T</emphasis> is the
	sample size) is used in estimating the spectrum (see Chapter
	18 of Greene's <citetitle>Econometric Analysis</citetitle>).
	When the sample periodogram is printed, a
	<emphasis>t</emphasis>-test for fractional integration of the
	series (<quote>long memory</quote>) is also given: the null
	hypothesis is that the integration order is zero.
      </para>

    </sect2>

    <sect2 id="plot"><title>plot</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>plot x1</command></entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>plot x1 x2</command></entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>plot -o x1 x2</command></entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Plots data values for specified variables, for the range of
	observations currently in effect, using ASCII symbols.  Each
	line stands for an observation and the values are plotted
	horizontally.  If the flag <literal>-o</literal> is present,
	<varname>x1</varname> and <varname>x2</varname> are plotted in
	the same scale, otherwise <varname>x1</varname> and
	<varname>x2</varname> are scaled appropriately.  The
	<literal>-o</literal> flag should be used only if the
	variables have approximately the same range of values (e.g.
	observed and predicted dependent variable).  See also
	<command>gnuplot</command>.
      </para>

    </sect2>

    <sect2 id="pooled"><title>pooled</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
		&opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>                

      <para>Estimates a model via OLS (see <command>ols</command> for
	details on syntax), and flags it as a pooled or panel model,
	so that the <command>hausman</command> test item becomes
	available.</para>

    </sect2>


    <sect2 id="print"><title>print</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry> <entry>[
		<replaceable>varlist</replaceable> ] <literal>[ -o |
		  -t ]</literal> or [
		<replaceable>string</replaceable> ]
	      </entry>
	    </row>	    <row>
	      <entry>Examples:</entry>
	      <entry><command>print</command></entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>print x y</command></entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>print 1 2 3 -o</command>  </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	If <replaceable>varlist</replaceable> is given, prints the
	values of the specified variables; if no list is given, prints
	the values of all variables in the current data file. If the
	<literal>-o</literal> flag is given the data are printed by
	observation, otherwise they are printed by variable.  If the
	<literal>-t</literal> flag is given the data are printed by
	variable to 10 significant digits.
      </para>

      <para>
	If the argument to <command>print</command> is a literal
	string (which must start with a double-quote,
	<literal>"</literal>), the string is printed as is.</para>

    </sect2>

    <sect2 id="printf"><title>printf</title>

      <para>
	Prints scalar values under the control of a format string
	(providing a small subset of the <literal>printf()</literal>
	statement in the C programming language). Recognized formats
	are <literal>%g</literal> and <literal>%f</literal>, in each
	case with the various modifiers available in C.  Examples: the
	format <literal>%.10g</literal> prints a value to 10
	significant figures; <literal>%12.6f</literal> prints a value
	to 6 decimal places, with a width of 12 characters.</para>  

      <para>The format string itself must be enclosed in double
	quotes.  The values to be printed must follow the format
	string, separated by commas.  These values should take the
	form of either (a) the names of variables in the dataset, or
	(b) expressions that are valid for the <command>genr</command>
	command.  The following example prints the values of two
	variables plus that of a calculated expression:</para>

      <programlisting>
	ols 1 0 2 3
	genr b = coeff(2)
	genr se_b = stderr(2)
	printf "b = %.8g, standard error %.8g, t = %.4f\n", b, se_b, b/se_b
      </programlisting>

      <para>
	The maximum length of a format string is 127 characters.  The
	escape sequences <literal>\n</literal> (newline),
	<literal>\t</literal> (tab), <literal>\v</literal> (vertical
	tab) and <literal>\\</literal> (literal backslash) are
	recognized.  To print a literal percent sign, use
	<literal>%%</literal>.</para>

    </sect2>

    <sect2 id="probit"><title>probit</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar indepvars</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Probit regression. The dependent variable should be a binary
	variable. Maximum likelihood estimates of the coefficients on
	<replaceable>indepvars</replaceable> are obtained via iterated
	least squares (the EM or Expectation&ndash;Maximization
	method).  As the model is nonlinear the slopes depend on the
	values of the independent variables: the reported slopes are
	evaluated at the means of those variables.  The chi-square
	statistic tests the null hypothesis that all coefficients are
	zero apart from the constant.
      </para>

      <para>
	Probit for analysis of proportions is not implemented in
	<application>gretl</application> at this point.
      </para>

    </sect2>

    <sect2 id="pvalue"><title>pvalue</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Usage:</entry>
	      <entry></entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>pvalue 1</command>
		<replaceable>xvalue</replaceable> (normal
		distribution)
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>pvalue  2</command> <replaceable>df
		  xvalue</replaceable> (<emphasis>t</emphasis>
		distribution)
	      </entry>
		
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>pvalue 3</command> <replaceable>df
		  xvalue</replaceable> (chi-square distribution)
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>pvalue 4</command> <replaceable>dfn dfd
		  xvalue</replaceable> (<emphasis>F</emphasis>
		distribution)
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>pvalue 5</command> <replaceable>mean
		  variance xvalue</replaceable> (Gamma distribution)
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>     

      <para>
	Computes the area to the right of
	<replaceable>xvalue</replaceable> in the specified
	distribution.  <replaceable>df</replaceable> is the degrees of
	freedom, <replaceable>dfn</replaceable> is the d.f. for the
	numerator, <replaceable>dfd</replaceable> is the d.f. for the
	denominator.  Instead of the code numbers you can use
	<literal>z</literal>, <literal>t</literal>,
	<literal>X</literal>, <literal>F</literal> and
	<literal>G</literal> for the normal, <emphasis>t</emphasis>,
	chi-square, <emphasis>F</emphasis>, and gamma distributions
	respectively.
      </para>

    </sect2>

    <sect2 id="quit"><title>quit</title>

      <para>
	Exits from the program, giving you the option of saving the
	output from the session on the way out.  
      </para>

    </sect2>

    <sect2 id="rename"><title>rename</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>varnumber newname</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>Changes the name of the variable with identification
	number <replaceable>varnumber</replaceable> to
	<replaceable>newname</replaceable>.  The
	<replaceable>varnumber</replaceable> must be between 1 and the
	number of variables in the dataset.  The new name must be of 8
	characters maximum, must start with a letter, and must be
	composed of only letters, digits, and the underscore
	character.
      </para>

    </sect2>

    <sect2 id="reset"><title>reset</title>

      <para>
	Must immediately follow the estimation of a model via OLS.
	Carries out Ramsey's RESET test for model specification
	(non-linearity) by adding the square and the cube of the
	fitted values to the regression and calculating the
	<emphasis>F</emphasis> statistic for the null hypothesis that
	the parameters on the two added terms are zero.
      </para>

      <para role="bodgea4">&nbsp;</para>

    </sect2>

    <sect2 id="rhodiff"><title>rhodiff</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>rholist</replaceable>
		<literal>;</literal>
		<replaceable>varlist</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples: </entry>
	      <entry><command>rhodiff .65 ; 2 3 4</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>rhodiff r1 r2 ; x1 x2 x3</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Creates rho-differenced counterparts of the variables (given
	by number or by name) in <replaceable>varlist</replaceable>
	and adds them to the data set, using the suffix
	<literal>#</literal> for the new variables. Given variable
	<varname>v1</varname> in <replaceable>varlist</replaceable>,
	and entries <varname>r1</varname> and <varname>r2</varname> in
	<replaceable>rholist</replaceable>, <varname>v1# = v1(t) -
	  r1*v1(t-1) - r2*v1(t-2)</varname> is created. The
	<replaceable>rholist</replaceable> entries can be given as
	numerical values or as the names of variables previously
	defined.
      </para>

    </sect2>

    <sect2 id="rmplot"><title>rmplot</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varname</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Range&ndash;mean plot: this command creates a simple graph to
	help in deciding whether a time series,
	<emphasis>y</emphasis>(t), has constant variance or not.  We
	take the full sample t=1,...,T and divide it into small
	subsamples of arbitrary size <emphasis>k</emphasis>. The first
	subsample is formed by
	<emphasis>y</emphasis>(1),...,<emphasis>y</emphasis>(k), the
	second is <emphasis>y</emphasis>(k+1), ...,
	<emphasis>y</emphasis>(2k), and so on.  For each subsample we
	calculate the sample mean and range (= maximum minus minimum),
	and we construct a graph with the means on the horizontal axis
	and the ranges on the vertical. So each subsample is
	represented by a point in this plane.  If the variance of the
	series is constant we would expect the subsample range to be
	independent of the subsample mean; if we see the points
	approximate an upward-sloping line this suggests the variance
	of the series is increasing in its mean; and if the points
	approximate a downward sloping line this suggests the variance
	is decreasing in the mean.</para>

      <para>Besides the graph, gretl displays the means and ranges for
	each subsample, along with the slope coefficient for an OLS
	regression of the range on the mean and the p-value for the
	null hypothesis that this slope is zero.  If the slope
	coefficient is significant at the 10 percent significance
	level then the fitted line from the regression of range on
	mean is shown on the graph.
      </para>

    </sect2>

    <sect2 id="run"><title>run</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>inputfile</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Execute the commands in <replaceable>inputfile</replaceable>
	then return control to the interactive prompt.
      </para>

    </sect2>

    <sect2 id="runs"><title>runs</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varname</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Carries out the nonparametric <quote>runs</quote> test for
	randomness of the specified variable.  If you want to test for
	randomness of deviations from the median, for a variable named
	<varname>x1</varname> with a non-zero median, you can do the
	following:</para> 

      <programlisting>
	genr signx1 = x1 - median(x1)
	runs signx1
      </programlisting>

    </sect2>

    <sect2 id="scatters"><title>scatters</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>yvar</replaceable>
		<literal>;</literal>
		<replaceable>xvarlist</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>scatters</command>
		<replaceable>yvarlist</replaceable>
		<literal>;</literal> <replaceable>xvar</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>scatters 1 ; 2 3 4 5</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>scatters 1 2 3 4 5 6 ; time</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Plots pairwise scatters of <replaceable>yvar</replaceable>
	against all the variables in
	<replaceable>xvarlist</replaceable>, or of all the variables
	in <replaceable>yvarlist</replaceable> against
	<replaceable>xvar</replaceable>.  The first example above puts
	variable 1 on the <emphasis>y</emphasis>-axis and draws four
	graphs, the first having variable 2 on the
	<emphasis>x</emphasis>-axis, the second variable 3 on the
	<emphasis>x</emphasis>-axis, and so on.  The second example
	plots each of variables 1 through 6 against time. Scanning a
	set of such plots can be a useful step in exploratory data
	analysis.  The maximum number of plots is six; any extra
	variable in the list will be ignored.
      </para>

    </sect2>

    <sect2 id="seed"><title>seed</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>integer</replaceable> 
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Sets the seed for the pseudo-random number generator for the
	<function>uniform()</function> and
	<function>normal()</function> functions (see the
	<command>genr</command> command).  By default the seed is set
	when the program is started, using the system time.  If you
	want to obtain repeatable sequences of pseudo-random numbers
	you will need to set the seed manually.
      </para>

    </sect2>

    <sect2 id="setobs"><title>setobs</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>periodicity startobs</replaceable>
		  
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>setobs 4 1990.1</command> 
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>setobs 12 1978.03</command> 
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>setobs 20 1.01</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Force the program to interpret the current data set as time
	series or panel, when the data have been read in as simple
	undated series.  <replaceable>periodicity</replaceable> must
	be an integer; <replaceable>startobs</replaceable> is a string
	representing the date or panel ID of the first observation.
	See also <xref linkend="panel"/>.
      </para>

    </sect2>

    <sect2 id="setmiss"><title>setmiss</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>value</replaceable>
		<literal>[</literal>
		<replaceable>varlist</replaceable>
		<literal>]</literal>
	      </entry>
	    </row>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>setmiss -1</command> 
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>setmiss 100 x2</command> 
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Get the program to interpret some specific numerical data
	value (the first parameter to the command) as a code for
	<quote>missing</quote>, in the case of imported data.  If this
	value is the only parameter, as in the first example above,
	the interpretation will be applied to all series in the data
	set.  If <replaceable>value</replaceable> is followed by a
	list of variables, by name or number, the interpretation is
	confined to the specified variable(s). Thus in the second
	example the data value 100 is interpreted as a code for
	<quote>missing</quote>, but only for the variable
	<literal>x2</literal>.
      </para>

    </sect2>

    <sect2 id="shell"><title>shell</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Usage:</entry>
	      <entry><command>!</command>
		<replaceable>shellcommand</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	A <command>!</command> at the beginning of a command line is
	interpreted as an escape to the user's shell.  Thus arbitrary
	shell commands can be executed from within the program.
      </para>

    </sect2>

    <sect2 id="sim"><title>sim</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry>[ <replaceable>startobs endobs</replaceable> ]
		<replaceable>y a0 a1 a2</replaceable> &hellip;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
	<tgroup cols="3"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Examples:</entry>
	      <entry><command>sim 1979.2 1983.1 y 0 0.9</command>
	      </entry>
	      <entry>creates <varname>y(t) =  0.9*y(t-1)</varname>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>sim 15 25 y 10 0.8 x</command>
	      </entry>
	      <entry>creates <varname>y(t) = 10 + 0.8*y(t-1) +
		  x(t)*y(t-2)</varname>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>sim y 10 0.8 -x</command>
	      </entry>
	      <entry>creates <varname>y(t) = 10 + 0.8*y(t-1) -
		  x(t)*y(t-2)</varname>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Simulates values for <replaceable>y</replaceable> for the
	current sample range, or for the range
	<replaceable>startobs</replaceable> through
	<replaceable>endobs</replaceable> if these optional arguments
	are given.  The variable <replaceable>y</replaceable> must
	have been defined earlier with appropriate initial values. The
	formula used is <varname>y(t) = a0(t) + a1(t)*y(t-1) +
	  a2(t)*y(t-2) + &hellip;</varname> The
	<varname>ai(t)</varname> may be either numerical constants or
	variable names previously defined; these terms may be prefixed
	with minus sign.
      </para>

      <para>Note that as of gretl 1.2.0, <command>genr</command> (see
	<xref linkend="genr"/> above) works dynamically, and you will
	probably find it easier than <command>sim</command> for
	creating an autoregressive series.  For example</para>

      <programlisting>
	genr y = 0 * const
	genr y = .8*y(-1) -.2*y(-2) + normal()</programlisting>

      <para>now achieves the same object as (and with greater clarity
	than):</para>

      <programlisting>
	genr y = 0 * const
	genr u = normal()
	sim y u .8 -.2
      </programlisting>

    </sect2>

    <sect2 id="smpl"><title>smpl</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>startobs endobs</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>smpl</command>
		<command>+</command><replaceable>i</replaceable>
		<command>-</command><replaceable>j</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>smpl -o</command>
		<replaceable>dummyvar</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>smpl -o</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>smpl -r</command>
		<replaceable>condition</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>smpl full</command>
	      </entry>
	    </row>	
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Resets the sample range.  In the first form
	<replaceable>startobs</replaceable> and
	<replaceable>endobs</replaceable> must be consistent with the
	periodicity of the data.  In the second form, the integers
	<replaceable>i</replaceable> and <replaceable>j</replaceable>
	are taken as offsets relative to the existing sample range. In
	the third form <replaceable>dummyvar</replaceable> must be an
	indicator variable with values 0 or 1 at each observation; the
	sample will be restricted to observations where the value is
	1. The fourth form, <command>smpl -o</command>, drops all
	observations for which values of one or more variables are
	missing.  The fifth form (<literal>-r</literal>) restricts the
	sample to observations that satisfy the given (Boolean)
	condition.  The last form, <command>smpl full</command>,
	restores the full data range.
      </para>

      <informaltable frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="2in"/>
	  <tbody>
	    <row>
	      <entry><command>smpl 3 10</command>
	      </entry>
	      <entry>data with periodicity 1</entry>
	    </row>
	    <row>
	      <entry><command>smpl 1950 1990</command>
	      </entry>
	      <entry>annual data, periodicity 1</entry> 
	    </row>
	    <row>
	      <entry><command>smpl 1960.2 1982.4</command>
	      </entry>
	      <entry>quarterly data</entry>
	    </row>
	    <row>
	      <entry><command>smpl 1960.04 1985.10</command>
	      </entry>
	      <entry>monthly data</entry>
	    </row>
	    <row>
	      <entry><command>smpl 1960.2 ;</command>
	      </entry>
	      <entry>keep <replaceable>endobs</replaceable> unchanged
	      </entry>
	    </row>
	    <row>
	      <entry><command>smpl ; 1984.3</command>
	      </entry>
	      <entry>keep <replaceable>startobs</replaceable>
		unchanged
	      </entry>
	    </row>
	    <row>
	      <entry><command>smpl +1 -1</command>
	      </entry>
	      <entry>advance the starting observation by one; move the
		ending observation back one
	      </entry>
	    </row>
	    <row>
	      <entry><command>smpl -o dum1</command>
	      </entry>
	      <entry>draw sample of observations where
		<literal>dum1=1</literal>
	      </entry>
	    </row>
	    <row>
	      <entry><command>smpl -r income > 30000</command>
	      </entry>
	      <entry>sample cases where <varname>income</varname> has
		a value greater than 30000.
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>The intenal variable <varname>obs</varname> may be used in
	the last-noted form of <command>smpl</command> above, to
	exclude particular observations from the sample.  For example,
	<command>smpl -r obs!=4</command> will drop just the fourth
	observation. If the data points are identified by labels,
	<command>smpl -r obs!="USA"</command> will drop the
	observation with label <quote>USA</quote>.</para>

      <para>
	One point should be noted about the <literal>-o</literal> and
	<literal>-r</literal> forms of <command>smpl</command>: Any
	<quote>structural</quote> information in the data header file
	(regarding the time series or panel nature of the data) is
	lost when this command is issued.  You may reimpose structure
	with the <command>setobs</command> command.
      </para>

    </sect2>

    <sect2 id="spearman"><title>spearman</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>x y</replaceable> &opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Prints Spearman's rank correlation coefficient for the two
	variables <emphasis>x</emphasis> and <emphasis>y</emphasis>.
	The variables do not have to be ranked manually in advance;
	the function takes care of this. If the <literal>-o</literal>
	flag is supplied, the original data and the ranked data are
	printed out side by side.
      </para>

      <para>
	The automatic ranking is from largest to smallest (i.e. the
	largest data value gets rank 1).  If you need to invert this
	ranking, create a new variable which is the negative of the
	original first.  For example:
      </para>

      <programlisting>
	  genr altx = -x
	spearman altx y</programlisting>

    </sect2>

    <sect2 id="square"><title>square</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>varlist</replaceable> &opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Generates new variables which are squares and cross products
	of the variables in <replaceable>varlist</replaceable>
	(<literal>-o</literal> will create the cross products).  For
	example <command>square x y</command> will generate
	<varname>sq_x</varname> = <varname>x</varname> squared,
	<varname>sq_y</varname> = <varname>y</varname> squared and
	<varname>x_y</varname> = <varname>x</varname> times
	<varname>y</varname>.  If a particular variable is a dummy
	variable it is not squared because we will get the same
	variable.  
      </para>

    </sect2>

    <sect2 id="store"><title>store</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry><replaceable>datafile</replaceable> [
		<replaceable>varlist</replaceable> ] [
		<replaceable>flag</replaceable> ] 
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	<replaceable>datafile</replaceable> is the name of the file in
	which the values should be stored. 
      </para>

      <para>
	If <replaceable>varlist</replaceable> is absent, the values of
	all the data series in the current data set will be stored.
	Note that any scalar variables will not be saved
	automatically: if you wish to save scalars you must explicitly
	list them in <replaceable>varlist</replaceable>.
      </para>

      <para>
	By default storage is in native
	<application>gretl</application> XML format.  There are six
	valid (mutually exclusive) <replaceable>flags</replaceable>:
      </para>

      <informaltable frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry><literal>-z</literal>
	      </entry>
	      <entry>The default format, but gzip compressed.
	      </entry>
	    </row>
	    <row>
	      <entry><literal>-o</literal>
	      </entry>
	      <entry>Store the data by variables, in binary format
		using double precision.
	      </entry>
	    </row>
	    <row>
	      <entry><literal>-s</literal>
	      </entry>
	      <entry>Store the data by variables, in binary format
		using single precision.
	      </entry>
	    </row>
	    <row>
	      <entry><literal>-c</literal>
	      </entry>
	      <entry>Store the data in CSV (comma-separated values)
		format.  Such data can be read directly by spreadsheet
		programs.
	      </entry>
	    </row>
	    <row>
	      <entry><literal>-r</literal>
	      </entry>
	      <entry>Store the data in GNU R format.
	      </entry>
	    </row>
	    <row>
	      <entry><literal>-m</literal>
	      </entry>
	      <entry>Store the data in GNU Octave format.
	      </entry>
	    </row>
	    <row>
	      <entry><literal>-t</literal>
	      </entry>
	      <entry>Store the data in <quote>traditional</quote> ESL
		format, with an ascii data file and a separate
		informative header file.
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

    </sect2>

    <sect2 id="summary"><title>summary</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Argument:</entry>
	      <entry>[ <replaceable>varlist</replaceable> ]
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Print summary statistics for the variables in
	<replaceable>varlist</replaceable>, or for all the variables
	in the data set if <replaceable>varlist</replaceable> is
	omitted. Output consists of the mean, standard deviation (sd),
	coefficient of variation (= sd/mean), median, minimum,
	maximum, skewness coefficient, and excess kurtosis.
      </para>

    </sect2>

    <sect2 id="eqnsystem"><title>system</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry>type=<replaceable>systype</replaceable> [
		savevars=<replaceable>vars</replaceable> ]
	      </entry>
	    </row>
	    <row>
	      <entry>Examples: </entry>
	      <entry><command>system type=sur</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>system type=sur save=resids</command>
	      </entry>
	    </row>
	    <row>
	      <entry></entry>
	      <entry><command>system type=sur
		  save=resids,fitted</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Starts a system of equations.  At present the only type of
	system supported is <command>sur</command> (Seemingly
	Unrelated Regressions).  In the optional
	<command>save=</command> field of the command you can specify
	whether to save the residuals (<command>resids</command>)
	and/or the fitted values (<command>fitted</command>).  The
	system must contain at least two equations specified using the
	<command>equation</command> command, and it must be terminated
	with the line <command>end system</command>.
      </para>

    </sect2>      

    <sect2 id="tabprint"><title>tabprint</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Options:</entry>
	      <entry>&opto; <literal>[ -f</literal>
		<replaceable>filename</replaceable>
		<literal>]</literal>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Must follow the estimation of a model via OLS.  Prints the
	estimated model in the form of a &latex; tabular environment.
	If a filename is specified using the <literal>-f</literal>
	flag output goes to that file, otherwise it goes to a file
	with a name of the form <filename>model_N.tex</filename>,
	where <literal>N</literal> is the number of models estimated
	to date in the current session.  See also the
	<command>eqnprint</command> command.</para>

      <para>
	If the <literal>-o</literal> flag is given the &latex; file is
	a complete document, ready for processing; otherwise it must
	be included in a document.
      </para>

    </sect2>

    <sect2 id="testuhat"><title>testuhat</title>

      <para>
	Must follow a model estimation command.  Gives the frequency
	distribution for the residual from the model along with a
	chi-square test for normality, based on the procedure
	suggested by Doornik and Hansen (1984).
      </para>

    </sect2>

    <sect2 id="tsls"><title>tsls</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>depvar varlist1</replaceable>
		<literal>;</literal>
		<replaceable>varlist2</replaceable> &opto;
	      </entry>
	    </row>
	    <row>
	      <entry>Example: </entry>
	      <entry><command>tsls y1 0 y2 y3 x1 x2 ; 0 x1 x2 x3 x4 x5
		  x6</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Computes two-stage least squares (TSLS) estimates of
	parameters.  <replaceable>depvar</replaceable> is the
	dependent variable, <replaceable>varlist1</replaceable> is the
	list of independent variables (including right-hand side
	endogenous variables) in the structural equation for which
	TSLS estimates are needed. <replaceable>varlist2</replaceable>
	is the combined list of exogenous and predetermined variables
	in all the equations. If <replaceable>varlist2</replaceable>
	is not at least as long as
	<replaceable>varlist1</replaceable>, the model is not
	identified.  The <literal>-o</literal> flag will print the
	covariance matrix of the coefficients.  In the above example,
	the <varname>y</varname>s are the endogenous variables and the
	<varname>x</varname>s are the exogenous and predetermined
	variables.  A number of internal variables may be retrieved
	using the <command>genr</command> command, provided
	<command>genr</command> is invoked immediately after this
	command.
      </para>


    </sect2>

    <sect2 id="var"><title>var</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>order varlist</replaceable> ; 
		<replaceable>detlist</replaceable>
	      </entry>
	    </row>
	    <row>
	      <entry>Example: </entry>
	      <entry><command>var 4 x1 x2 x3 ; const time</command>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Sets up and estimates (using OLS) a vector autoregression
	(VAR).  The first argument specifies the lag order, then
	follows the setup for the first equation.  Don't include lags
	among the elements of <replaceable>varlist</replaceable>
	&mdash; they will be added automatically.  The semi-colon
	separates the stochastic variables, for which
	<replaceable>order</replaceable> lags will be included, from
	deterministic terms in <replaceable>detlist</replaceable>, such
	as the constant, a time trend, and dummy variables.</para>

      <para>
	In fact, gretl is able to recognize the more common
	deterministic variables (constant, time trend, dummy variables
	with no values other than 0 and 1) as such, so these do not
	have to placed after the semi-colon.  More complex
	deterministic variables (e.g. a time trend interacted with a
	dummy variable) must be put after the semi-colon.</para>

      <para>
	A separate regression is run for each variable in varlist.
	Output for each equation includes <emphasis>F</emphasis>-tests
	for zero restrictions on all lags of each of the variables; an
	<emphasis>F</emphasis>-test for the significance of the
	maximum lag; forecast variance decompositions; and impulse
	response functions.</para>

      <para>
	The variance decompositions and impulse responses are based on
	the Cholesky decomposition of the contemporaneous covariance
	matrix, and in this context the order in which the
	(stochastic) variables are given matters.  The first variable
	in the list is assumed to be <quote>most exogenous</quote>
	within-period.</para>  

    </sect2>

    <sect2 id="list"><title>varlist</title>

      <para>
	Prints a listing of variables currently available.
	<command>list</command> and <command>ls</command> are
	synonyms.  
      </para>

    </sect2>

    <sect2 id="vartest"><title>vartest</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>var1 var2</replaceable>
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Calculates the <emphasis>F</emphasis> statistic for the null
	hypothesis that the population variances for the variables
	<replaceable>var1</replaceable> and
	<replaceable>var2</replaceable> are equal, and shows its
	p-value.
      </para>

    </sect2>

    <sect2 id="wls"><title>wls</title>

      <informaltable role="cmd" frame="none">
	<tgroup cols="2"><colspec colnum="1" colwidth="&cmdcol;"/>
	  <tbody>
	    <row>
	      <entry>Arguments:</entry>
	      <entry><replaceable>weightvar depvar
		  indepvars</replaceable> &opto;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </informaltable>

      <para>
	Weighted least squares estimates are obtained using
	<replaceable>weightvar</replaceable> as the weight,
	<replaceable>depvar</replaceable> as the dependent variable
	and <replaceable>indepvars</replaceable> as the list of
	independent variables.  More specifically, an OLS regression
	is run on <replaceable>weightvar</replaceable>
	<literal>*</literal> <replaceable>depvar</replaceable> against
	<replaceable>weight</replaceable> <literal>*</literal>
	<replaceable>indepvars</replaceable>. If the
	<replaceable>weightvar</replaceable> is a dummy variable, this
	is equivalent to eliminating all observations with the number
	zero for <replaceable>weightvar</replaceable>. The flag
	<literal>-o</literal> will print the covariance matrix of
	coefficients.  A number of internal variables may be retrieved
	using the <command>genr</command> command, provided
	<command>genr</command> is invoked immediately after this
	command.
      </para>

    </sect2>

  </sect1>

  <sect1 id="estimators"><title>Estimators and tests: summary</title>

    <para><xref linkend="tab-estim"/> shows the estimators available
      under the Model menu in <application>gretl</application>'s main
      window.  The corresponding script command (if there is one
      available) is shown in parentheses.  For details consult the
      command's entry in <xref linkend="cmdref"/>.</para>

    <table id="tab-estim" frame="none">
      <title>Estimators</title>
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry>Estimator</entry>
	    <entry>Comment</entry>
	  </row>
	</thead>
	<tbody>
	  <row>
	    <entry>Ordinary Least Squares
	      (<command>ols</command>)</entry>
	    <entry>The workhorse estimator</entry>
	  </row>
	  <row>
	    <entry>Weighted Least Squares
	      (<command>wls</command>)</entry>
	    <entry>Heteroskedasticity, exclusion of selected
	      observations</entry>
	  </row>
	  <row>
	    <entry>HCCM (<command>hccm</command>)</entry>
	    <entry>Heteroskedasticity corrected covariance
	      matrix</entry>
	  </row>
	  <row>
	    <entry>Heteroskedasticity corrected
	      (<command>hsk</command>)</entry>
	    <entry>Weighted Least Squares based on predicted error
	      variance</entry>
	  </row>
	  <row>
	    <entry>Cochrane&ndash;Orcutt (<command>corc</command>)</entry>
	    <entry>First-order autocorrelation</entry>
	  </row>
	  <row>
	    <entry>Hildreth&ndash;Lu (<command>hilu</command>)</entry>
	    <entry>First-order autocorrelation</entry>
	  </row>
	  <row>
	    <entry>Autoregressive Estimation
	      (<command>ar</command>)</entry>
	    <entry>Higher-order autocorrelation
	      (generalized Cochrane&ndash;Orcutt)</entry>
	  </row>
	  <row>
	    <entry>Vector Autoregression
	      (<command>var</command>)</entry>
	    <entry>Systems of time-series equations</entry>
	  </row>
	  <row>
	    <entry>Cointegration test
	      (<command>coint</command>)</entry>
	    <entry>Long-run relationships between series</entry>
	  </row>
	  <row>
	    <entry>Two-Stage Least Squares
	      (<command>tsls</command>)</entry>
	    <entry>Simultaneous equations</entry>
	  </row>
	  <row>
	    <entry>Nonlinear Least Squares
	      (<command>nls</command>)</entry>
	    <entry>Nonlinear models</entry>
	  </row>
	  <row>
	    <entry>Logit
	      (<command>logit</command>)</entry>
	    <entry>Binary dependent variable (logistic
	      distribution)</entry>
	  </row>
	  <row>
	    <entry>Probit
	      (<command>probit</command>)</entry>
	    <entry>Binary dependent variable (normal
	      distribution)</entry>
	  </row>
	  <row>
	    <entry>Least Absolute Deviation
	      (<command>lad</command>)</entry>
	    <entry>Alternative to Least Squares</entry>
	  </row>
	  <row>
	    <entry>Rank Correlation
	      (<command>spearman</command>)</entry>
	    <entry>Correlation with ordinal data</entry>
	  </row>
	  <row>
	    <entry>Pooled OLS (<command>pooled</command>)</entry>
	    <entry>OLS estimation for pooled cross-section, time
	      series data</entry>
	  </row>
	  <row>
	    <entry>Multiple precision OLS (<command>mpols</command>)</entry>
	    <entry>OLS estimation using multiple precision
	      arithmetic</entry>
	  </row>
	</tbody>
      </tgroup>
    </table>

    <para role="bodge">&nbsp;</para>
    <para role="bodge">&nbsp;</para>

    <para><xref linkend="tab-tests"/> shows the tests that are available
      under the Tests menu in a model window, after estimation.</para>

    <table id="tab-tests" frame="none">
      <title>Tests for models</title>
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry>Test</entry>
	    <entry>Corresponding command</entry>
	  </row>
	</thead>
	<tbody>
	  <row>
	    <entry>Omit variables (<emphasis>F</emphasis>-test if OLS)</entry>
	    <entry><command>omit</command></entry>
	  </row>
	  <row>
	    <entry>Add variables (<emphasis>F</emphasis>-test if OLS)</entry>
	    <entry><command>add</command></entry>
	  </row>
	  <row>
	    <entry>Nonlinearity (squares)</entry>
	    <entry><command>lmtest</command></entry>
	  </row>
	  <row>
	    <entry>Nonlinearity (logs)</entry>
	    <entry><command>lmtest</command></entry>
	  </row>
	  <row>
	    <entry>Nonlinearity (Ramsey's RESET)</entry>
	    <entry><command>reset</command></entry>
	  </row>
	  <row>
	    <entry>Heteroskedasticity (White's test)</entry>
	    <entry><command>lmtest</command></entry>
	  </row>
	  <row>
	    <entry>Influential observations</entry>
	    <entry><command>leverage</command></entry>
	  </row>
	  <row>
	    <entry>Autocorrelation up to the data frequency</entry>
	    <entry><command>lmtest -o</command></entry>
	  </row>
	  <row>
	    <entry>Chow (structural break)</entry>
	    <entry><command>chow</command></entry>
	  </row>
	  <row>
	    <entry>CUSUM (parameter stability)</entry>
	    <entry><command>cusum</command></entry>
	  </row>
	  <row>
	    <entry>ARCH (conditional heteroskedasticity)</entry>
	    <entry><command>arch</command></entry>
	  </row>
	  <row>
	    <entry>Normality of residual</entry>
	    <entry><command>testuhat</command></entry>
	  </row>
	  <row>
	    <entry>Panel diagnostics</entry>
	    <entry><command>hausman</command></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>

  </sect1>	

  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
sgml-default-dtd-file:"../manual.ced"
mode: xml
sgml-parent-document:("../manual.xml" "book" "chapter")
End:
-->

