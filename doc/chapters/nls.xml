<?PSGML NOFILL programlisting example informalequation?>

  <chapter id="nlschap"><title>Nonlinear least squares</title>

  <sect1 id="nls-intro"><title>Introduction</title>

    <para>
      As of version 1.0.9, <application>gretl</application> supports
      nonlinear least squares (NLS) using a variant of the
      Levenberg&ndash;Marquandt algorithm.  The user must supply a
      specification of the regression function; prior to giving this
      specification the parameters to be estimated must be
      <quote>declared</quote> and given initial values.  Optionally,
      the user may supply analytical derivatives of the regression
      function with respect to each of the parameters.  The tolerance
      (criterion for terminating the iterative estimation procedure)
      can be set using the <command>genr</command> command.</para>

  </sect1>

  <sect1 id="func-spec"><title>Examples of function specification</title>

    <para>The syntax for specifying the function to be estimated is
    the same as for the <command>genr</command> command.  Here are two
    examples, with accompanying derivatives.</para>

    <example id="nls-cons"><title>Consumption function from
	  Greene</title>
	<programlisting>
	  nls C = alpha + beta * Y^gamma
	  deriv alpha = 1
	  deriv beta = Y^gamma
	  deriv gamma = beta * Y^gamma * log(Y)
	  end nls
	</programlisting>
    </example>

    <example id="nls-ects"><title>From Russell Davidson</title>
	<programlisting>
	  nls y = alpha + beta * x1 + (1/beta) * x2
	  deriv alpha = 1
	  deriv beta = x1 - x2/(beta*beta)
	  end nls
	</programlisting>
    </example> 

    <para>
      Note the command words <command>nls</command> (which introduces
      the regression function), <command>deriv</command> (which
      introduces the specification of a derivative), and <command>end
      nls</command>, which terminates the specification and calls for
      estimation. If the <command>-o</command> flag is appended to the
      last line the covariance matrix of the parameter estimates is
      printed.</para>

  </sect1>

  <sect1 id="nls-param"><title>Initializing the parameters</title>

    <para>The parameters of the regression function must be given
      initial values prior to the <command>nls</command> command.
      This can be done using the <command>genr</command> command (or,
      in the GUI program, via the menu item <quote>Define new
	variable</quote>).  In some cases, where the nonlinear
      function is a generalization of (or a restricted form of) a
      linear model, it may be convenient to run an
      <command>ols</command> and initialize the parameters from the
      OLS coefficient estimates.  In relation to the first example
      above, one might do:</para>

    <programlisting>
      ols C 0 Y
      genr alpha = coeff(0)
      genr beta = coeff(Y)
      genr gamma = 1
    </programlisting>

    <para>And in relation to the second example one might do:</para>

    <programlisting>
      ols y 0 x1 x2
      genr alpha = coeff(0)
      genr beta = coeff(x1)
    </programlisting> 

  </sect1>

  <sect1 id="nls-gui"><title>NLS dialog window</title>

    <para>
      It is probably most convenient to compose the commands for NLS
      estimation in the form of a <application>gretl</application>
      script but you can also do so interactively, by selecting the
      item <quote>Nonlinear Least Squares</quote> under the Model
      menu.  This opens a dialog box where you can type the function
      specification (possibly prefaced by <command>genr</command>
      lines to set the initial parameter values) and the derivatives,
      if available.  An example of this is shown in <xref
	linkend="fig-nls-dialog"/>.  Note that in this context you do
      not have to supply the <command>nls</command> and <command>end
      nls</command> tags.</para>

    <figure id="fig-nls-dialog" float="1" pgwide="1">
      <title>NLS dialog box</title>
      <screenshot>
        <screeninfo>Nonlinear least squares dialog</screeninfo>
        <graphic fileref="figures/nls_window" align="center"/>
      </screenshot>
    </figure>

  </sect1>


   <sect1 id="nls-deriv"><title>Analytical and numerical derivatives</title>

    <para>If you are able to figure out the derivatives of the
      regression function with respect to the parameters, it is
      advisable to supply those derivatives as shown in the examples
      above.  If that is not possible,
      <application>gretl</application> will compute approximate
      numerical derivatives.  The convergence properties of the NLS
      algorithm may not be so good in this case.</para>

    <para>If analytical derivatives are supplied, they are checked for
      consistency with the given nonlinear function.  If the
      derivatives are clearly incorrect estimation is aborted with an
      error message.  If the derivatives are <quote>suspicious</quote>
      a warning message is issued but estimation proceeds.  This
      warning may sometimes be triggered by incorrect derivatives, but
      it may also be triggered by a high degree of collinearity among
      the derivatives.</para>

    <para>Note that you cannot mix analytical and numerical
      derivatives: you should supply expressions for all of the
      derivatives or none.</para>

  </sect1>
    
   <sect1 id="nls-toler"><title>Controlling termination</title>

    <para>The NLS estimation procedure is an iterative process.
      Iteration is terminated when a convergence criterion is met or
      when a set maximum number of iterations is reached, whichever
      comes first.  The maximum number of iterations is
      <command>100*(k+1)</command> when analytical derivatives are
      given and <command>200*(k+1)</command> when numerical
      derivatives are used, where <varname>k</varname> denotes the
      number of parameters being estimated.  The convergence criterion
      is that the relative error in the sum of squares, and/or the
      relative error between the the coefficient vector and the
      solution, is estimated to be no larger than some small value.
      This <quote>small value</quote> is by default the square root of
      the machine precision, but it can be set with the
      <command>genr</command> command using the special variable
      <varname>toler</varname>.  For example</para>

    <programlisting>genr toler = .0001</programlisting> 

    <para>will relax the tolerance to 0.0001.</para>

  </sect1>

   <sect1 id="nls-code"><title>Details on the code</title>  

    <para>The underlying engine for NLS estimation is based on the
      <application>minpack</application> suite of functions, available
      from <ulink
	url="http://www.netlib.org/minpack/">netlib.org</ulink>.
      Specifically, the following <application>minpack</application>
      functions are called:</para>

    <itemizedlist>
      <listitem><para><filename>lmder</filename>: 
	  Levenberg&ndash;Marquandt algorithm with analytical
	  derivatives.</para></listitem>
      <listitem><para><filename>chkder</filename>: For checking the
	  supplied analytical derivatives.</para></listitem>
      <listitem><para><filename>lmdif</filename>: 
	  Levenberg&ndash;Marquandt algorithm with numerical
	  derivatives.</para></listitem>
      <listitem><para><filename>fdjac2</filename>: Compute the
	  final approximate Jacobian when using numerical
	  derivatives.</para></listitem>
      <listitem><para><filename>dpmpar</filename>: Determine the
	  machine precision.</para></listitem>
      </itemizedlist>

    <para>On successful completion of the Levenberg&ndash;Marquandt
	iteration, a Gauss&ndash;Newton regression is used to
	calculate the covariance matrix for the parameter estimates.
	Since NLS results are asymptotic, there is room for debate
	over whether or not a correction for degrees of freedom should
	be applied when calculating the standard error of the
	regression (and the standard errors of the parameter
	estimates).  For comparability with OLS, and in light of the
	reasoning given in Davidson and MacKinnon (1993), the
	estimates shown in <application>gretl</application>
	<emphasis>do</emphasis> use a degrees of freedom
	correction.</para>

  </sect1>

  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
sgml-default-dtd-file:"../manual.ced"
mode: xml
sgml-parent-document:("../manual.xml" "book" "chapter")
End:
-->

