# Example script for sign restrictions in gretl's SVAR addon

###
### example with exotic restrictions
###

set verbose off
include SVAR.gfn

### supply & demand (artificial example)

nulldata 240
setobs 12 1:1
set seed 123123

b = -0.8 # demand elasticity
c =  1.1 # supply elasticity

Gamma = {1, -c; -b, 1}
iG = inv(Gamma)
U = 3 + filter(mnormal($nobs, 2), 1, 0.8)
Y = U * iG'
series p = Y[,1]
series q = Y[,2]
list X = p q

# set up the model

list W = const
scalar order = 1

bundle mod = SVAR_setup("plain", X, W, order, 0)
err = SVAR_estimate(&mod,0) # just needed for the VAR parameters, really

# set up the sign restictions

mod.snames[1] = "Supply"
mod.snames[2] = "Demand"

# instantaneous restrictions

SVAR_SRplain(&mod, "p", "Supply", "-")  # supply shock brings price down
SVAR_SRplain(&mod, "q", "Supply", "+")  # and quantity up
SVAR_SRplain(&mod, "p", "Demand", "+")  # demand shock pushes price up
SVAR_SRplain(&mod, "q", "Demand", "+")  # demand shock effect on quantity is pos.

# now try an an "exotic" restriction, that is: supply and demand 
# price elasticities should be "about the same" up to lag 4

exostring = "(-M[1,1]/M[2,1] > 0.667) && (-M[1,1]/M[2,1] < 1.5)"
SVAR_SRexotic(&mod, exostring, 4)

# do the rotations (this is the computationally intensive part)
bundles moo = SVAR_setidIRF(mod, 100, 0)

# look at the IRFs as a check

loop i = 1..10 --quiet
    loop t = 1..5 --quiet
        printf "M[%d] =\n%6.3f\n", t, moo[i].irfs[t]
    endloop
    print ""
endloop
