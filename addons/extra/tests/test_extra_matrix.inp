set warnings off
set verbose off
set assert stop
clear

include "../extra.inp" --force


bundles Params = null
Params = Params + _(from = {1}, h = 0,\
                    expected = {NA}, error_expected = 2)
Params = Params + _(from = {1}, h = 2,\
                    expected = {NA}, error_expected = 0)
Params = Params + _(from = {1}, h = 1,\
                    expected = {1}, error_expected = 0)
Params = Params + _(from = {1,2,3}, h = 1,\
                    expected = {1; 2; 3}, error_expected = 0)
Params = Params + _(from = {1,2,3}, h = 2,\
                    expected = {1, 2; 1, 3; 2, 3}, error_expected = 0)


function void test_combinations (const bundles P)
  print "Start testing function combinations()."

  loop foreach i P
    # Given
    matrix expected = vec(P[i].expected)
    scalar error_expected = vec(P[i].error_expected)

    # When
    catch matrix actual = vec(combinations(P[i].from, P[i].h))
    scalar actual_error = $error

    # Then
    assert(actual_error == error_expected)

    if error_expected == FALSE
      loop j=1..rows(actual)
        assert(actual[j] == expected[j])
      endloop
    endif

  endloop
end function
test_combinations(Params)



printf "\nInfo: All tests passed.\n"
