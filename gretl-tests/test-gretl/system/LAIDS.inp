### Script for LAIDS estimation
### description :
### estimation of Linear approximation AIDS of two shares : home energy (WLOG) and motorfuel (WCAR)
### Added three demographic variables : home rented, child dummy, automobile dummy
### in this version, a sample of 500 hundred observations has been randomly selected out of the full 10 305 dataset 

open AIDS_data_set.gdt

### list of three socio-demographic variables
list socdemo = 12 18 19
#### SUR estimation of the system with symmetry in price imposed by the restrict command
LAIDS <- system
equation WLOG const lnPLOGCOMP lnPCARBCOMP lnDEPTOTR socdemo  
equation WCAR const lnPLOGCOMP lnPCARBCOMP lnDEPTOTR socdemo
instr const lnPLOGCOMP lnPCARBCOMP 8 socdemo
end system
estimate LAIDS method=sur --iterate
matrix B = $coeff
matrix YH = $yhat
print B
restrict LAIDS
b[1,3]-b[2,2]=0
end restrict
estimate LAIDS method=sur --iterate

### post estimation computation of fitted values and elasticities
### Note : elasticities computed at fitted shares using the Chalfant (1987) approximation
### Income Elasticity :=> ei = 1 + beta[i]/ what[i,h]
### price elasticity :=> eij = (gamma[i,j]/what[i,h]) + beta[i]*what[j,h]/what[i,h] + delta[i,j]
### indexes = i,j goods i and j (home energy, motorfuel) h = households (h = 1..500)
### each household has one personal elasticities which are then summarized by summation/and or agregation (relative weights)
### here i compute only income elasticity for brievity. 

### calling results for elasticity computations.
scalar nbobs=$nobs
matrix resij=$uhat
matrix V=$vcv[1:14,1:14]
V
### Allin: print raw coeff matrix
matrix B = $coeff
print B
### I extract the coefficients of each separate equation to compute an estimated coefficients matrix ("coeffaids")
matrix betalog=$coeff[1:7]
matrix betacar=$coeff[8:14]
matrix coeffaids=betalog~betacar
### recalling estimated coefficients as a matrix {equ1 , equ2}
coeffaids
### computing fitted values by matrix computation
list data_aids = 0 lnPLOGCOMP lnPCARBCOMP lnDEPTOTR socdemo
matrix datacomp = {data_aids}
matrix what = datacomp*coeffaids

### what = matrix of fitted values for each equation
### I intend next to use what[,i] to compute households elasticities by matrix functions

### computing households elasticities using genr == > this code is OK 
series yhat_s01 = YH[,1]
series yhat_s02 = YH[,2]
genr elr_log=1+(1/yhat_s01)*$coeff[4]
genr elr_car=1+(1/yhat_s02)*$coeff[11]
matrix melrlog=mean(elr_log)
matrix melrcar=mean(elr_car)
matrix merl=melrlog~melrcar
### listing the values of the mean income elasticities
merl

#### Alternative approach
matrix vecun = ones(nbobs,1)
matrix wloghat = what[,1]
scalar tmp = coeffaids[4,1]
matrix erlog = vecun + tmp./wloghat
matrix wcarhat = what[,2]
scalar tmp = coeffaids[4,2]
matrix ercar = vecun + tmp./wcarhat 
matrix erij = erlog~ercar
matrix er=meanc(erij)
er

